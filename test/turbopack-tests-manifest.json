{
  "packages/font/src/google/find-font-files-in-css.test.ts": {
    "passed": [
      "findFontFilesInCss should find all font files and preload requested subsets",
      "findFontFilesInCss should not return duplicate font files when several variants use the same font file"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/font/src/google/get-font-axes.test.ts": {
    "passed": [
      "getFontAxes errors Invalid axes value",
      "getFontAxes errors Invalid value in axes array",
      "getFontAxes errors Setting axes on font without definable axes"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/font/src/google/loader.test.ts": {
    "passed": [
      "next/font/google loader URL from options Albert_Sans",
      "next/font/google loader URL from options Ballet",
      "next/font/google loader URL from options Fraunces",
      "next/font/google loader URL from options Inter",
      "next/font/google loader URL from options Molle",
      "next/font/google loader URL from options Nabla",
      "next/font/google loader URL from options Oooh_Baby",
      "next/font/google loader URL from options Poppins",
      "next/font/google loader URL from options Roboto",
      "next/font/google loader URL from options Roboto Mono",
      "next/font/google loader URL from options Roboto_Flex",
      "next/font/google loader URL from options Source_Sans_3"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/font/src/google/sort-fonts-variant-values.test.ts": {
    "passed": [
      "sortFontsVariantValues should correctly compare and return result for comma-separated values",
      "sortFontsVariantValues should correctly compare and return result for plain integer values",
      "sortFontsVariantValues should sort an array of plain integer values correctly",
      "sortFontsVariantValues should sort an array of values with comma-separated values correctly"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/font/src/google/validate-google-font-function-call.test.ts": {
    "passed": [
      "validateFontFunctionCall errors Invalid display value",
      "validateFontFunctionCall errors Invalid subset in call",
      "validateFontFunctionCall errors Missing function name",
      "validateFontFunctionCall errors Missing subsets in config and call",
      "validateFontFunctionCall errors Missing weight for non variable font",
      "validateFontFunctionCall errors Setting axes on non variable font",
      "validateFontFunctionCall errors Unknown font",
      "validateFontFunctionCall errors Unknown style",
      "validateFontFunctionCall errors Unknown weight",
      "validateFontFunctionCall errors Variable in weight array"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/font/src/local/loader.test.ts": {
    "passed": [
      "next/font/local loader generated CSS Default CSS",
      "next/font/local loader generated CSS Multiple styles default weight",
      "next/font/local loader generated CSS Multiple weights default style",
      "next/font/local loader generated CSS Other properties",
      "next/font/local loader generated CSS Weight and style"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/font/src/local/pick-font-file-for-fallback-generation.test.ts": {
    "passed": [
      "pickFontFileForFallbackGeneration Invalid variable weight in array",
      "pickFontFileForFallbackGeneration should error on invalid weight in array",
      "pickFontFileForFallbackGeneration should pick the thinner weight if both have the same distance to 400",
      "pickFontFileForFallbackGeneration should pick the weight closest to 400",
      "pickFontFileForFallbackGeneration should pick variable range closest to 400",
      "pickFontFileForFallbackGeneration should prefer normal style over italic"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/font/src/local/validate-local-font-function-call.test.ts": {
    "passed": [
      "validateLocalFontFunctionCall Empty src array",
      "validateLocalFontFunctionCall Invalid declaration",
      "validateLocalFontFunctionCall Invalid display value",
      "validateLocalFontFunctionCall Invalid file extension",
      "validateLocalFontFunctionCall Missing src",
      "validateLocalFontFunctionCall Not using default export"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/build/webpack/loaders/metadata/resolve-route-data.test.ts": {
    "passed": [
      "resolveRouteData resolveRobots should error with ts when specify both wildcard userAgent and specific userAgent",
      "resolveRouteData resolveRobots should resolve robots.txt",
      "resolveRouteData resolveSitemap should resolve sitemap.xml"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/build/webpack/plugins/next-types-plugin/index.test.ts": {
    "passed": [
      "next-types-plugin should generate correct base import path",
      "next-types-plugin should generate correct base import path for custom projects",
      "next-types-plugin should generate correct base import path for nx monorepos"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/client/components/navigation.test.ts": {
    "passed": [
      "next/navigation should be able to construct URLSearchParams from ReadonlyURLSearchParams"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/client/components/promise-queue.test.ts": {
    "passed": [
      "PromiseQueue should allow bumping a promise to be next in the queue",
      "PromiseQueue should limit the number of concurrent promises"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/client/components/react-dev-overlay/internal/components/hot-linked-text/get-words-and-whitespaces.test.ts": {
    "passed": [
      "getWordsAndWhitespaces should return sequences of words and whitespaces"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/client/components/redirect.test.ts": {
    "passed": ["test should throw a redirect error"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/client/components/router-reducer/apply-router-state-patch-to-tree.test.tsx": {
    "passed": ["applyRouterStatePatchToTree should apply a patch to the tree"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/client/components/router-reducer/compute-changed-path.test.ts": {
    "passed": ["computeChangedPath should return the correct path"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/client/components/router-reducer/create-href-from-url.test.ts": {
    "passed": [
      "createHrefFromUrl adds hash",
      "createHrefFromUrl adds pathname",
      "createHrefFromUrl adds pathname, searchParams, and hash",
      "createHrefFromUrl adds searchParams",
      "createHrefFromUrl returns a string"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/client/components/router-reducer/create-initial-router-state.test.tsx": {
    "passed": [
      "createInitialRouterState should return the correct initial router state"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/client/components/router-reducer/create-optimistic-tree.test.ts": {
    "passed": ["createOptimisticTree should create an optimistic tree"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/client/components/router-reducer/create-record-from-thenable.test.ts": {
    "passed": [
      "createRecordFromThenable rejecting promise",
      "createRecordFromThenable successful promise"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/client/components/router-reducer/create-router-cache-key.test.ts": {
    "passed": [
      "createRouterCacheKey should support catch all segment",
      "createRouterCacheKey should support dynamic segment",
      "createRouterCacheKey should support string segment"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/client/components/router-reducer/fill-cache-with-data-property.test.tsx": {
    "passed": ["fillCacheWithDataProperty should add data property"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/client/components/router-reducer/fill-cache-with-new-subtree-data.test.tsx": {
    "passed": [
      "fillCacheWithNewSubtreeData should apply subTreeData and head property"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/client/components/router-reducer/fill-lazy-items-till-leaf-with-head.test.tsx": {
    "passed": [
      "fillLazyItemsTillLeafWithHead should fill lazy items till leaf with head"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/client/components/router-reducer/get-segment-value.test.ts": {
    "passed": [
      "getSegmentValue should support catch all segment",
      "getSegmentValue should support dynamic segment",
      "getSegmentValue should support string segment"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/client/components/router-reducer/invalidate-cache-below-flight-segmentpath.test.tsx": {
    "passed": [
      "invalidateCacheBelowFlightSegmentPath should invalidate cache below flight segment path"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/client/components/router-reducer/invalidate-cache-by-router-state.test.tsx": {
    "passed": [
      "invalidateCacheByRouterState should invalidate the cache by router state"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/client/components/router-reducer/is-navigating-to-new-root-layout.test.ts": {
    "passed": [
      "shouldHardNavigate should return false if there is no new root layout",
      "shouldHardNavigate should return true if there is a mismatch between the root layouts"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/client/components/router-reducer/read-record-value.test.ts": {
    "passed": [
      "readRecordValue rejecting promise",
      "readRecordValue successful promise"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/client/components/router-reducer/reducers/find-head-in-cache.test.tsx": {
    "passed": ["findHeadInCache should find the head"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/client/components/router-reducer/reducers/navigate-reducer.test.tsx": {
    "passed": [
      "navigateReducer should apply navigation",
      "navigateReducer should apply navigation for external url (push)",
      "navigateReducer should apply navigation for external url (replace)",
      "navigateReducer should apply navigation for forceOptimisticNavigation",
      "navigateReducer should apply navigation for hash fragments within a different tree",
      "navigateReducer should apply navigation for hash fragments within the same tree",
      "navigateReducer should apply navigation for scroll",
      "navigateReducer should apply navigation when called twice (concurrent)",
      "navigateReducer should apply navigation with prefetched data",
      "navigateReducer should apply parallel routes navigation (concurrent)"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/client/components/router-reducer/reducers/prefetch-reducer.test.tsx": {
    "passed": [
      "prefetchReducer should apply navigation",
      "prefetchReducer should apply navigation (concurrent)"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/client/components/router-reducer/reducers/refresh-reducer.test.tsx": {
    "passed": [
      "refreshReducer should apply refresh",
      "refreshReducer should apply refresh (concurrent)",
      "refreshReducer should invalidate all segments (concurrent)",
      "refreshReducer should invalidate prefetchCache (concurrent)"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/client/components/router-reducer/reducers/restore-reducer.test.tsx": {
    "passed": [
      "serverPatchReducer should apply server patch",
      "serverPatchReducer should apply server patch (concurrent)"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/client/components/router-reducer/reducers/server-patch-reducer.test.tsx": {
    "passed": [
      "serverPatchReducer should apply server patch",
      "serverPatchReducer should apply server patch (concurrent)",
      "serverPatchReducer should apply server patch without affecting focusAndScrollRef"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/client/components/router-reducer/should-hard-navigate.test.tsx": {
    "passed": [
      "shouldHardNavigate should return false if segments are dynamic and match",
      "shouldHardNavigate should return false if the segments match",
      "shouldHardNavigate should return true if segments are dynamic and mismatch"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/lib/format-server-error.test.ts": {
    "passed": ["formatServerError should not append message several times"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/lib/metadata/resolve-metadata.test.ts": {
    "passed": [
      "accumulateMetadata alternate should support alternate descriptors",
      "accumulateMetadata alternate should support string alternate",
      "accumulateMetadata icon should resolve icons.apple",
      "accumulateMetadata icon should resolve icons.icon correctly",
      "accumulateMetadata itunes should resolve relative url starting with ./ with pathname for itunes.appArgument",
      "accumulateMetadata openGraph and twitter should convert string or URL images field to array, not only for basic og type",
      "accumulateMetadata openGraph and twitter should fill only the existing props from openGraph to twitter",
      "accumulateMetadata openGraph and twitter should fill twitter with partial existing openGraph metadata",
      "accumulateMetadata openGraph and twitter should override openGraph or twitter images when current layer specifies social images properties",
      "accumulateMetadata openGraph and twitter should resolve relative url starting with ./ with pathname for openGraph.url",
      "accumulateMetadata themeColor should support string theme color",
      "accumulateMetadata themeColor should support theme color descriptors",
      "accumulateMetadata title should merge title with page title",
      "accumulateMetadata title should merge title with parent layout ",
      "accumulateMetadata typing should support both sync and async metadata",
      "accumulateMetadata viewport should support string viewport",
      "accumulateMetadata viewport should support viewport descriptors"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/lib/metadata/resolvers/resolve-opengraph.test.ts": {
    "passed": [
      "resolveImages should filter out invalid images",
      "resolveImages should not mutate passed images",
      "resolveImages should resolve images"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/lib/metadata/resolvers/resolve-title.test.ts": {
    "passed": [
      "resolveTitle should resolve nullable template as empty string title",
      "resolveTitle should resolve title with template"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/lib/metadata/resolvers/resolve-url.test.ts": {
    "passed": [
      "metadata: resolveUrl should compose with metadataBase when url is relative or absolute",
      "metadata: resolveUrl should ignore metadataBase when url is valid URL",
      "metadata: resolveUrl should return null when url is falsy",
      "metadata: resolveUrl should return url itself when metadataBase is null or url is valid URL"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/server/dev/parse-version-info.test.ts": {
    "passed": [
      "parse version info installed: 12.0.0, latest: 13.1.1, canary: 13.0.1-canary.0 yields stale-major",
      "parse version info installed: 13.0.0, latest: 12.0.0, canary: 12.0.1-canary.0 yields newer-than-npm",
      "parse version info installed: 13.0.0, latest: 13.1.0, canary: 13.1.1-canary.0 yields stale-minor",
      "parse version info installed: 13.0.0, latest: 13.1.0, canary: invalid yields unknown",
      "parse version info installed: 13.0.0, latest: invalid, canary: 13.0.1-canary.0 yields unknown",
      "parse version info installed: 13.0.1-canary.0, latest: 13.0.0, canary: 13.0.1-canary.1 yields stale-prerelease",
      "parse version info installed: 13.0.1-canary.0, latest: 13.0.0, canary: 13.1.0-canary.0 yields stale-prerelease",
      "parse version info installed: 13.0.1-canary.8, latest: 13.0.0, canary: 13.0.1-canary.7 yields newer-than-npm",
      "parse version info installed: 13.1.0, latest: 13.1.0, canary: 13.1.1-canary.0 yields fresh",
      "parse version info installed: 13.1.1, latest: 13.1.2, canary: 13.1.3-canary.0 yields stale-patch",
      "parse version info installed: 13.1.1-canary.7, latest: 13.1.0, canary: 13.1.1-canary.7 yields fresh",
      "parse version info installed: invalid, latest: 13.0.1, canary: 13.0.1-canary.0 yields unknown"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/server/future/helpers/i18n-provider.test.ts": {
    "passed": [
      "I18NProvider analyze for pathname / and defaultLocale en",
      "I18NProvider analyze for pathname /another/page and defaultLocale en",
      "I18NProvider analyze for pathname /en and defaultLocale en",
      "I18NProvider analyze for pathname /en-CA and defaultLocale en",
      "I18NProvider analyze for pathname /en-CA/another/page and defaultLocale en",
      "I18NProvider analyze for pathname /en/another/page and defaultLocale en",
      "I18NProvider analyze for pathname /fr and defaultLocale en",
      "I18NProvider analyze for pathname /fr/another/page and defaultLocale en",
      "I18NProvider detectDomainLocale for domain example.ca",
      "I18NProvider detectDomainLocale for domain example.com",
      "I18NProvider detectDomainLocale for domain example.de",
      "I18NProvider detectDomainLocale for domain example.fr",
      "I18NProvider should detect the correct domain locale"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/server/future/helpers/interception-routes.test.ts": {
    "passed": [
      "Interception Route helper extractInterceptionRouteInformation should check the segment length",
      "Interception Route helper extractInterceptionRouteInformation should extract correct information",
      "Interception Route helper extractInterceptionRouteInformation should not extract incorrect information",
      "Interception Route helper isInterceptionRouteAppPath should not validate incorrect paths",
      "Interception Route helper isInterceptionRouteAppPath should validate correct paths"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/server/future/normalizers/absolute-filename-normalizer.test.ts": {
    "passed": [
      "AbsoluteFilenameNormalizer normalizes '<root>/app/basic/(grouped)/endpoint/nested/route.ts' to '/basic/(grouped)/endpoint/nested/route'",
      "AbsoluteFilenameNormalizer normalizes '<root>/pages/basic/endpoint/index.ts' to '/basic/endpoint'",
      "AbsoluteFilenameNormalizer normalizes '<root>/pages/basic/endpoint/nested.ts' to '/basic/endpoint/nested'"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/server/future/route-matcher-managers/default-route-matcher-manager.test.ts": {
    "passed": [
      "DefaultRouteMatcherManager calls the locale route matcher when one is provided",
      "DefaultRouteMatcherManager can handle locale aware matchers for /en-US/some/path and locale en-US",
      "DefaultRouteMatcherManager can handle locale aware matchers for /nl-NL/some/path and locale nl-NL",
      "DefaultRouteMatcherManager can handle locale aware matchers for /some/path and locale {\"inferredFromDefault\": false, \"pathname\": \"/some/path\"}",
      "DefaultRouteMatcherManager will match a route that is not locale aware when it was inferred from the default locale",
      "DefaultRouteMatcherManager will not error and not match when no matchers are provided",
      "DefaultRouteMatcherManager will throw an error when used before it has been reloaded"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/server/future/route-matcher-providers/app-page-route-matcher-provider.test.ts": {
    "passed": [
      "AppPageRouteMatcherProvider manifest matching returns the correct routes for /",
      "AppPageRouteMatcherProvider manifest matching returns the correct routes for /about",
      "AppPageRouteMatcherProvider manifest matching returns the correct routes for /dashboard/users",
      "AppPageRouteMatcherProvider manifest matching returns the correct routes for /dashboard/users/[id]",
      "AppPageRouteMatcherProvider returns no routes with an empty manifest"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/server/future/route-matcher-providers/app-route-route-matcher-provider.test.ts": {
    "passed": [
      "AppRouteRouteMatcherProvider manifest matching returns the correct routes for /",
      "AppRouteRouteMatcherProvider manifest matching returns the correct routes for /users",
      "AppRouteRouteMatcherProvider manifest matching returns the correct routes for /users/[id]",
      "AppRouteRouteMatcherProvider returns no routes with an empty manifest"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/server/future/route-matcher-providers/dev/dev-app-page-route-matcher-provider.test.ts": {
    "passed": [
      "DevAppPageRouteMatcher filename matching matches the '/(marketing)/about/page' route specified with the provided files",
      "DevAppPageRouteMatcher filename matching matches the '/page' route specified with the provided files",
      "DevAppPageRouteMatcher filename matching matches the '/some/other/page' route specified with the provided files",
      "DevAppPageRouteMatcher returns no routes with an empty filesystem"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/server/future/route-matcher-providers/dev/dev-app-route-route-matcher-provider.test.ts": {
    "passed": [
      "DevAppRouteRouteMatcher filename matching matches the '/route' route specified with the provided files",
      "DevAppRouteRouteMatcher filename matching matches the '/some/other/route' route specified with the provided files",
      "DevAppRouteRouteMatcher returns no routes with an empty filesystem"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/server/future/route-matcher-providers/dev/dev-pages-api-route-matcher-provider.test.ts": {
    "passed": [
      "DevPagesAPIRouteMatcherProvider filename matching matches the '/api' route specified with the provided files",
      "DevPagesAPIRouteMatcherProvider filename matching matches the '/api/other' route specified with the provided files",
      "DevPagesAPIRouteMatcherProvider filename matching matches the '/api/other/route' route specified with the provided files",
      "DevPagesAPIRouteMatcherProvider returns no routes with an empty filesystem"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/server/future/route-matcher-providers/dev/dev-pages-route-matcher-provider.test.ts": {
    "passed": [
      "DevPagesRouteMatcherProvider filename matching matches the '/' route specified with the provided files",
      "DevPagesRouteMatcherProvider filename matching matches the '/some/api/route' route specified with the provided files",
      "DevPagesRouteMatcherProvider filename matching matches the '/some/other/route' route specified with the provided files",
      "DevPagesRouteMatcherProvider filename matching matches the '/some/other/route/index/route' route specified with the provided files",
      "DevPagesRouteMatcherProvider returns no routes with an empty filesystem"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/server/future/route-matcher-providers/dev/helpers/file-reader/batched-file-reader.test.ts": {
    "passed": [
      "CachedFileReader will only scan the filesystem a minimal amount of times",
      "CachedFileReader will send an error back only to the correct reader"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/server/future/route-matcher-providers/pages-api-route-matcher-provider.test.ts": {
    "passed": [
      "PagesAPIRouteMatcherProvider manifest matching returns the correct routes for /api",
      "PagesAPIRouteMatcherProvider manifest matching returns the correct routes for /api/users",
      "PagesAPIRouteMatcherProvider manifest matching returns the correct routes for /api/users/[id]",
      "PagesAPIRouteMatcherProvider returns no routes with an empty manifest"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/server/future/route-matcher-providers/pages-route-matcher-provider.test.ts": {
    "passed": [
      "PagesRouteMatcherProvider locale matching locale has the match for /",
      "PagesRouteMatcherProvider locale matching locale has the match for /404",
      "PagesRouteMatcherProvider locale matching locale has the match for /blog/[slug]",
      "PagesRouteMatcherProvider manifest matching returns the correct routes for /",
      "PagesRouteMatcherProvider manifest matching returns the correct routes for /users",
      "PagesRouteMatcherProvider manifest matching returns the correct routes for /users/[id]",
      "PagesRouteMatcherProvider returns no routes with an empty manifest"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/server/lib/mock-request.test.ts": {
    "passed": [
      "MockedRequest should have the correct properties",
      "MockedResponse should handle set-cookie headers correctly",
      "MockedResponse should merge headers correctly when calling writeHead",
      "MockedResponse should update the statusMessage after calling writeHead"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/server/node-polyfill-crypto.test.ts": {
    "passed": ["node-polyfill-crypto overwrite crypto"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/server/web/spec-extension/adapters/headers.test.ts": {
    "passed": [
      "HeadersAdapter case-insensitive should handle different case for header names",
      "HeadersAdapter case-insensitive should handle different case for header names when mutated out of band",
      "HeadersAdapter entries should return an iterator of entries",
      "HeadersAdapter forEach should iterate over all entries",
      "HeadersAdapter iterator should iterate over all entries",
      "HeadersAdapter keys should return an iterator of keys",
      "HeadersAdapter sealed should be able to seal a Headers instance",
      "HeadersAdapter sealed should be able to seal a HeadersAdapter and still mutate the original",
      "HeadersAdapter sealed should be able to seal a HeadersAdapter instance",
      "HeadersAdapter should be able to create a new instance from a Headers",
      "HeadersAdapter should be able to create a new instance from a HeadersAdapter",
      "HeadersAdapter should be able to create a new instance from an IncomingHttpHeaders",
      "HeadersAdapter should be able to create a new instance from an object",
      "HeadersAdapter should handle multiple values for a header",
      "HeadersAdapter values should return an iterator of values"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/server/web/spec-extension/adapters/request-cookies.test.ts": {
    "passed": [
      "RequestCookiesAdapter should be able to create a new instance from a RequestCookies",
      "RequestCookiesAdapter should be able to create a new instance from an empty RequestCookies"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/server/web/utils.test.ts": {
    "passed": [
      "toNodeHeaders should handle a single set-cookie header correctly",
      "toNodeHeaders should handle a single set-cookie header with multiple cookies correctly",
      "toNodeHeaders should handle mixed case set-cookie headers correctly",
      "toNodeHeaders should handle multiple set-cookie headers correctly"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/shared/lib/get-hostname.test.ts": {
    "passed": [
      "getHostname from URL should return 127.0.0.1 for http://127.0.0.1",
      "getHostname from URL should return 127.0.0.1 for http://127.0.0.1/",
      "getHostname from URL should return 127.0.0.1 for http://127.0.0.1:3000",
      "getHostname from URL should return 8.8.8.8 for http://8.8.8.8",
      "getHostname from URL should return 8.8.8.8 for http://8.8.8.8/",
      "getHostname from URL should return 8.8.8.8 for http://8.8.8.8:3000",
      "getHostname from URL should return example.com for http://example.com",
      "getHostname from URL should return example.com for http://example.com/",
      "getHostname from URL should return example.com for http://example.com:3000",
      "getHostname from URL should return example.com for https://example.com",
      "getHostname from URL should return example.com for https://example.com/",
      "getHostname from URL should return example.com for https://example.com:3000",
      "getHostname from URL should return localhost for http://localhost",
      "getHostname from URL should return localhost for http://localhost/",
      "getHostname from URL should return localhost for http://localhost:3000",
      "getHostname should return undefined for empty input"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/shared/lib/router/adapters.test.tsx": {
    "passed": [
      "adaptForAppRouterInstance should forward a call to `back()`",
      "adaptForAppRouterInstance should forward a call to `forward()`",
      "adaptForAppRouterInstance should forward a call to `prefetch()`",
      "adaptForAppRouterInstance should forward a call to `push()`",
      "adaptForAppRouterInstance should forward a call to `push()` with options",
      "adaptForAppRouterInstance should forward a call to `reload()`",
      "adaptForAppRouterInstance should forward a call to `replace()`",
      "adaptForAppRouterInstance should forward a call to `replace()` with options"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/shared/lib/router/utils/app-paths.test.ts": {
    "passed": [
      "normalizeRscPath disabled should normalize url with .rsc",
      "normalizeRscPath disabled should normalize url with .rsc and searchparams",
      "normalizeRscPath enabled should normalize url with .rsc",
      "normalizeRscPath enabled should normalize url with .rsc and searchparams"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "packages/next/src/shared/lib/router/utils/route-regex.test.ts": {
    "passed": [
      "getNamedRouteRegex should handle interception markers adjacent to dynamic path segments",
      "getNamedRouteRegex should handle interception markers not adjacent to dynamic path segments",
      "getNamedRouteRegex should handle multi-level interception markers",
      "getNamedRouteRegex should handle optional catch-all dynamic path segments",
      "getNamedRouteRegex should handle optional dynamic path segments"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/acceptance-app/ReactRefresh.test.ts": {
    "passed": [
      "ReactRefresh app can edit a component without losing state",
      "ReactRefresh app cyclic dependencies"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/acceptance-app/ReactRefreshLogBox-builtins.test.ts": {
    "passed": [
      "ReactRefreshLogBox app turbo Module not found",
      "ReactRefreshLogBox app turbo Module not found empty import trace",
      "ReactRefreshLogBox app turbo Module not found missing global CSS",
      "ReactRefreshLogBox app turbo Node.js builtins"
    ],
    "failed": [],
    "pending": [
      "ReactRefreshLogBox app default Module not found",
      "ReactRefreshLogBox app default Module not found empty import trace",
      "ReactRefreshLogBox app default Module not found missing global CSS",
      "ReactRefreshLogBox app default Node.js builtins"
    ],
    "runtimeError": false
  },
  "test/development/acceptance-app/ReactRefreshLogBox-scss.test.ts": {
    "passed": [],
    "failed": ["ReactRefreshLogBox app scss syntax errors"],
    "pending": [],
    "runtimeError": false
  },
  "test/development/acceptance-app/ReactRefreshLogBox.test.ts": {
    "passed": [
      "ReactRefreshLogBox app turbo Can't resolve @import in CSS file",
      "ReactRefreshLogBox app turbo Import trace when module not found in layout",
      "ReactRefreshLogBox app turbo Server component errors should open up in fullscreen",
      "ReactRefreshLogBox app turbo Should not show __webpack_exports__ when exporting anonymous arrow function",
      "ReactRefreshLogBox app turbo Unhandled errors and rejections opens up in the minimized state",
      "ReactRefreshLogBox app turbo boundaries",
      "ReactRefreshLogBox app turbo module init error not shown",
      "ReactRefreshLogBox app turbo server component can recover from error thrown in the module",
      "ReactRefreshLogBox app turbo should strip whitespace correctly with newline"
    ],
    "failed": [
      "ReactRefreshLogBox app turbo Call stack count is correct for client error",
      "ReactRefreshLogBox app turbo Call stack count is correct for server error",
      "ReactRefreshLogBox app turbo client component can recover from error thrown in the module",
      "ReactRefreshLogBox app turbo conversion to class component (1)",
      "ReactRefreshLogBox app turbo css syntax errors",
      "ReactRefreshLogBox app turbo logbox: anchors links in error messages",
      "ReactRefreshLogBox app turbo unterminated JSX"
    ],
    "pending": [
      "ReactRefreshLogBox app default Call stack count is correct for client error",
      "ReactRefreshLogBox app default Call stack count is correct for server error",
      "ReactRefreshLogBox app default Can't resolve @import in CSS file",
      "ReactRefreshLogBox app default Import trace when module not found in layout",
      "ReactRefreshLogBox app default Server component errors should open up in fullscreen",
      "ReactRefreshLogBox app default Should not show __webpack_exports__ when exporting anonymous arrow function",
      "ReactRefreshLogBox app default Unhandled errors and rejections opens up in the minimized state",
      "ReactRefreshLogBox app default boundaries",
      "ReactRefreshLogBox app default client component can recover from error thrown in the module",
      "ReactRefreshLogBox app default conversion to class component (1)",
      "ReactRefreshLogBox app default css syntax errors",
      "ReactRefreshLogBox app default internal package errors",
      "ReactRefreshLogBox app default logbox: anchors links in error messages",
      "ReactRefreshLogBox app default module init error not shown",
      "ReactRefreshLogBox app default non-Error errors are handled properly",
      "ReactRefreshLogBox app default server component can recover from error thrown in the module",
      "ReactRefreshLogBox app default should strip whitespace correctly with newline",
      "ReactRefreshLogBox app default unterminated JSX",
      "ReactRefreshLogBox app turbo internal package errors",
      "ReactRefreshLogBox app turbo non-Error errors are handled properly"
    ],
    "runtimeError": false
  },
  "test/development/acceptance-app/ReactRefreshLogBoxMisc.test.ts": {
    "passed": [],
    "failed": [],
    "pending": [
      "ReactRefreshLogBox app <Link> component props errors",
      "ReactRefreshLogBox app <Link> with multiple children",
      "ReactRefreshLogBox app server-side only compilation errors"
    ],
    "runtimeError": false
  },
  "test/development/acceptance-app/ReactRefreshModule.test.ts": {
    "passed": [],
    "failed": ["ReactRefreshModule app should allow any variable names"],
    "pending": [],
    "runtimeError": false
  },
  "test/development/acceptance-app/ReactRefreshRegression.test.ts": {
    "passed": [
      "ReactRefreshRegression app can fast refresh a page with config",
      "ReactRefreshRegression app can fast refresh a page with dynamic rendering"
    ],
    "failed": [
      "ReactRefreshRegression app can fast refresh a page with static generation",
      "ReactRefreshRegression app custom loader mdx should have Fast Refresh enabled",
      "ReactRefreshRegression app shows an overlay for anonymous function server-side error",
      "ReactRefreshRegression app shows an overlay for server-side error in client component",
      "ReactRefreshRegression app shows an overlay for server-side error in server component"
    ],
    "pending": [
      "ReactRefreshRegression app styled-components hydration mismatch"
    ],
    "runtimeError": false
  },
  "test/development/acceptance-app/app-hmr-changes.test.ts": {
    "passed": [],
    "failed": [
      "Error overlay - RSC build errors should handle successive HMR changes with errors correctly"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/development/acceptance-app/component-stack.test.ts": {
    "passed": [],
    "failed": [
      "Component Stack in error overlay should show a component stack on hydration error"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/development/acceptance-app/dynamic-error.test.ts": {
    "passed": [
      "dynamic = \"error\" in devmode should show error overlay when dynamic is forced"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/acceptance-app/editor-links.test.ts": {
    "passed": [],
    "failed": [
      "Error overlay - editor links should be possible to open import trace files on RSC parse error",
      "Error overlay - editor links should be possible to open import trace files on module not found error",
      "Error overlay - editor links should be possible to open source file on build error"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/development/acceptance-app/error-message-url.test.ts": {
    "passed": [
      "Error overlay - error message urls should be possible to click url in runtime error"
    ],
    "failed": [
      "Error overlay - error message urls should be possible to click url in build error"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/development/acceptance-app/error-recovery.test.ts": {
    "passed": [],
    "failed": [
      "Error recovery app turbo can recover from a event handler error",
      "Error recovery app turbo can recover from a syntax error without losing state",
      "Error recovery app turbo client component can recover from a component error",
      "Error recovery app turbo client component can recover from syntax error",
      "Error recovery app turbo displays build error on initial page load",
      "Error recovery app turbo render error not shown right after syntax error",
      "Error recovery app turbo server component can recover from a component error",
      "Error recovery app turbo server component can recover from syntax error",
      "Error recovery app turbo stuck error",
      "Error recovery app turbo syntax > runtime error"
    ],
    "pending": [
      "Error recovery app default can recover from a event handler error",
      "Error recovery app default can recover from a syntax error without losing state",
      "Error recovery app default client component can recover from a component error",
      "Error recovery app default client component can recover from syntax error",
      "Error recovery app default displays build error on initial page load",
      "Error recovery app default render error not shown right after syntax error",
      "Error recovery app default server component can recover from a component error",
      "Error recovery app default server component can recover from syntax error",
      "Error recovery app default stuck error",
      "Error recovery app default syntax > runtime error"
    ],
    "runtimeError": false
  },
  "test/development/acceptance-app/hydration-error.test.ts": {
    "passed": [
      "Error overlay for hydration errors should not show a hydration error when using `useId` in a client component",
      "Error overlay for hydration errors should show correct hydration error when client and server render different text",
      "Error overlay for hydration errors should show correct hydration error when client renders an extra element",
      "Error overlay for hydration errors should show correct hydration error when client renders an extra node inside Suspense content",
      "Error overlay for hydration errors should show correct hydration error when client renders an extra text node",
      "Error overlay for hydration errors should show correct hydration error when server renders an extra element",
      "Error overlay for hydration errors should show correct hydration error when server renders an extra text node"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/acceptance-app/invalid-imports.test.ts": {
    "passed": [],
    "failed": [
      "Error Overlay invalid imports should show error when external package imports client-only in server component",
      "Error Overlay invalid imports should show error when external package imports server-only in client component",
      "Error Overlay invalid imports should show error when using styled-jsx in server component"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/development/acceptance-app/rsc-build-errors.test.ts": {
    "passed": [
      "Error overlay - RSC build errors should error for invalid undefined module retuning from next dynamic",
      "Error overlay - RSC build errors should error when page component export is not valid",
      "Error overlay - RSC build errors should error when page component export is not valid on initial load"
    ],
    "failed": [
      "Error overlay - RSC build errors should allow to use and handle rsc poisoning client-only",
      "Error overlay - RSC build errors should allow to use and handle rsc poisoning server-only",
      "Error overlay - RSC build errors should freeze parent resolved metadata to avoid mutating in generateMetadata",
      "Error overlay - RSC build errors should show which import caused an error in node_modules",
      "Error overlay - RSC build errors should throw an error when \"Component\" is imported in server components",
      "Error overlay - RSC build errors should throw an error when \"use client\" is on the top level but after other expressions",
      "Error overlay - RSC build errors should throw an error when error file is a server component",
      "Error overlay - RSC build errors should throw an error when error file is a server component with empty error file",
      "Error overlay - RSC build errors should throw an error when getServerSideProps is used",
      "Error overlay - RSC build errors should throw an error when metadata export is used in client components",
      "Error overlay - RSC build errors should throw an error when metadata exports are used together in server components"
    ],
    "pending": [
      "Error overlay - RSC build errors should throw an error when getStaticProps is used"
    ],
    "runtimeError": false
  },
  "test/development/acceptance-app/server-components.test.ts": {
    "passed": [
      "Error Overlay for server components Class component used in Server Component should show error when Class Component is used",
      "Error Overlay for server components Class component used in Server Component should show error when Component is rendered in external package",
      "Error Overlay for server components Class component used in Server Component should show error when React.PureComponent is rendered in external package",
      "Error Overlay for server components Next.js component hooks called in Server Component should show error when usePathname is called",
      "Error Overlay for server components Next.js component hooks called in Server Component should show error when useRouter is called",
      "Error Overlay for server components Next.js component hooks called in Server Component should show error when useSearchParams is called",
      "Error Overlay for server components Next.js component hooks called in Server Component should show error when useSelectedLayoutSegment is called",
      "Error Overlay for server components Next.js component hooks called in Server Component should show error when useSelectedLayoutSegments is called",
      "Error Overlay for server components React component hooks called in Server Component should show error when React client hook is called in external package",
      "Error Overlay for server components React component hooks called in Server Component should show error when React.<client-hook> is called",
      "Error Overlay for server components React component hooks called in Server Component should show error when React.<client-hook> is called in external package",
      "Error Overlay for server components React component hooks called in Server Component should show error when React.experiment_useOptimistic is called",
      "Error Overlay for server components React component hooks called in Server Component should show error when React.experiment_useOptimistic is renamed in destructuring",
      "Error Overlay for server components createContext called in Server Component should show error when React.createContext is called",
      "Error Overlay for server components createContext called in Server Component should show error when React.createContext is called in external package",
      "Error Overlay for server components createContext called in Server Component should show error when createContext is called in external package"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/acceptance-app/version-staleness.test.ts": {
    "passed": [],
    "failed": [],
    "pending": [
      "Error Overlay version staleness should show version staleness in build error",
      "Error Overlay version staleness should show version staleness in render error",
      "Error Overlay version staleness should show version staleness in runtime error"
    ],
    "runtimeError": false
  },
  "test/development/acceptance/ReactRefresh.test.ts": {
    "passed": [
      "ReactRefresh can edit a component without losing state",
      "ReactRefresh cyclic dependencies"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/acceptance/ReactRefreshLogBox-app-doc.test.ts": {
    "passed": [
      "ReactRefreshLogBox turbo empty _app shows logbox",
      "ReactRefreshLogBox turbo empty _document shows logbox"
    ],
    "failed": [
      "ReactRefreshLogBox turbo _app syntax error shows logbox",
      "ReactRefreshLogBox turbo _document syntax error shows logbox"
    ],
    "pending": [
      "ReactRefreshLogBox default _app syntax error shows logbox",
      "ReactRefreshLogBox default _document syntax error shows logbox",
      "ReactRefreshLogBox default empty _app shows logbox",
      "ReactRefreshLogBox default empty _document shows logbox"
    ],
    "runtimeError": false
  },
  "test/development/acceptance/ReactRefreshLogBox-builtins.test.ts": {
    "passed": [
      "ReactRefreshLogBox turbo Module not found",
      "ReactRefreshLogBox turbo Module not found (empty import trace)",
      "ReactRefreshLogBox turbo Node.js builtins"
    ],
    "failed": [
      "ReactRefreshLogBox turbo Module not found (missing global CSS)"
    ],
    "pending": [
      "ReactRefreshLogBox default Module not found",
      "ReactRefreshLogBox default Module not found (empty import trace)",
      "ReactRefreshLogBox default Module not found (missing global CSS)",
      "ReactRefreshLogBox default Node.js builtins"
    ],
    "runtimeError": false
  },
  "test/development/acceptance/ReactRefreshLogBox-scss.test.ts": {
    "passed": [],
    "failed": [],
    "pending": ["ReactRefreshLogBox scss syntax errors"],
    "runtimeError": false
  },
  "test/development/acceptance/ReactRefreshLogBox.test.ts": {
    "passed": [
      "ReactRefreshLogBox turbo boundaries",
      "ReactRefreshLogBox turbo module init error not shown",
      "ReactRefreshLogBox turbo should strip whitespace correctly with newline"
    ],
    "failed": [
      "ReactRefreshLogBox turbo conversion to class component (1)",
      "ReactRefreshLogBox turbo css syntax errors",
      "ReactRefreshLogBox turbo logbox: anchors links in error messages",
      "ReactRefreshLogBox turbo non-Error errors are handled properly",
      "ReactRefreshLogBox turbo unterminated JSX"
    ],
    "pending": [
      "ReactRefreshLogBox default boundaries",
      "ReactRefreshLogBox default conversion to class component (1)",
      "ReactRefreshLogBox default css syntax errors",
      "ReactRefreshLogBox default internal package errors",
      "ReactRefreshLogBox default logbox: anchors links in error messages",
      "ReactRefreshLogBox default module init error not shown",
      "ReactRefreshLogBox default non-Error errors are handled properly",
      "ReactRefreshLogBox default should strip whitespace correctly with newline",
      "ReactRefreshLogBox default unterminated JSX",
      "ReactRefreshLogBox turbo internal package errors"
    ],
    "runtimeError": false
  },
  "test/development/acceptance/ReactRefreshLogBoxMisc.test.ts": {
    "passed": [],
    "failed": [],
    "pending": [
      "ReactRefreshLogBox <Link> component props errors",
      "ReactRefreshLogBox <Link> with multiple children",
      "ReactRefreshLogBox server-side only compilation errors"
    ],
    "runtimeError": false
  },
  "test/development/acceptance/ReactRefreshModule.test.ts": {
    "passed": [],
    "failed": ["ReactRefreshModule should allow any variable names"],
    "pending": [],
    "runtimeError": false
  },
  "test/development/acceptance/ReactRefreshRegression.test.ts": {
    "passed": [
      "ReactRefreshRegression can fast refresh a page with config",
      "ReactRefreshRegression can fast refresh a page with getServerSideProps",
      "ReactRefreshRegression can fast refresh a page with getStaticProps",
      "ReactRefreshRegression styled-components hydration mismatch"
    ],
    "failed": [
      "ReactRefreshRegression custom loader (mdx) should have Fast Refresh enabled",
      "ReactRefreshRegression shows an overlay for a server-side error"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/development/acceptance/component-stack.test.ts": {
    "passed": [],
    "failed": [
      "Component Stack in error overlay should show a component stack on hydration error"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/development/acceptance/error-recovery.test.ts": {
    "passed": [
      "ReactRefreshLogBox turbo logbox: can recover from a syntax error without losing state"
    ],
    "failed": [
      "ReactRefreshLogBox turbo logbox: can recover from a component error",
      "ReactRefreshLogBox turbo logbox: can recover from a event handler error",
      "ReactRefreshLogBox turbo render error not shown right after syntax error",
      "ReactRefreshLogBox turbo stuck error",
      "ReactRefreshLogBox turbo syntax > runtime error"
    ],
    "pending": [
      "ReactRefreshLogBox default logbox: can recover from a component error",
      "ReactRefreshLogBox default logbox: can recover from a event handler error",
      "ReactRefreshLogBox default logbox: can recover from a syntax error without losing state",
      "ReactRefreshLogBox default render error not shown right after syntax error",
      "ReactRefreshLogBox default stuck error",
      "ReactRefreshLogBox default syntax > runtime error"
    ],
    "runtimeError": false
  },
  "test/development/acceptance/hydration-error.test.ts": {
    "passed": [
      "Error overlay for hydration errors should show correct hydration error when client and server render different text"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/acceptance/server-component-compiler-errors-in-pages.test.ts": {
    "passed": [],
    "failed": [
      "Error Overlay for server components compiler errors in pages importing 'next/headers' in pages",
      "Error Overlay for server components compiler errors in pages importing 'server-only' in pages"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/development/api-cors-with-rewrite/index.test.ts": {
    "passed": [
      "Rewritten API Requests should pass OPTIONS requests to the api function should pass OPTIONS requests to the api function"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/api-route-errors/index.test.ts": {
    "passed": [],
    "failed": [
      "api-route-errors cli output error",
      "api-route-errors cli output uncaught exception",
      "api-route-errors cli output unhandled rejection"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/development/app-dir/basic/basic.test.ts": {
    "passed": ["basic app-dir tests should reload app pages without error"],
    "failed": [],
    "pending": ["basic app-dir tests should reload app pages without error"],
    "runtimeError": false
  },
  "test/development/app-dir/multiple-compiles-single-route/multiple-compiles-single-route.test.ts": {
    "passed": [
      "multiple-compiles-single-route should not compile additional matching paths"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/app-dir/strict-mode-enabled-by-default/strict-mode-enabled-by-default.test.ts": {
    "passed": ["Strict Mode enabled by default should work using browser"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/app-hmr/hmr.test.ts": {
    "passed": [
      "app-dir-hmr filesystem changes should have no unexpected action error for hmr",
      "app-dir-hmr filesystem changes should not break when renaming a folder",
      "app-dir-hmr filesystem changes should not continously poll when hitting a not found page"
    ],
    "failed": [
      "app-dir-hmr filesystem changes should update server components pages when env files is changed (edge)",
      "app-dir-hmr filesystem changes should update server components pages when env files is changed (nodejs)"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/development/app-render-error-log/app-render-error-log.test.ts": {
    "passed": [],
    "failed": [
      "app-render-error-log should log the correct values on app-render error",
      "app-render-error-log should log the correct values on app-render error with edge runtime"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/development/basic/asset-prefix.test.ts": {
    "passed": ["asset-prefix should load the app properly without reloading"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/basic/barrel-optimization.test.ts": {
    "passed": [
      "optimizePackageImports should handle recursive wildcard exports"
    ],
    "failed": [
      "optimizePackageImports app - should render the icons correctly without creating all the modules",
      "optimizePackageImports pages - should render the icons correctly without creating all the modules",
      "optimizePackageImports should reuse the transformed barrel meta file from SWC",
      "optimizePackageImports should support visx"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/development/basic/define-class-fields.test.ts": {
    "passed": [
      "useDefineForClassFields SWC option Initializes resident to undefined after the call to 'super()' when with useDefineForClassFields enabled",
      "useDefineForClassFields SWC option set accessors from base classes won’t get triggered with useDefineForClassFields enabled",
      "useDefineForClassFields SWC option tsx should compile with useDefineForClassFields enabled"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/basic/emotion-swc.test.ts": {
    "passed": ["emotion SWC option should have styling from the css prop"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/basic/gssp-ssr-change-reloading/test/index.test.ts": {
    "passed": [
      "GS(S)P Server-Side Change Reloading should not reload page when client-side is changed too GSP",
      "GS(S)P Server-Side Change Reloading should not reload page when client-side is changed too GSSP",
      "GS(S)P Server-Side Change Reloading should update page when getServerSideProps is changed only",
      "GS(S)P Server-Side Change Reloading should update page when getStaticProps is changed only for /index"
    ],
    "failed": [
      "GS(S)P Server-Side Change Reloading should keep scroll position when updating from change in getStaticProps",
      "GS(S)P Server-Side Change Reloading should refresh data when server import is updated",
      "GS(S)P Server-Side Change Reloading should show indicator when re-fetching data",
      "GS(S)P Server-Side Change Reloading should update on props error in getStaticProps",
      "GS(S)P Server-Side Change Reloading should update on thrown error in getStaticProps",
      "GS(S)P Server-Side Change Reloading should update page when getStaticPaths is changed only",
      "GS(S)P Server-Side Change Reloading should update page when getStaticProps is changed only",
      "GS(S)P Server-Side Change Reloading should update page when getStaticProps is changed only for /another/index"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/development/basic/hmr.test.ts": {
    "passed": [
      "basic HMR, basePath: \"\" Error Recovery should not continously poll a custom error page",
      "basic HMR, basePath: \"\" Hot Module Reloading editing a page should detect the changes and display it",
      "basic HMR, basePath: \"\" Hot Module Reloading editing a page should not reload unrelated pages",
      "basic HMR, basePath: \"\" Hot Module Reloading editing a page should update styles correctly",
      "basic HMR, basePath: \"\" Hot Module Reloading editing a page should update styles in a dynamic component correctly",
      "basic HMR, basePath: \"\" Hot Module Reloading editing a page should update styles in a stateful component correctly",
      "basic HMR, basePath: \"\" should have correct router.isReady for auto-export page",
      "basic HMR, basePath: \"\" should have correct router.isReady for getStaticProps page",
      "basic HMR, basePath: \"\" should show hydration error correctly",
      "basic HMR, basePath: \"/docs\" Error Recovery should not continously poll a custom error page",
      "basic HMR, basePath: \"/docs\" Hot Module Reloading editing a page should detect the changes and display it",
      "basic HMR, basePath: \"/docs\" Hot Module Reloading editing a page should not reload unrelated pages",
      "basic HMR, basePath: \"/docs\" Hot Module Reloading editing a page should update styles correctly",
      "basic HMR, basePath: \"/docs\" Hot Module Reloading editing a page should update styles in a dynamic component correctly",
      "basic HMR, basePath: \"/docs\" Hot Module Reloading editing a page should update styles in a stateful component correctly",
      "basic HMR, basePath: \"/docs\" should have correct router.isReady for auto-export page",
      "basic HMR, basePath: \"/docs\" should have correct router.isReady for getStaticProps page",
      "basic HMR, basePath: \"/docs\" should show hydration error correctly"
    ],
    "failed": [
      "basic HMR, basePath: \"\" Error Recovery should detect runtime errors on the module scope",
      "basic HMR, basePath: \"\" Error Recovery should detect syntax errors and recover",
      "basic HMR, basePath: \"\" Error Recovery should recover after a bad return from the render function",
      "basic HMR, basePath: \"\" Error Recovery should recover after an error reported via SSR",
      "basic HMR, basePath: \"\" Error Recovery should recover after exporting an invalid page",
      "basic HMR, basePath: \"\" Error Recovery should recover after loader parse error in an imported file",
      "basic HMR, basePath: \"\" Error Recovery should recover after undefined exported as default",
      "basic HMR, basePath: \"\" Error Recovery should recover after webpack parse error in an imported file",
      "basic HMR, basePath: \"\" Error Recovery should recover from 404 after a page has been added",
      "basic HMR, basePath: \"\" Error Recovery should recover from 404 after a page has been added with dynamic segments",
      "basic HMR, basePath: \"\" Error Recovery should recover from errors in getInitialProps in client",
      "basic HMR, basePath: \"\" Error Recovery should recover from errors in the render function",
      "basic HMR, basePath: \"\" Error Recovery should show the error on all pages",
      "basic HMR, basePath: \"\" Full reload should warn about full reload in cli output - anonymous page function",
      "basic HMR, basePath: \"\" Full reload should warn about full reload in cli output - runtime-error",
      "basic HMR, basePath: \"\" Hot Module Reloading delete a page and add it back should load the page properly",
      "basic HMR, basePath: \"\" should have client HMR events in trace file",
      "basic HMR, basePath: \"\" should have correct compile timing after fixing error",
      "basic HMR, basePath: \"/docs\" Error Recovery should detect runtime errors on the module scope",
      "basic HMR, basePath: \"/docs\" Error Recovery should detect syntax errors and recover",
      "basic HMR, basePath: \"/docs\" Error Recovery should recover after a bad return from the render function",
      "basic HMR, basePath: \"/docs\" Error Recovery should recover after an error reported via SSR",
      "basic HMR, basePath: \"/docs\" Error Recovery should recover after exporting an invalid page",
      "basic HMR, basePath: \"/docs\" Error Recovery should recover after loader parse error in an imported file",
      "basic HMR, basePath: \"/docs\" Error Recovery should recover after undefined exported as default",
      "basic HMR, basePath: \"/docs\" Error Recovery should recover after webpack parse error in an imported file",
      "basic HMR, basePath: \"/docs\" Error Recovery should recover from 404 after a page has been added",
      "basic HMR, basePath: \"/docs\" Error Recovery should recover from 404 after a page has been added with dynamic segments",
      "basic HMR, basePath: \"/docs\" Error Recovery should recover from errors in getInitialProps in client",
      "basic HMR, basePath: \"/docs\" Error Recovery should recover from errors in the render function",
      "basic HMR, basePath: \"/docs\" Error Recovery should show the error on all pages",
      "basic HMR, basePath: \"/docs\" Full reload should warn about full reload in cli output - anonymous page function",
      "basic HMR, basePath: \"/docs\" Full reload should warn about full reload in cli output - runtime-error",
      "basic HMR, basePath: \"/docs\" Hot Module Reloading delete a page and add it back should load the page properly",
      "basic HMR, basePath: \"/docs\" should have client HMR events in trace file",
      "basic HMR, basePath: \"/docs\" should have correct compile timing after fixing error"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/development/basic/legacy-decorators.test.ts": {
    "passed": [
      "Legacy decorators SWC option should compile with legacy decorators enabled"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/basic/misc.test.ts": {
    "passed": [
      "misc basic dev tests, basePath: \"\" Development Logs should not warn when prefetch is false",
      "misc basic dev tests, basePath: \"\" Development Logs should not warn when prefetch is not specified",
      "misc basic dev tests, basePath: \"\" Development Logs should warn when prefetch is true",
      "misc basic dev tests, basePath: \"\" With Security Related Issues should handle encoded / value for trailing slash correctly",
      "misc basic dev tests, basePath: \"\" With Security Related Issues should not allow accessing files outside .next/static and .next/server directory",
      "misc basic dev tests, basePath: \"\" should allow access to public files",
      "misc basic dev tests, basePath: \"\" should set process.env.NODE_ENV in development",
      "misc basic dev tests, basePath: \"/docs\" Development Logs should not warn when prefetch is false",
      "misc basic dev tests, basePath: \"/docs\" Development Logs should not warn when prefetch is not specified",
      "misc basic dev tests, basePath: \"/docs\" Development Logs should warn when prefetch is true",
      "misc basic dev tests, basePath: \"/docs\" With Security Related Issues should handle encoded / value for trailing slash correctly",
      "misc basic dev tests, basePath: \"/docs\" With Security Related Issues should not allow accessing files outside .next/static and .next/server directory",
      "misc basic dev tests, basePath: \"/docs\" should allow access to public files",
      "misc basic dev tests, basePath: \"/docs\" should set process.env.NODE_ENV in development"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/basic/next-dynamic.test.ts": {
    "passed": [
      "basic next/dynamic usage, basePath: \"\" with \"document.getInitialProps\" compiler Dynamic import custom chunkfilename should render the component on client side",
      "basic next/dynamic usage, basePath: \"\" with \"document.getInitialProps\" compiler Dynamic import custom loading should render custom loading on the server side when `ssr:false` and `loading` is provided",
      "basic next/dynamic usage, basePath: \"\" with \"document.getInitialProps\" compiler Dynamic import custom loading should render the component on client side",
      "basic next/dynamic usage, basePath: \"\" with \"document.getInitialProps\" compiler Dynamic import default behavior should SSR nested dynamic components and skip nonSSR ones",
      "basic next/dynamic usage, basePath: \"\" with \"document.getInitialProps\" compiler Dynamic import default behavior should hydrate nested chunks",
      "basic next/dynamic usage, basePath: \"\" with \"document.getInitialProps\" compiler Dynamic import default behavior should render even there are no physical chunk exists",
      "basic next/dynamic usage, basePath: \"\" with \"document.getInitialProps\" compiler Dynamic import default behavior should render the component Head content",
      "basic next/dynamic usage, basePath: \"\" with \"document.getInitialProps\" compiler Dynamic import ssr:false option should not render loading on the server side",
      "basic next/dynamic usage, basePath: \"\" with \"document.getInitialProps\" compiler Dynamic import ssr:true option should render the component on client side",
      "basic next/dynamic usage, basePath: \"\" with \"swc\" compiler Dynamic import custom chunkfilename should render the component on client side",
      "basic next/dynamic usage, basePath: \"\" with \"swc\" compiler Dynamic import custom loading should render custom loading on the server side when `ssr:false` and `loading` is provided",
      "basic next/dynamic usage, basePath: \"\" with \"swc\" compiler Dynamic import custom loading should render the component on client side",
      "basic next/dynamic usage, basePath: \"\" with \"swc\" compiler Dynamic import default behavior should SSR nested dynamic components and skip nonSSR ones",
      "basic next/dynamic usage, basePath: \"\" with \"swc\" compiler Dynamic import default behavior should hydrate nested chunks",
      "basic next/dynamic usage, basePath: \"\" with \"swc\" compiler Dynamic import default behavior should render even there are no physical chunk exists",
      "basic next/dynamic usage, basePath: \"\" with \"swc\" compiler Dynamic import default behavior should render the component Head content",
      "basic next/dynamic usage, basePath: \"\" with \"swc\" compiler Dynamic import ssr:false option should not render loading on the server side",
      "basic next/dynamic usage, basePath: \"\" with \"swc\" compiler Dynamic import ssr:true option should render the component on client side",
      "basic next/dynamic usage, basePath: \"/docs\" with \"swc\" compiler Dynamic import custom chunkfilename should render the component on client side",
      "basic next/dynamic usage, basePath: \"/docs\" with \"swc\" compiler Dynamic import custom loading should render custom loading on the server side when `ssr:false` and `loading` is provided",
      "basic next/dynamic usage, basePath: \"/docs\" with \"swc\" compiler Dynamic import default behavior should SSR nested dynamic components and skip nonSSR ones",
      "basic next/dynamic usage, basePath: \"/docs\" with \"swc\" compiler Dynamic import default behavior should render the component Head content",
      "basic next/dynamic usage, basePath: \"/docs\" with \"swc\" compiler Dynamic import ssr:false option should not render loading on the server side",
      "basic next/dynamic usage, basePath: \"/docs\" with \"swc\" compiler Dynamic import ssr:true option should render the component on client side"
    ],
    "failed": [
      "basic next/dynamic usage, basePath: \"\" with \"babel\" compiler Dynamic import Multiple modules should only include the rendered module script tag",
      "basic next/dynamic usage, basePath: \"\" with \"babel\" compiler Dynamic import Multiple modules should only load the rendered module in the browser",
      "basic next/dynamic usage, basePath: \"\" with \"babel\" compiler Dynamic import Multiple modules should only render one bundle if component is used multiple times",
      "basic next/dynamic usage, basePath: \"\" with \"babel\" compiler Dynamic import custom chunkfilename should render the component on client side",
      "basic next/dynamic usage, basePath: \"\" with \"babel\" compiler Dynamic import custom chunkfilename should render the correct filename",
      "basic next/dynamic usage, basePath: \"\" with \"babel\" compiler Dynamic import custom loading should render custom loading on the server side when `ssr:false` and `loading` is provided",
      "basic next/dynamic usage, basePath: \"\" with \"babel\" compiler Dynamic import custom loading should render the component on client side",
      "basic next/dynamic usage, basePath: \"\" with \"babel\" compiler Dynamic import default behavior should SSR nested dynamic components and skip nonSSR ones",
      "basic next/dynamic usage, basePath: \"\" with \"babel\" compiler Dynamic import default behavior should hydrate nested chunks",
      "basic next/dynamic usage, basePath: \"\" with \"babel\" compiler Dynamic import default behavior should render dynamic import components",
      "basic next/dynamic usage, basePath: \"\" with \"babel\" compiler Dynamic import default behavior should render dynamic import components using a function as first parameter",
      "basic next/dynamic usage, basePath: \"\" with \"babel\" compiler Dynamic import default behavior should render even there are no physical chunk exists",
      "basic next/dynamic usage, basePath: \"\" with \"babel\" compiler Dynamic import default behavior should render the component Head content",
      "basic next/dynamic usage, basePath: \"\" with \"babel\" compiler Dynamic import ssr:false option should not render loading on the server side",
      "basic next/dynamic usage, basePath: \"\" with \"babel\" compiler Dynamic import ssr:false option should render the component on client side",
      "basic next/dynamic usage, basePath: \"\" with \"babel\" compiler Dynamic import ssr:true option Should render the component on the server side",
      "basic next/dynamic usage, basePath: \"\" with \"babel\" compiler Dynamic import ssr:true option should render the component on client side",
      "basic next/dynamic usage, basePath: \"\" with \"document.getInitialProps\" compiler Dynamic import Multiple modules should only include the rendered module script tag",
      "basic next/dynamic usage, basePath: \"\" with \"document.getInitialProps\" compiler Dynamic import Multiple modules should only load the rendered module in the browser",
      "basic next/dynamic usage, basePath: \"\" with \"document.getInitialProps\" compiler Dynamic import Multiple modules should only render one bundle if component is used multiple times",
      "basic next/dynamic usage, basePath: \"\" with \"document.getInitialProps\" compiler Dynamic import custom chunkfilename should render the correct filename",
      "basic next/dynamic usage, basePath: \"\" with \"document.getInitialProps\" compiler Dynamic import default behavior should render dynamic import components",
      "basic next/dynamic usage, basePath: \"\" with \"document.getInitialProps\" compiler Dynamic import default behavior should render dynamic import components using a function as first parameter",
      "basic next/dynamic usage, basePath: \"\" with \"document.getInitialProps\" compiler Dynamic import ssr:false option should render the component on client side",
      "basic next/dynamic usage, basePath: \"\" with \"document.getInitialProps\" compiler Dynamic import ssr:true option Should render the component on the server side",
      "basic next/dynamic usage, basePath: \"\" with \"swc\" compiler Dynamic import Multiple modules should only include the rendered module script tag",
      "basic next/dynamic usage, basePath: \"\" with \"swc\" compiler Dynamic import Multiple modules should only load the rendered module in the browser",
      "basic next/dynamic usage, basePath: \"\" with \"swc\" compiler Dynamic import Multiple modules should only render one bundle if component is used multiple times",
      "basic next/dynamic usage, basePath: \"\" with \"swc\" compiler Dynamic import custom chunkfilename should render the correct filename",
      "basic next/dynamic usage, basePath: \"\" with \"swc\" compiler Dynamic import default behavior should render dynamic import components",
      "basic next/dynamic usage, basePath: \"\" with \"swc\" compiler Dynamic import default behavior should render dynamic import components using a function as first parameter",
      "basic next/dynamic usage, basePath: \"\" with \"swc\" compiler Dynamic import ssr:false option should render the component on client side",
      "basic next/dynamic usage, basePath: \"\" with \"swc\" compiler Dynamic import ssr:true option Should render the component on the server side",
      "basic next/dynamic usage, basePath: \"/docs\" with \"swc\" compiler Dynamic import Multiple modules should only include the rendered module script tag",
      "basic next/dynamic usage, basePath: \"/docs\" with \"swc\" compiler Dynamic import Multiple modules should only load the rendered module in the browser",
      "basic next/dynamic usage, basePath: \"/docs\" with \"swc\" compiler Dynamic import Multiple modules should only render one bundle if component is used multiple times",
      "basic next/dynamic usage, basePath: \"/docs\" with \"swc\" compiler Dynamic import custom chunkfilename should render the correct filename",
      "basic next/dynamic usage, basePath: \"/docs\" with \"swc\" compiler Dynamic import custom loading should render the component on client side",
      "basic next/dynamic usage, basePath: \"/docs\" with \"swc\" compiler Dynamic import default behavior should hydrate nested chunks",
      "basic next/dynamic usage, basePath: \"/docs\" with \"swc\" compiler Dynamic import default behavior should render dynamic import components",
      "basic next/dynamic usage, basePath: \"/docs\" with \"swc\" compiler Dynamic import default behavior should render dynamic import components using a function as first parameter",
      "basic next/dynamic usage, basePath: \"/docs\" with \"swc\" compiler Dynamic import default behavior should render even there are no physical chunk exists",
      "basic next/dynamic usage, basePath: \"/docs\" with \"swc\" compiler Dynamic import ssr:false option should render the component on client side",
      "basic next/dynamic usage, basePath: \"/docs\" with \"swc\" compiler Dynamic import ssr:true option Should render the component on the server side"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/development/basic/next-rs-api.test.ts": {
    "passed": [
      "next.rs api should allow to write app Node.js page to disk",
      "next.rs api should allow to write app Node.js route to disk",
      "next.rs api should allow to write app edge route to disk",
      "next.rs api should allow to write pages Node.js api to disk",
      "next.rs api should allow to write pages Node.js page to disk",
      "next.rs api should allow to write pages edge api to disk",
      "next.rs api should allow to write pages edge page to disk",
      "next.rs api should allow to write root page to disk",
      "next.rs api should detect the correct routes",
      "next.rs api should have working HMR on client and server-side change on a page 0",
      "next.rs api should have working HMR on client and server-side change on a page 1",
      "next.rs api should have working HMR on client and server-side change on a page 2",
      "next.rs api should have working HMR on client-side change on a app page 0",
      "next.rs api should have working HMR on client-side change on a app page 1",
      "next.rs api should have working HMR on client-side change on a app page 2",
      "next.rs api should have working HMR on client-side change on a page 0",
      "next.rs api should have working HMR on client-side change on a page 1",
      "next.rs api should have working HMR on client-side change on a page 2",
      "next.rs api should have working HMR on server-side change on a app page 0",
      "next.rs api should have working HMR on server-side change on a app page 1",
      "next.rs api should have working HMR on server-side change on a app page 2",
      "next.rs api should have working HMR on server-side change on a page 0",
      "next.rs api should have working HMR on server-side change on a page 1",
      "next.rs api should have working HMR on server-side change on a page 2"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/basic/node-builtins.test.ts": {
    "passed": [
      "node builtins should have polyfilled node.js builtins for the browser correctly",
      "node builtins should have polyfilled node.js builtins for the browser correctly in client component",
      "node builtins should support node.js builtins",
      "node builtins should support node.js builtins in server component",
      "node builtins should support node.js builtins prefixed by node:",
      "node builtins should support node.js builtins prefixed by node: in server component"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/basic/project-directory-rename.test.ts": {
    "passed": [],
    "failed": [],
    "pending": [
      "Project Directory Renaming should detect project dir rename and restart"
    ],
    "runtimeError": false
  },
  "test/development/basic/styled-components-disabled.test.ts": {
    "passed": [],
    "failed": [
      "styled-components SWC transform should have hydration mismatch with styled-components transform disabled"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/development/basic/styled-components.test.ts": {
    "passed": [
      "styled-components SWC transform should contain styles in initial HTML",
      "styled-components SWC transform should not have hydration mismatch with styled-components transform enabled",
      "styled-components SWC transform should only render once on the server per request",
      "styled-components SWC transform should render the page with correct styles"
    ],
    "failed": [
      "styled-components SWC transform should enable the display name transform by default"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/development/basic/tailwind-jit.test.ts": {
    "passed": ["TailwindCSS JIT works with JIT enabled"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/basic/theme-ui.test.ts": {
    "passed": ["theme-ui SWC option should have theme provided styling"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/client-dev-overlay/index.test.ts": {
    "passed": [
      "client-dev-overlay should be able to fullscreen the minimized overlay",
      "client-dev-overlay should be able to hide the minimized overlay",
      "client-dev-overlay should be able to minimize the fullscreen overlay",
      "client-dev-overlay should have a role of \"dialog\" if the page is focused"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/correct-tsconfig-defaults/index.test.ts": {
    "passed": [
      "correct tsconfig.json defaults should add `moduleResolution` when generating tsconfig.json in dev",
      "correct tsconfig.json defaults should not warn for `moduleResolution` when already present and valid"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/dotenv-default-expansion/index.test.ts": {
    "passed": ["Dotenv default expansion should work"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/experimental-https-server/https-server.generated-key.test.ts": {
    "passed": [
      "experimental-https-server (generated certificate) only runs on CI as it requires administrator privileges"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/experimental-https-server/https-server.provided-key.test.ts": {
    "passed": [
      "experimental-https-server (provided certificate) should successfully load the app in app dir",
      "experimental-https-server (provided certificate) should successfully load the app in pages dir"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/gssp-notfound/index.test.ts": {
    "passed": [
      "getServerSideProps returns notFound: true should not poll indefinitely"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/jsconfig-path-reloading/index.test.ts": {
    "passed": [
      "jsconfig-path-reloading jsconfig added after starting dev should automatically fast refresh content when path is added without error",
      "jsconfig-path-reloading jsconfig added after starting dev should load with initial paths config correctly",
      "jsconfig-path-reloading jsconfig added after starting dev should recover from module not found when paths is updated",
      "jsconfig-path-reloading jsconfig should automatically fast refresh content when path is added without error",
      "jsconfig-path-reloading jsconfig should load with initial paths config correctly",
      "jsconfig-path-reloading jsconfig should recover from module not found when paths is updated"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/middleware-errors/index.test.ts": {
    "passed": [
      "middleware - development errors when middleware contains an unhandled rejection does not render the error",
      "middleware - development errors when middleware contains an unhandled rejection logs the error correctly",
      "middleware - development errors when middleware throws synchronously renders the error correctly and recovers",
      "middleware - development errors when there is a compilation error after boot renders the error correctly and recovers",
      "middleware - development errors when there is an unhandled rejection while loading a dependency does not render the error",
      "middleware - development errors when there is an unhandled rejection while loading a dependency logs the error correctly",
      "middleware - development errors when there is an unhandled rejection while loading the module does not render the error",
      "middleware - development errors when there is an unhandled rejection while loading the module logs the error correctly"
    ],
    "failed": [
      "middleware - development errors when middleware throws synchronously logs the error correctly",
      "middleware - development errors when running invalid dynamic code with eval logs the error correctly",
      "middleware - development errors when running invalid dynamic code with eval renders the error correctly and recovers",
      "middleware - development errors when there is a compilation error after boot logs the error correctly",
      "middleware - development errors when there is a compilation error from boot logs the error correctly",
      "middleware - development errors when there is a compilation error from boot renders the error correctly and recovers",
      "middleware - development errors when throwing while loading the module logs the error correctly",
      "middleware - development errors when throwing while loading the module renders the error correctly and recovers"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/development/middleware-warnings/index.test.ts": {
    "passed": [
      "middlewares does not warn when populating response with a function call",
      "middlewares does not warn when populating response with a value",
      "middlewares does not warn when populating response with an async function call",
      "middlewares does not warn when returning null reponse body",
      "middlewares does not warn when returning response with JSON.stringify",
      "middlewares does not warn when returning response with literal number",
      "middlewares does not warn when returning response with literal string",
      "middlewares does not warn when returning undefined response body"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/next-font/build-errors.test.ts": {
    "passed": [],
    "failed": [
      "build-errors should show a module not found error if local font file can' be resolved",
      "build-errors should show a next/font error when input is wrong"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/development/next-font/deprecated-package.test.ts": {
    "passed": [
      "Deprecated @next/font warning should not warn if @next/font is not in deps",
      "Deprecated @next/font warning should warn if @next/font is in deps"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/next-font/font-loader-in-document-error.test.ts": {
    "passed": [],
    "failed": ["font-loader-in-document-error next/font inside _document"],
    "pending": [],
    "runtimeError": false
  },
  "test/development/pages-dir/client-navigation/index.test.ts": {
    "passed": [
      "Client Navigation Rendering via HTTP 404 should 404 on not existent page",
      "Client Navigation Rendering via HTTP 404 should 404 on wrong casing",
      "Client Navigation Rendering via HTTP 404 should not 404 for <page>/",
      "Client Navigation Rendering via HTTP 404 should should not contain a page script in a 404 page",
      "Client Navigation Rendering via HTTP allows to import .json files",
      "Client Navigation Rendering via HTTP asPath",
      "Client Navigation Rendering via HTTP default Content-Type",
      "Client Navigation Rendering via HTTP default export is not a React Component",
      "Client Navigation Rendering via HTTP error-inside-page",
      "Client Navigation Rendering via HTTP getInitialProps circular structure",
      "Client Navigation Rendering via HTTP getInitialProps resolves to null",
      "Client Navigation Rendering via HTTP getInitialProps should be class method",
      "Client Navigation Rendering via HTTP header helper avoids dedupe of meta tags with the same name if they use unique keys",
      "Client Navigation Rendering via HTTP header helper avoids dedupe of specific tags",
      "Client Navigation Rendering via HTTP header helper dedupes tags",
      "Client Navigation Rendering via HTTP header helper dedupes tags with the same key as the default",
      "Client Navigation Rendering via HTTP header helper renders Fragment children",
      "Client Navigation Rendering via HTTP header helper renders boolean attributes correctly children",
      "Client Navigation Rendering via HTTP header helper renders header information",
      "Client Navigation Rendering via HTTP header renders default charset",
      "Client Navigation Rendering via HTTP header renders default viewport",
      "Client Navigation Rendering via HTTP renders a link component",
      "Client Navigation Rendering via HTTP renders a stateless component",
      "Client Navigation Rendering via HTTP renders properties populated asynchronously",
      "Client Navigation Rendering via HTTP renders styled jsx",
      "Client Navigation Rendering via HTTP renders styled jsx external",
      "Client Navigation Rendering via HTTP renders when component is a forwardRef instance",
      "Client Navigation Rendering via HTTP renders when component is a memo instance",
      "Client Navigation Rendering via HTTP renders with fragment syntax",
      "Client Navigation Rendering via HTTP setting Content-Type in getInitialProps",
      "Client Navigation Rendering via HTTP should handle undefined prop in head server-side",
      "Client Navigation Rendering via HTTP should place charset element at the top of <head>",
      "Client Navigation Rendering via HTTP should render 404 for _next routes that do not exist",
      "Client Navigation Rendering via HTTP should render page that has module.exports anywhere",
      "Client Navigation Rendering via HTTP should render the page with `nextExport` property",
      "Client Navigation Rendering via HTTP should render the page with custom extension",
      "Client Navigation Rendering via HTTP should render the page without `err` property",
      "Client Navigation Rendering via HTTP should render the page without `nextExport` property",
      "Client Navigation Rendering via HTTP should should not contain scripts that are not js",
      "Client Navigation Rendering via HTTP should show a valid error when undefined is thrown",
      "Client Navigation Rendering via HTTP with the HOC based router should include asPath",
      "Client Navigation Rendering via HTTP with the HOC based router should navigate as expected",
      "Client Navigation foreign history manipulation should ignore foreign history state with missing properties",
      "Client Navigation foreign history manipulation should ignore history state with an invalid url",
      "Client Navigation foreign history manipulation should ignore history state without options",
      "Client Navigation resets scroll at the correct time should intentionally not reset scroll before the new page runs its lifecycles (Router#push)",
      "Client Navigation resets scroll at the correct time should reset scroll before the new page runs its lifecycles (<Link />)",
      "Client Navigation resets scroll at the correct time should reset scroll before the new page runs its lifecycles (Router#push)",
      "Client Navigation should emit routeChangeError on hash change cancel",
      "Client Navigation should handle undefined prop in head client-side",
      "Client Navigation should navigate to paths relative to the current page",
      "Client Navigation should not error on module.exports + polyfills",
      "Client Navigation should not reload when visiting /_error directly",
      "Client Navigation should scroll to top when the scroll option is set to true",
      "Client Navigation should work on nested /index/index.js",
      "Client Navigation updating head while client routing should not warn when application/ld+json scripts are in head",
      "Client Navigation updating head while client routing should only execute async and defer scripts once",
      "Client Navigation updating head while client routing should update head during client routing",
      "Client Navigation updating head while client routing should update head when unmounting component",
      "Client Navigation updating head while client routing should update title during client routing",
      "Client Navigation updating head while client routing should warn when scripts are in head",
      "Client Navigation updating head while client routing should warn when stylesheets or scripts are in head",
      "Client Navigation with 404 pages should 404 on not existent page",
      "Client Navigation with 404 pages should 404 on wrong casing",
      "Client Navigation with 404 pages should 404 on wrong casing of url dynamic param",
      "Client Navigation with 404 pages should get url dynamic param",
      "Client Navigation with 404 pages should not 404 for <page>/",
      "Client Navigation with 404 pages should should not contain a page script in a 404 page",
      "Client Navigation with <Link/> should call mouse handlers with an absolute url",
      "Client Navigation with <Link/> should error when calling onClick without event",
      "Client Navigation with <Link/> should have proper error when no children are provided",
      "Client Navigation with <Link/> should navigate an absolute local url",
      "Client Navigation with <Link/> should navigate an absolute local url with as",
      "Client Navigation with <Link/> should navigate an absolute url",
      "Client Navigation with <Link/> should navigate back after reload",
      "Client Navigation with <Link/> should navigate forwards after reload",
      "Client Navigation with <Link/> should navigate the page",
      "Client Navigation with <Link/> should navigate via the client side",
      "Client Navigation with <Link/> should not throw error when one number type child is provided",
      "Client Navigation with <a/> tag inside the <Link /> should navigate the page",
      "Client Navigation with <a/> tag inside the <Link /> should not navigate if the <a/> tag has a target",
      "Client Navigation with <a/> tag inside the <Link /> should not navigate if the click-event is modified",
      "Client Navigation with <a/> tag inside the <Link /> should not reload when link in svg is clicked",
      "Client Navigation with URL objects should handle undefined in router.push",
      "Client Navigation with URL objects should work with \"Router.push\"",
      "Client Navigation with URL objects should work with <Link/>",
      "Client Navigation with URL objects should work with the \"replace\" prop",
      "Client Navigation with asPath inside getInitialProps should show the correct asPath with a Link with as prop",
      "Client Navigation with asPath inside getInitialProps should show the correct asPath with a Link without the as prop",
      "Client Navigation with asPath with next/link should detect asPath query changes correctly",
      "Client Navigation with asPath with next/link should use pushState with same href and different asPath",
      "Client Navigation with asPath with next/router should navigate an absolute local url on push",
      "Client Navigation with asPath with next/router should navigate an absolute local url on replace",
      "Client Navigation with asPath with next/router should navigate an absolute url on push",
      "Client Navigation with asPath with next/router should navigate an absolute url on replace",
      "Client Navigation with asPath with next/router should show the correct asPath",
      "Client Navigation with different types of urls should not work with /index page",
      "Client Navigation with different types of urls should work with / page",
      "Client Navigation with different types of urls should work with dir/ page",
      "Client Navigation with different types of urls should work with normal page",
      "Client Navigation with empty getInitialProps() should render an error",
      "Client Navigation with getInitialProp redirect should redirect the page via client side",
      "Client Navigation with getInitialProp redirect should redirect the page when loading",
      "Client Navigation with hash changes check hydration mis-match should not have hydration mis-match for hash link",
      "Client Navigation with hash changes when hash change via A tag should not run getInitialProps",
      "Client Navigation with hash changes when hash change via Link Should update asPath",
      "Client Navigation with hash changes when hash change via Link should not run getInitialProps",
      "Client Navigation with hash changes when hash change via Link should not scroll to hash when scroll={false} is set",
      "Client Navigation with hash changes when hash change via Link should scroll to the specified CJK position to a new page",
      "Client Navigation with hash changes when hash change via Link should scroll to the specified position on the same page",
      "Client Navigation with hash changes when hash change via Link should scroll to the specified position on the same page with a name property",
      "Client Navigation with hash changes when hash change via Link should scroll to the specified position to a new page",
      "Client Navigation with hash changes when hash get removed should not run getInitialProps",
      "Client Navigation with hash changes when hash get removed should not run getInitialProps when removing via back",
      "Client Navigation with hash changes when hash set to empty should not run getInitialProps",
      "Client Navigation with hash changes with state when passing state via hash change should increment the history state counter",
      "Client Navigation with hash changes with state when passing state via hash change should increment the shallow history state counter",
      "Client Navigation with onClick action should always replace the state and perform additional action",
      "Client Navigation with onClick action should not reload if default was prevented",
      "Client Navigation with onClick action should reload the page and perform additional action",
      "Client Navigation with querystring relative urls should work with Link",
      "Client Navigation with querystring relative urls should work with router.push",
      "Client Navigation with querystring relative urls should work with router.replace",
      "Client Navigation with shallow routing should handle the back button and should not run getInitialProps",
      "Client Navigation with shallow routing should keep the scroll position on shallow routing",
      "Client Navigation with shallow routing should run getInitialProps always when rending the page to the screen",
      "Client Navigation with shallow routing should update the url without running getInitialProps",
      "Client Navigation with the HOC based router should navigate as expected",
      "Client Navigation with the current url should always replace the state",
      "Client Navigation with the current url should reload the page",
      "Client Navigation with the same page but different querystring should navigate the page",
      "Client Navigation with the same page but different querystring should remove querystring",
      "Client Navigation with unexpected <a/> nested tag should not redirect if passHref prop is not defined in Link",
      "Client Navigation with unexpected <a/> nested tag should redirect if passHref prop is defined in Link"
    ],
    "failed": [
      "Client Navigation Rendering via HTTP error-in-the-global-scope",
      "Client Navigation Rendering via HTTP should set Cache-Control header",
      "Client Navigation runtime errors should show redbox when a client side error is thrown inside a component",
      "Client Navigation runtime errors should show redbox when a client side error is thrown outside a component"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/development/pages-dir/custom-app-hmr/index.test.ts": {
    "passed": [],
    "failed": [
      "custom-app-hmr should not do full reload when simply editing _app.js"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/development/project-directory-with-styled-jsx-suffix/index.test.ts": {
    "passed": ["project directory with styled-jsx suffix should work"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/repeated-dev-edits/repeated-dev-edits.test.ts": {
    "passed": ["repeated-dev-edits should not break the hydration "],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/tsconfig-path-reloading/index.test.ts": {
    "passed": [
      "tsconfig-path-reloading tsconfig added after starting dev should automatically fast refresh content when path is added without error",
      "tsconfig-path-reloading tsconfig added after starting dev should load with initial paths config correctly",
      "tsconfig-path-reloading tsconfig added after starting dev should recover from module not found when paths is updated",
      "tsconfig-path-reloading tsconfig should automatically fast refresh content when path is added without error",
      "tsconfig-path-reloading tsconfig should load with initial paths config correctly",
      "tsconfig-path-reloading tsconfig should recover from module not found when paths is updated"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/typescript-auto-install/index.test.ts": {
    "passed": [
      "typescript-auto-install should detect TypeScript being added and auto setup",
      "typescript-auto-install should work"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/watch-config-file/index.test.ts": {
    "passed": ["watch-config-file should output config file change"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/development/webpack-issuer-deprecation-warning/index.test.ts": {
    "passed": [],
    "failed": [
      "webpack-issuer-deprecation-warning should not appear deprecation warning about webpack module issuer"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/404-page-router/index.test.ts": {
    "passed": [
      "404-page-router 404-page-router with basePath of false and i18n of false and middleware false for /error should have the correct router parameters after it is ready",
      "404-page-router 404-page-router with basePath of false and i18n of false and middleware false for /error?with=query should have the correct router parameters after it is ready",
      "404-page-router 404-page-router with basePath of false and i18n of false and middleware true for /error should have the correct router parameters after it is ready",
      "404-page-router 404-page-router with basePath of false and i18n of false and middleware true for /error?with=query should have the correct router parameters after it is ready",
      "404-page-router 404-page-router with basePath of false and i18n of false and middleware true for /not/a/real/page should have the correct router parameters after it is ready",
      "404-page-router 404-page-router with basePath of false and i18n of false and middleware true for /not/a/real/page?with=query should have the correct router parameters after it is ready",
      "404-page-router 404-page-router with basePath of false and i18n of false and middleware true should not throw any errors when re-fetching the route info",
      "404-page-router 404-page-router with basePath of false and i18n of true and middleware false for /error should have the correct router parameters after it is ready",
      "404-page-router 404-page-router with basePath of false and i18n of true and middleware false for /error?with=query should have the correct router parameters after it is ready"
    ],
    "failed": [
      "404-page-router 404-page-router with basePath of false and i18n of false and middleware false for /not/a/real/page should have the correct router parameters after it is ready",
      "404-page-router 404-page-router with basePath of false and i18n of false and middleware false for /not/a/real/page?with=query should have the correct router parameters after it is ready",
      "404-page-router 404-page-router with basePath of false and i18n of false and middleware false should not throw any errors when re-fetching the route info",
      "404-page-router 404-page-router with basePath of false and i18n of true and middleware false for /not/a/real/page should have the correct router parameters after it is ready",
      "404-page-router 404-page-router with basePath of false and i18n of true and middleware false for /not/a/real/page?with=query should have the correct router parameters after it is ready",
      "404-page-router 404-page-router with basePath of false and i18n of true and middleware false should not throw any errors when re-fetching the route info",
      "404-page-router 404-page-router with basePath of true and i18n of false and middleware false for /docs/error should have the correct router parameters after it is ready",
      "404-page-router 404-page-router with basePath of true and i18n of false and middleware false for /docs/error?with=query should have the correct router parameters after it is ready",
      "404-page-router 404-page-router with basePath of true and i18n of false and middleware false for /not/a/real/page should have the correct router parameters after it is ready",
      "404-page-router 404-page-router with basePath of true and i18n of false and middleware false for /not/a/real/page?with=query should have the correct router parameters after it is ready",
      "404-page-router 404-page-router with basePath of true and i18n of false and middleware false should not throw any errors when re-fetching the route info",
      "404-page-router 404-page-router with basePath of true and i18n of true and middleware false for /docs/error should have the correct router parameters after it is ready",
      "404-page-router 404-page-router with basePath of true and i18n of true and middleware false for /docs/error?with=query should have the correct router parameters after it is ready",
      "404-page-router 404-page-router with basePath of true and i18n of true and middleware false for /not/a/real/page should have the correct router parameters after it is ready",
      "404-page-router 404-page-router with basePath of true and i18n of true and middleware false for /not/a/real/page?with=query should have the correct router parameters after it is ready",
      "404-page-router 404-page-router with basePath of true and i18n of true and middleware false should not throw any errors when re-fetching the route info"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/e2e/app-dir-legacy-edge-runtime-config/index.test.ts": {
    "passed": [],
    "failed": [
      "app-dir edge runtime config should warn the legacy object config export"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/_allow-underscored-root-directory/_allow-underscored-root-directory.test.ts": {
    "passed": [
      "_allow-underscored-root-directory should not serve app path with underscore",
      "_allow-underscored-root-directory should pages path with a underscore at the root"
    ],
    "failed": [
      "_allow-underscored-root-directory should serve app path with %5F"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/actions-navigation/index.test.ts": {
    "passed": [],
    "failed": [
      "app-dir action handling should handle actions correctly after following a relative link",
      "app-dir action handling should handle actions correctly after navigation / redirection events"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/e2e/app-dir/actions/app-action-export.test.ts": {
    "passed": ["app-dir action handling - next export skip test for dev mode"],
    "failed": [
      "app-dir action handling - next export should error when use export output for server actions"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/actions/app-action-invalid.test.ts": {
    "passed": [],
    "failed": [
      "app-dir action invalid config should error if serverActions is not enabled",
      "app-dir action invalid config skip test for dev mode"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/e2e/app-dir/actions/app-action-progressive-enhancement.test.ts": {
    "passed": [],
    "failed": [
      "app-dir action progressive enhancement should support actions from client without JS",
      "app-dir action progressive enhancement should support formData and redirect without JS"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/e2e/app-dir/actions/app-action-size-limit-invalid.test.ts": {
    "passed": [],
    "failed": [
      "app-dir action size limit invalid config should error if serverActionsBodySizeLimit config is a negative number",
      "app-dir action size limit invalid config should error if serverActionsBodySizeLimit config is a negative size",
      "app-dir action size limit invalid config should error if serverActionsBodySizeLimit config is invalid",
      "app-dir action size limit invalid config should respect the size set in serverActionsBodySizeLimit",
      "app-dir action size limit invalid config skip test for dev mode"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/e2e/app-dir/actions/app-action.test.ts": {
    "passed": [],
    "failed": [
      "app-dir action handling Edge SSR should allow cookie and header async storages",
      "app-dir action handling Edge SSR should handle basic actions correctly",
      "app-dir action handling Edge SSR should handle redirect to a relative URL in a single pass",
      "app-dir action handling Edge SSR should handle regular redirects",
      "app-dir action handling Edge SSR should handle unicode search params",
      "app-dir action handling Edge SSR should return error response for hoc auth wrappers in edge runtime",
      "app-dir action handling HMR should support updating the action",
      "app-dir action handling fetch actions should handle a fetch action initiated from a static page",
      "app-dir action handling fetch actions should handle redirect to a relative URL in a single pass",
      "app-dir action handling fetch actions should handle regular redirects",
      "app-dir action handling fetch actions should handle revalidatePath",
      "app-dir action handling fetch actions should handle revalidateTag",
      "app-dir action handling fetch actions should invalidate client cache on other routes when cookies.set is called",
      "app-dir action handling fetch actions should invalidate client cache when path is revalidated",
      "app-dir action handling fetch actions should invalidate client cache when tag is revalidated",
      "app-dir action handling fetch actions should revalidate when cookies.set is called",
      "app-dir action handling fetch actions should revalidate when cookies.set is called in a client action",
      "app-dir action handling fetch actions should store revalidation data in the prefetch cache",
      "app-dir action handling should bundle external libraries if they are on the action layer",
      "app-dir action handling should handle basic actions correctly",
      "app-dir action handling should not block navigation events while a server action is in flight",
      "app-dir action handling should not expose action content in sourcemaps",
      "app-dir action handling should only submit action once when resubmitting an action after navigation",
      "app-dir action handling should push new route when redirecting",
      "app-dir action handling should support .bind",
      "app-dir action handling should support chained .bind",
      "app-dir action handling should support formData and redirect",
      "app-dir action handling should support headers and cookies",
      "app-dir action handling should support headers in client imported actions",
      "app-dir action handling should support hoc auth wrappers",
      "app-dir action handling should support importing actions in client components",
      "app-dir action handling should support importing the same action module instance in both server and action layers",
      "app-dir action handling should support next/dynamic with ssr: false",
      "app-dir action handling should support notFound",
      "app-dir action handling should support notFound (javascript disabled)",
      "app-dir action handling should support setting cookies in route handlers with the correct overrides",
      "app-dir action handling should support uploading files"
    ],
    "pending": [
      "app-dir action handling fetch actions should handle revalidateTag + redirect"
    ],
    "runtimeError": true
  },
  "test/e2e/app-dir/app-a11y/index.test.ts": {
    "passed": [],
    "failed": [
      "app a11y features route announcer should announce document.title changes",
      "app a11y features route announcer should announce h1 changes",
      "app a11y features route announcer should announce route changes when h1 changes inside an inner layout",
      "app a11y features route announcer should not announce the initital title"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/app-alias/app-alias.test.ts": {
    "passed": [
      "app-dir alias should generate app-build-manifest correctly",
      "app-dir alias should handle typescript paths alias correctly",
      "app-dir alias should not contain installed react/react-dom version in client chunks",
      "app-dir alias should resolve css imports from outside with src folder presented"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/app-basepath/index.test.ts": {
    "passed": [
      "app dir - basepath should render usePathname without the basePath",
      "app dir - basepath should support `basePath`"
    ],
    "failed": [
      "app dir - basepath should prefix metadata og image with basePath",
      "app dir - basepath should prefix redirect() with basePath",
      "app dir - basepath should support Link with basePath prefixed"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/app-client-cache/client-cache.test.ts": {
    "passed": [
      "app dir client cache semantics prefetch={false} should not prefetch the page at all",
      "app dir client cache semantics prefetch={undefined} - default should refetch the full page after 5 mins",
      "app dir client cache semantics router.push should fully refetch the page after 30 seconds",
      "app dir client cache semantics router.push should re-use the cache for 30 seconds",
      "app dir client cache semantics should skip dev"
    ],
    "failed": [
      "app dir client cache semantics prefetch={false} should re-use the cache only for 30 seconds",
      "app dir client cache semantics prefetch={true} should prefetch again after 5 mins if the link is visible again",
      "app dir client cache semantics prefetch={true} should prefetch the full page",
      "app dir client cache semantics prefetch={true} should re-use the cache for the full page, only for 5 mins",
      "app dir client cache semantics prefetch={undefined} - default should prefetch partially a dynamic page",
      "app dir client cache semantics prefetch={undefined} - default should re-use the full cache for only 30 seconds",
      "app dir client cache semantics prefetch={undefined} - default should refetch below the fold after 30 seconds"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/app-compilation/index.test.ts": {
    "passed": [
      "app dir HMR should not cause error when removing loading.js",
      "app dir Loading should render loading.js in initial html for slow page"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/app-css-pageextensions/index.test.ts": {
    "passed": [
      "app dir css with pageextensions css support with pageextensions page in app directory with pageextention, css should work should support global css inside layout"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/app-css/index.test.ts": {
    "passed": [
      "app dir css HMR should not break HMR when CSS is imported in a server component",
      "app dir css HMR should support HMR for CSS imports in client components",
      "app dir css Suspensey CSS should suspend on CSS imports if its slow on client navigation",
      "app dir css css support should not affect css orders during HMR"
    ],
    "failed": [
      "app dir css HMR should not create duplicate link tags during HMR",
      "app dir css HMR should support HMR for CSS imports in server components",
      "app dir css HMR should support HMR with sass/scss",
      "app dir css css support chunks should bundle css resources into chunks",
      "app dir css css support client components should support css modules inside client components",
      "app dir css css support client components should support css modules inside client page",
      "app dir css css support client layouts should support css modules inside client layouts",
      "app dir css css support client layouts should support global css inside client layouts",
      "app dir css css support client pages should support css modules inside client pages",
      "app dir css css support client pages should support global css inside client pages",
      "app dir css css support css ordering should have inner layers take precedence over outer layers",
      "app dir css css support multiple entries should deduplicate styles on the module level",
      "app dir css css support multiple entries should only include the same style once in the flight data",
      "app dir css css support page extensions should include css imported in MDX pages",
      "app dir css css support server layouts should support css modules inside server layouts",
      "app dir css css support server layouts should support external css imports",
      "app dir css css support server pages should not contain pages css in app dir page",
      "app dir css css support server pages should support css modules inside server pages",
      "app dir css css support server pages should support global css inside server pages",
      "app dir css css support should not preload styles twice during HMR",
      "app dir css css support should reload @import styles during HMR",
      "app dir css css support special entries should include css imported in client not-found.js",
      "app dir css css support special entries should include css imported in client template.js",
      "app dir css css support special entries should include css imported in error.js",
      "app dir css css support special entries should include css imported in loading.js",
      "app dir css css support special entries should include css imported in root not-found.js",
      "app dir css css support special entries should include css imported in server not-found.js",
      "app dir css css support special entries should include css imported in server template.js",
      "app dir css css support special entries should include root layout css for root not-found.js",
      "app dir css pages dir should include css modules and global css after page transition",
      "app dir css sass support client layouts should support global sass/scss inside client layouts",
      "app dir css sass support client layouts should support sass/scss modules inside client layouts",
      "app dir css sass support client pages should support global sass/scss inside client pages",
      "app dir css sass support client pages should support sass/scss modules inside client pages",
      "app dir css sass support server layouts should support global sass/scss inside server layouts",
      "app dir css sass support server layouts should support sass/scss modules inside server layouts",
      "app dir css sass support server pages should support global sass/scss inside server pages",
      "app dir css sass support server pages should support sass/scss modules inside server pages"
    ],
    "pending": [
      "app dir css css support multiple entries should only inject the same style once if used by different layers",
      "app dir css css support multiple entries should only load chunks for the css module that is used by the specific entrypoint",
      "app dir css css support server layouts should support global css inside server layouts"
    ],
    "runtimeError": false
  },
  "test/e2e/app-dir/app-edge-root-layout/index.test.ts": {
    "passed": [],
    "failed": [
      "app-dir edge runtime root layout should mark static contain metadata routes as edge functions",
      "app-dir edge runtime root layout should not emit metadata files into bad paths"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/app-edge/app-edge.test.ts": {
    "passed": [
      "app-dir edge SSR should resolve module without error in edge runtime"
    ],
    "failed": [
      "app-dir edge SSR should generate matchers correctly in middleware manifest",
      "app-dir edge SSR should handle /index routes correctly",
      "app-dir edge SSR should handle edge only routes",
      "app-dir edge SSR should handle edge rsc hmr",
      "app-dir edge SSR should retrieve cookies in a server component in the edge runtime",
      "app-dir edge SSR should warn about the re-export of a pages runtime/preferredRegion config"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/app-external/app-external.test.ts": {
    "passed": [
      "app dir - external dependency react in external esm packages should use the same react in client app",
      "app dir - external dependency react in external esm packages should use the same react in edge server app",
      "app dir - external dependency react in external esm packages should use the same react in pages",
      "app dir - external dependency react in external esm packages should use the same react in server app",
      "app dir - external dependency should correctly collect global css imports and mark them as side effects",
      "app dir - external dependency should export client module references in esm",
      "app dir - external dependency should handle external async module libraries correctly",
      "app dir - external dependency should handle external css modules",
      "app dir - external dependency should handle external css modules in pages",
      "app dir - external dependency should handle external next/font",
      "app dir - external dependency should resolve 3rd party package exports based on the react-server condition",
      "app dir - external dependency should resolve the subset react in server components based on the react-server condition",
      "app dir - external dependency should support exporting multiple star re-exports",
      "app dir - external dependency should transpile specific external packages with the `transpilePackages` option",
      "app dir - external dependency should use the same async storages if imported directly",
      "app dir - external dependency should use the same export type for packages in both ssr and client"
    ],
    "failed": [
      "app dir - external dependency should be able to opt-out 3rd party packages being bundled in server components",
      "app dir - external dependency should have proper tree-shaking for known modules in CJS"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/app-fetch-deduping/app-fetch-deduping.test.ts": {
    "passed": [
      "app-fetch-deduping during next dev should dedupe requests called from the same component",
      "app-fetch-deduping during static generation dedupes requests amongst static workers"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/app-middleware/app-middleware.test.ts": {
    "passed": [],
    "failed": [
      "app dir middleware with middleware in src dir works without crashing when using requestAsyncStorage",
      "app dir middleware without pages dir Updates headers",
      "app-dir with middleware Mutate request headers for Edge Functions Adds new headers",
      "app-dir with middleware Mutate request headers for Edge Functions Deletes headers",
      "app-dir with middleware Mutate request headers for Edge Functions Supports draft mode",
      "app-dir with middleware Mutate request headers for Edge Functions Updates headers",
      "app-dir with middleware Mutate request headers for Serverless Functions Adds new headers",
      "app-dir with middleware Mutate request headers for Serverless Functions Deletes headers",
      "app-dir with middleware Mutate request headers for Serverless Functions Supports draft mode",
      "app-dir with middleware Mutate request headers for Serverless Functions Updates headers",
      "app-dir with middleware Mutate request headers for next/headers Adds new headers",
      "app-dir with middleware Mutate request headers for next/headers Deletes headers",
      "app-dir with middleware Mutate request headers for next/headers Supports draft mode",
      "app-dir with middleware Mutate request headers for next/headers Updates headers",
      "app-dir with middleware should filter correctly after middleware rewrite"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/e2e/app-dir/app-prefetch-false/app-prefetch-false.test.ts": {
    "passed": [
      "app-prefetch-false should avoid double-fetching when optimistic navigation fails"
    ],
    "failed": [],
    "pending": ["app-prefetch-false should skip test in dev mode"],
    "runtimeError": false
  },
  "test/e2e/app-dir/app-prefetch/prefetching.test.ts": {
    "passed": [
      "app dir prefetching NEXT_RSC_UNION_QUERY query name is _rsc",
      "app dir prefetching should navigate when prefetch is false",
      "app dir prefetching should not have prefetch error for static path",
      "app dir prefetching should not prefetch for a bot user agent",
      "app dir prefetching should skip next dev for now"
    ],
    "failed": [
      "app dir prefetching should calculate `_rsc` query based on `Next-Url`",
      "app dir prefetching should not fetch again when a static page was prefetched",
      "app dir prefetching should not fetch again when a static page was prefetched when navigating to it twice",
      "app dir prefetching should show layout eagerly when prefetched with loading one level down"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/app-rendering/rendering.test.ts": {
    "passed": [
      "app dir rendering ISR should revalidate the page when revalidate is configured",
      "app dir rendering SSR only should run data fetch in parallel",
      "app dir rendering SSR only should run data in layout and page",
      "app dir rendering should serve app/page.server.js at /",
      "app dir rendering static only should run data in layout and page",
      "app dir rendering static only should run data in parallel and use cached version for production",
      "app dir rendering static only should run data in parallel during development"
    ],
    "failed": [],
    "pending": [
      "app dir rendering mixed static and dynamic should generate static data during build and use it"
    ],
    "runtimeError": false
  },
  "test/e2e/app-dir/app-routes-trailing-slash/app-routes-trailing-slash.test.ts": {
    "passed": [],
    "failed": [
      "app-routes-trailing-slash should handle trailing slash for edge runtime",
      "app-routes-trailing-slash should handle trailing slash for node runtime"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/app-routes/app-custom-route-base-path.test.ts": {
    "passed": [
      "app-custom-routes invalid exports should print an error when exporting a default handler in dev",
      "app-custom-routes lowercase exports should print an error when using lowercase \"delete\" in dev",
      "app-custom-routes lowercase exports should print an error when using lowercase \"get\" in dev",
      "app-custom-routes lowercase exports should print an error when using lowercase \"head\" in dev",
      "app-custom-routes lowercase exports should print an error when using lowercase \"options\" in dev",
      "app-custom-routes lowercase exports should print an error when using lowercase \"patch\" in dev",
      "app-custom-routes lowercase exports should print an error when using lowercase \"post\" in dev",
      "app-custom-routes lowercase exports should print an error when using lowercase \"put\" in dev"
    ],
    "failed": [
      "app-custom-routes automatic implementations implements HEAD on routes with GET already implemented",
      "app-custom-routes automatic implementations implements OPTIONS on routes",
      "app-custom-routes basic fetch request with a response made via a DELETE request responds correctly on /basic/endpoint",
      "app-custom-routes basic fetch request with a response made via a DELETE request responds correctly on /basic/vercel/endpoint",
      "app-custom-routes basic fetch request with a response made via a GET request responds correctly on /basic/endpoint",
      "app-custom-routes basic fetch request with a response made via a GET request responds correctly on /basic/vercel/endpoint",
      "app-custom-routes basic fetch request with a response made via a PATCH request responds correctly on /basic/endpoint",
      "app-custom-routes basic fetch request with a response made via a PATCH request responds correctly on /basic/vercel/endpoint",
      "app-custom-routes basic fetch request with a response made via a POST request responds correctly on /basic/endpoint",
      "app-custom-routes basic fetch request with a response made via a POST request responds correctly on /basic/vercel/endpoint",
      "app-custom-routes basic fetch request with a response made via a PUT request responds correctly on /basic/endpoint",
      "app-custom-routes basic fetch request with a response made via a PUT request responds correctly on /basic/vercel/endpoint",
      "app-custom-routes basic fetch request with a response request can read query parameters",
      "app-custom-routes basic fetch request with a response request can read query parameters (edge)",
      "app-custom-routes basic fetch request with a response response supports the NextResponse.json() helper",
      "app-custom-routes basic fetch request with a response response supports the NextResponse.redirect() helper",
      "app-custom-routes basic fetch request with a response route groups routes to the correct handler",
      "app-custom-routes body can handle handle a streaming request and streaming response",
      "app-custom-routes body can handle handle a streaming request and streaming response (edge)",
      "app-custom-routes body can read a JSON encoded body",
      "app-custom-routes body can read a JSON encoded body (edge)",
      "app-custom-routes body can read a JSON encoded body for DELETE requests",
      "app-custom-routes body can read a JSON encoded body for OPTIONS requests",
      "app-custom-routes body can read a streamed JSON encoded body",
      "app-custom-routes body can read a streamed JSON encoded body (edge)",
      "app-custom-routes body can read the text body",
      "app-custom-routes body can read the text body (edge)",
      "app-custom-routes context does not provide params to routes without dynamic parameters",
      "app-custom-routes context provides params to routes with catch-all routes",
      "app-custom-routes context provides params to routes with dynamic parameters",
      "app-custom-routes customized metadata routes should work if conflict with metadata routes convention",
      "app-custom-routes dynamic = \"force-static\" strips search, headers, and domain from request",
      "app-custom-routes edge functions returns a response when headers are accessed",
      "app-custom-routes edge functions returns response using edge runtime",
      "app-custom-routes error conditions responds with 400 (Bad Request) when the requested method is not a valid HTTP method",
      "app-custom-routes error conditions responds with 405 (Method Not Allowed) when method is not implemented",
      "app-custom-routes error conditions responds with 500 (Internal Server Error) when the handler calls NextResponse.next()",
      "app-custom-routes error conditions responds with 500 (Internal Server Error) when the handler throws an error",
      "app-custom-routes hooks cookies gets the correct values",
      "app-custom-routes hooks cookies().has() gets the correct values",
      "app-custom-routes hooks headers gets the correct values",
      "app-custom-routes hooks notFound can respond correctly",
      "app-custom-routes hooks redirect can respond correctly",
      "app-custom-routes no response returned should print an error when no response is returned",
      "app-custom-routes works with api prefix correctly does not statically generate with dynamic usage",
      "app-custom-routes works with api prefix correctly statically generates correctly with no dynamic usage",
      "app-custom-routes works with generateStaticParams correctly responds correctly on /static/first/data.json",
      "app-custom-routes works with generateStaticParams correctly responds correctly on /static/second/data.json",
      "app-custom-routes works with generateStaticParams correctly responds correctly on /static/three/data.json",
      "app-custom-routes works with generateStaticParams correctly revalidates correctly on /revalidate-1/first/data.json",
      "app-custom-routes works with generateStaticParams correctly revalidates correctly on /revalidate-1/second/data.json",
      "app-custom-routes works with generateStaticParams correctly revalidates correctly on /revalidate-1/three/data.json"
    ],
    "pending": [
      "app-custom-routes basic fetch request with a response response supports the NextResponse.rewrite() helper"
    ],
    "runtimeError": false
  },
  "test/e2e/app-dir/app-routes/app-custom-routes.test.ts": {
    "passed": [
      "app-custom-routes invalid exports should print an error when exporting a default handler in dev",
      "app-custom-routes lowercase exports should print an error when using lowercase \"delete\" in dev",
      "app-custom-routes lowercase exports should print an error when using lowercase \"get\" in dev",
      "app-custom-routes lowercase exports should print an error when using lowercase \"head\" in dev",
      "app-custom-routes lowercase exports should print an error when using lowercase \"options\" in dev",
      "app-custom-routes lowercase exports should print an error when using lowercase \"patch\" in dev",
      "app-custom-routes lowercase exports should print an error when using lowercase \"post\" in dev",
      "app-custom-routes lowercase exports should print an error when using lowercase \"put\" in dev"
    ],
    "failed": [
      "app-custom-routes automatic implementations implements HEAD on routes with GET already implemented",
      "app-custom-routes automatic implementations implements OPTIONS on routes",
      "app-custom-routes basic fetch request with a response made via a DELETE request responds correctly on /basic/endpoint",
      "app-custom-routes basic fetch request with a response made via a DELETE request responds correctly on /basic/vercel/endpoint",
      "app-custom-routes basic fetch request with a response made via a GET request responds correctly on /basic/endpoint",
      "app-custom-routes basic fetch request with a response made via a GET request responds correctly on /basic/vercel/endpoint",
      "app-custom-routes basic fetch request with a response made via a PATCH request responds correctly on /basic/endpoint",
      "app-custom-routes basic fetch request with a response made via a PATCH request responds correctly on /basic/vercel/endpoint",
      "app-custom-routes basic fetch request with a response made via a POST request responds correctly on /basic/endpoint",
      "app-custom-routes basic fetch request with a response made via a POST request responds correctly on /basic/vercel/endpoint",
      "app-custom-routes basic fetch request with a response made via a PUT request responds correctly on /basic/endpoint",
      "app-custom-routes basic fetch request with a response made via a PUT request responds correctly on /basic/vercel/endpoint",
      "app-custom-routes basic fetch request with a response request can read query parameters",
      "app-custom-routes basic fetch request with a response request can read query parameters (edge)",
      "app-custom-routes basic fetch request with a response response supports the NextResponse.json() helper",
      "app-custom-routes basic fetch request with a response response supports the NextResponse.redirect() helper",
      "app-custom-routes basic fetch request with a response route groups routes to the correct handler",
      "app-custom-routes body can handle handle a streaming request and streaming response",
      "app-custom-routes body can handle handle a streaming request and streaming response (edge)",
      "app-custom-routes body can read a JSON encoded body",
      "app-custom-routes body can read a JSON encoded body (edge)",
      "app-custom-routes body can read a JSON encoded body for DELETE requests",
      "app-custom-routes body can read a JSON encoded body for OPTIONS requests",
      "app-custom-routes body can read a streamed JSON encoded body",
      "app-custom-routes body can read a streamed JSON encoded body (edge)",
      "app-custom-routes body can read the text body",
      "app-custom-routes body can read the text body (edge)",
      "app-custom-routes context does not provide params to routes without dynamic parameters",
      "app-custom-routes context provides params to routes with catch-all routes",
      "app-custom-routes context provides params to routes with dynamic parameters",
      "app-custom-routes customized metadata routes should work if conflict with metadata routes convention",
      "app-custom-routes dynamic = \"force-static\" strips search, headers, and domain from request",
      "app-custom-routes edge functions returns a response when headers are accessed",
      "app-custom-routes edge functions returns response using edge runtime",
      "app-custom-routes error conditions responds with 400 (Bad Request) when the requested method is not a valid HTTP method",
      "app-custom-routes error conditions responds with 405 (Method Not Allowed) when method is not implemented",
      "app-custom-routes error conditions responds with 500 (Internal Server Error) when the handler calls NextResponse.next()",
      "app-custom-routes error conditions responds with 500 (Internal Server Error) when the handler throws an error",
      "app-custom-routes hooks cookies gets the correct values",
      "app-custom-routes hooks cookies().has() gets the correct values",
      "app-custom-routes hooks headers gets the correct values",
      "app-custom-routes hooks notFound can respond correctly",
      "app-custom-routes hooks redirect can respond correctly",
      "app-custom-routes no response returned should print an error when no response is returned",
      "app-custom-routes works with api prefix correctly does not statically generate with dynamic usage",
      "app-custom-routes works with api prefix correctly statically generates correctly with no dynamic usage",
      "app-custom-routes works with generateStaticParams correctly responds correctly on /static/first/data.json",
      "app-custom-routes works with generateStaticParams correctly responds correctly on /static/second/data.json",
      "app-custom-routes works with generateStaticParams correctly responds correctly on /static/three/data.json",
      "app-custom-routes works with generateStaticParams correctly revalidates correctly on /revalidate-1/first/data.json",
      "app-custom-routes works with generateStaticParams correctly revalidates correctly on /revalidate-1/second/data.json",
      "app-custom-routes works with generateStaticParams correctly revalidates correctly on /revalidate-1/three/data.json"
    ],
    "pending": [
      "app-custom-routes basic fetch request with a response response supports the NextResponse.rewrite() helper"
    ],
    "runtimeError": false
  },
  "test/e2e/app-dir/app-simple-routes/app-simple-routes.test.ts": {
    "passed": [],
    "failed": [
      "app-simple-routes works with simple routes renders a edge route",
      "app-simple-routes works with simple routes renders a node route"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/app-static/app-fetch-logging.test.ts": {
    "passed": [],
    "failed": [
      "app-dir - data fetching with cache logging with default logging should not log fetch requests at all",
      "app-dir - data fetching with cache logging with verbose logging should log 'skip' cache status with a reason when cache: 'no-cache' is used",
      "app-dir - data fetching with cache logging with verbose logging should log 'skip' cache status with a reason when revalidate: 0 is used",
      "app-dir - data fetching with cache logging with verbose logging should log 'skip' cache status with a reason when the browser indicates caching should be ignored",
      "app-dir - data fetching with cache logging with verbose logging should only log requests in dev mode"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/e2e/app-dir/app-static/app-static-custom-cache-handler-esm.test.ts": {
    "passed": [],
    "failed": [
      "app-static-custom-cache-handler-esm should have logs from cache-handler",
      "app-static-custom-cache-handler-esm should skip"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/e2e/app-dir/app-static/app-static-custom-handler.test.ts": {
    "passed": [],
    "failed": [
      "app-dir static/dynamic handling should allow dynamic routes to access cookies",
      "app-dir static/dynamic handling should bypass fetch cache with cache-control: no-cache",
      "app-dir static/dynamic handling should cache correctly for cache: no-store",
      "app-dir static/dynamic handling should cache correctly for fetchCache = default-cache",
      "app-dir static/dynamic handling should cache correctly for fetchCache = force-cache",
      "app-dir static/dynamic handling should cache correctly handle JSON body",
      "app-dir static/dynamic handling should cache correctly with POST method and revalidate",
      "app-dir static/dynamic handling should cache correctly with authorization header and revalidate",
      "app-dir static/dynamic handling should cache correctly with cookie header and revalidate",
      "app-dir static/dynamic handling should cache correctly with post method and revalidate",
      "app-dir static/dynamic handling should cache correctly with post method and revalidate edge",
      "app-dir static/dynamic handling should cache correctly with utf8 encoding",
      "app-dir static/dynamic handling should cache correctly with utf8 encoding edge",
      "app-dir static/dynamic handling should correctly handle fetchCache = \"force-no-store\"",
      "app-dir static/dynamic handling should correctly handle multi-level generateStaticParams when some levels are missing",
      "app-dir static/dynamic handling should correctly handle statusCode with notFound + ISR",
      "app-dir static/dynamic handling should correctly include headers instance in cache key",
      "app-dir static/dynamic handling should correctly skip caching POST fetch for POST handler",
      "app-dir static/dynamic handling should error correctly for invalid params from generateStaticParams",
      "app-dir static/dynamic handling should force SSR correctly for headers usage",
      "app-dir static/dynamic handling should handle dynamicParams: false correctly",
      "app-dir static/dynamic handling should handle dynamicParams: true correctly",
      "app-dir static/dynamic handling should handle partial-gen-params with default dynamicParams correctly",
      "app-dir static/dynamic handling should handle partial-gen-params with layout dynamicParams = false correctly",
      "app-dir static/dynamic handling should handle partial-gen-params with page dynamicParams = false correctly",
      "app-dir static/dynamic handling should have correct prerender-manifest entries",
      "app-dir static/dynamic handling should have logs from cache-handler",
      "app-dir static/dynamic handling should honor fetch cache correctly",
      "app-dir static/dynamic handling should honor fetch cache correctly (edge)",
      "app-dir static/dynamic handling should keep querystring on static page",
      "app-dir static/dynamic handling should navigate to static path correctly",
      "app-dir static/dynamic handling should not cache correctly with POST method request init",
      "app-dir static/dynamic handling should not cache non-ok statusCode",
      "app-dir static/dynamic handling should not error with dynamic server usage with force-static",
      "app-dir static/dynamic handling should not error with force-dynamic and catch-all routes",
      "app-dir static/dynamic handling should not error with generateStaticParams and authed data on revalidate",
      "app-dir static/dynamic handling should not error with generateStaticParams and dynamic data",
      "app-dir static/dynamic handling should not have cache tags header for non-minimal mode",
      "app-dir static/dynamic handling should not throw Dynamic Server Usage error when using generateStaticParams with draftMode",
      "app-dir static/dynamic handling should output HTML/RSC files for static paths",
      "app-dir static/dynamic handling should output debug info for static bailouts",
      "app-dir static/dynamic handling should produce response with url from fetch",
      "app-dir static/dynamic handling should propagate unstable_cache tags correctly",
      "app-dir static/dynamic handling should properly error when dynamic = \"error\" page uses dynamic",
      "app-dir static/dynamic handling should render not found pages correctly and fallback to the default one",
      "app-dir static/dynamic handling should skip cache in draft mode",
      "app-dir static/dynamic handling should ssr dynamically when detected automatically with fetch cache option",
      "app-dir static/dynamic handling should ssr dynamically when forced via config",
      "app-dir static/dynamic handling should work with dynamic path no generateStaticParams",
      "app-dir static/dynamic handling should work with forced dynamic path",
      "app-dir static/dynamic handling unstable-cache should work in pages/api/unstable-cache-edge",
      "app-dir static/dynamic handling unstable-cache should work in pages/api/unstable-cache-node",
      "app-dir static/dynamic handling unstable-cache should work in pages/unstable-cache-edge",
      "app-dir static/dynamic handling unstable-cache should work in pages/unstable-cache-node",
      "app-dir static/dynamic handling usePathname should have the correct values",
      "app-dir static/dynamic handling usePathname should have values from canonical url on rewrite",
      "app-dir static/dynamic handling useSearchParams client should bailout to client rendering - with suspense boundary",
      "app-dir static/dynamic handling useSearchParams client should bailout to client rendering - without suspense boundary",
      "app-dir static/dynamic handling useSearchParams client should have values from canonical url on rewrite",
      "app-dir static/dynamic handling useSearchParams server response should bailout to client rendering - with suspense boundary",
      "app-dir static/dynamic handling useSearchParams server response should bailout to client rendering - without suspense boundary"
    ],
    "pending": [
      "app-dir static/dynamic handling should correctly de-dupe fetch without next cache /react-fetch-deduping-edge",
      "app-dir static/dynamic handling should correctly de-dupe fetch without next cache /react-fetch-deduping-node",
      "app-dir static/dynamic handling should ssr dynamically when detected automatically with fetch revalidate option",
      "app-dir static/dynamic handling useSearchParams client should have empty search params on force-static",
      "app-dir static/dynamic handling useSearchParams server response should have empty search params on force-static"
    ],
    "runtimeError": true
  },
  "test/e2e/app-dir/app-static/app-static.test.ts": {
    "passed": [],
    "failed": [
      "app-dir static/dynamic handling it should revalidate correctly with edge route handler",
      "app-dir static/dynamic handling it should revalidate correctly with node route handler",
      "app-dir static/dynamic handling it should revalidate tag correctly with edge route handler",
      "app-dir static/dynamic handling it should revalidate tag correctly with node route handler",
      "app-dir static/dynamic handling should allow dynamic routes to access cookies",
      "app-dir static/dynamic handling should bypass fetch cache with cache-control: no-cache",
      "app-dir static/dynamic handling should cache correctly for cache: no-store",
      "app-dir static/dynamic handling should cache correctly for fetchCache = default-cache",
      "app-dir static/dynamic handling should cache correctly for fetchCache = force-cache",
      "app-dir static/dynamic handling should cache correctly handle JSON body",
      "app-dir static/dynamic handling should cache correctly with POST method and revalidate",
      "app-dir static/dynamic handling should cache correctly with authorization header and revalidate",
      "app-dir static/dynamic handling should cache correctly with cookie header and revalidate",
      "app-dir static/dynamic handling should cache correctly with post method and revalidate",
      "app-dir static/dynamic handling should cache correctly with post method and revalidate edge",
      "app-dir static/dynamic handling should cache correctly with utf8 encoding",
      "app-dir static/dynamic handling should cache correctly with utf8 encoding edge",
      "app-dir static/dynamic handling should correctly handle fetchCache = \"force-no-store\"",
      "app-dir static/dynamic handling should correctly handle multi-level generateStaticParams when some levels are missing",
      "app-dir static/dynamic handling should correctly handle statusCode with notFound + ISR",
      "app-dir static/dynamic handling should correctly include headers instance in cache key",
      "app-dir static/dynamic handling should correctly skip caching POST fetch for POST handler",
      "app-dir static/dynamic handling should error correctly for invalid params from generateStaticParams",
      "app-dir static/dynamic handling should force SSR correctly for headers usage",
      "app-dir static/dynamic handling should handle dynamicParams: false correctly",
      "app-dir static/dynamic handling should handle dynamicParams: true correctly",
      "app-dir static/dynamic handling should handle partial-gen-params with default dynamicParams correctly",
      "app-dir static/dynamic handling should handle partial-gen-params with layout dynamicParams = false correctly",
      "app-dir static/dynamic handling should handle partial-gen-params with page dynamicParams = false correctly",
      "app-dir static/dynamic handling should have correct prerender-manifest entries",
      "app-dir static/dynamic handling should honor dynamic = \"force-static\" correctly",
      "app-dir static/dynamic handling should honor dynamic = \"force-static\" correctly (lazy)",
      "app-dir static/dynamic handling should honor fetch cache correctly",
      "app-dir static/dynamic handling should honor fetch cache correctly (edge)",
      "app-dir static/dynamic handling should honor fetch cache in generateStaticParams",
      "app-dir static/dynamic handling should keep querystring on static page",
      "app-dir static/dynamic handling should navigate to static path correctly",
      "app-dir static/dynamic handling should not cache correctly with POST method request init",
      "app-dir static/dynamic handling should not cache non-ok statusCode",
      "app-dir static/dynamic handling should not error with dynamic server usage with force-static",
      "app-dir static/dynamic handling should not error with force-dynamic and catch-all routes",
      "app-dir static/dynamic handling should not error with generateStaticParams and authed data on revalidate",
      "app-dir static/dynamic handling should not error with generateStaticParams and dynamic data",
      "app-dir static/dynamic handling should not have cache tags header for non-minimal mode",
      "app-dir static/dynamic handling should not revalidate / when revalidate is not used",
      "app-dir static/dynamic handling should not throw Dynamic Server Usage error when using generateStaticParams with draftMode",
      "app-dir static/dynamic handling should output HTML/RSC files for static paths",
      "app-dir static/dynamic handling should output debug info for static bailouts",
      "app-dir static/dynamic handling should produce response with url from fetch",
      "app-dir static/dynamic handling should propagate unstable_cache tags correctly",
      "app-dir static/dynamic handling should properly error when dynamic = \"error\" page uses dynamic",
      "app-dir static/dynamic handling should render not found pages correctly and fallback to the default one",
      "app-dir static/dynamic handling should revalidate all fetches during on-demand revalidate",
      "app-dir static/dynamic handling should revalidate correctly with config and fetch revalidate",
      "app-dir static/dynamic handling should skip cache in draft mode",
      "app-dir static/dynamic handling should ssr dynamically when detected automatically with fetch cache option",
      "app-dir static/dynamic handling should ssr dynamically when forced via config",
      "app-dir static/dynamic handling should work with dynamic path no generateStaticParams",
      "app-dir static/dynamic handling should work with forced dynamic path",
      "app-dir static/dynamic handling unstable-cache should work in pages/api/unstable-cache-edge",
      "app-dir static/dynamic handling unstable-cache should work in pages/api/unstable-cache-node",
      "app-dir static/dynamic handling unstable-cache should work in pages/unstable-cache-edge",
      "app-dir static/dynamic handling unstable-cache should work in pages/unstable-cache-node",
      "app-dir static/dynamic handling usePathname should have the correct values",
      "app-dir static/dynamic handling usePathname should have values from canonical url on rewrite",
      "app-dir static/dynamic handling useSearchParams client should bailout to client rendering - with suspense boundary",
      "app-dir static/dynamic handling useSearchParams client should bailout to client rendering - without suspense boundary",
      "app-dir static/dynamic handling useSearchParams client should have values from canonical url on rewrite",
      "app-dir static/dynamic handling useSearchParams server response should bailout to client rendering - with suspense boundary",
      "app-dir static/dynamic handling useSearchParams server response should bailout to client rendering - without suspense boundary"
    ],
    "pending": [
      "app-dir static/dynamic handling should correctly de-dupe fetch without next cache /react-fetch-deduping-edge",
      "app-dir static/dynamic handling should correctly de-dupe fetch without next cache /react-fetch-deduping-node",
      "app-dir static/dynamic handling should ssr dynamically when detected automatically with fetch revalidate option",
      "app-dir static/dynamic handling useSearchParams client should have empty search params on force-static",
      "app-dir static/dynamic handling useSearchParams server response should have empty search params on force-static"
    ],
    "runtimeError": true
  },
  "test/e2e/app-dir/app-validation/validation.test.ts": {
    "passed": [
      "app dir validation should error when passing invalid router state tree"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/app/index.test.ts": {
    "passed": [],
    "failed": [
      "app dir <Link /> should allow linking from app page to pages page",
      "app dir <Link /> should be soft for back navigation",
      "app dir <Link /> should be soft for forward navigation",
      "app dir <Link /> should hard push",
      "app dir <Link /> should hard replace",
      "app dir <Link /> should navigate to pages dynamic route from pages page if it overlaps with an app page",
      "app dir <Link /> should push to external url",
      "app dir <Link /> should replace to external url",
      "app dir <Link /> should soft push",
      "app dir HMR should HMR correctly for client component",
      "app dir HMR should HMR correctly for server component",
      "app dir Subresource Integrity does not include nonce when not enabled",
      "app dir Subresource Integrity includes a nonce value with bootstrap scripts when Content-Security-Policy header is defined",
      "app dir Subresource Integrity includes a nonce value with inline scripts when Content-Security-Policy header is defined",
      "app dir Subresource Integrity includes an integrity attribute on scripts",
      "app dir Subresource Integrity throws when escape characters are included in nonce",
      "app dir bootstrap scripts should fail to bootstrap when using CSP in Dev due to eval",
      "app dir bootstrap scripts should only bootstrap with one script, prinitializing the rest",
      "app dir bootstrap scripts should successfully bootstrap even when using CSP",
      "app dir data fetch with response over 16KB with chunked encoding should load page when fetching a large amount of data",
      "app dir error component should allow resetting error boundary",
      "app dir error component should display error digest for error in server component with default error boundary",
      "app dir error component should hydrate empty shell to handle server-side rendering errors",
      "app dir error component should trigger error component when an error happens during rendering",
      "app dir error component should trigger error component when an error happens during server components rendering",
      "app dir error component should use default error boundary for prod and overlay for dev when no error component specified",
      "app dir known bugs should handle as on next/link",
      "app dir known bugs should handle next/link back to initially loaded page",
      "app dir known bugs should handle router.refresh without resetting state",
      "app dir known bugs should not do additional pushState when already on the page",
      "app dir known bugs should not share flight data between requests",
      "app dir known bugs should support React cache client component",
      "app dir known bugs should support React cache client component client-navigation",
      "app dir known bugs should support React cache middleware overriding headers",
      "app dir known bugs should support React cache server component",
      "app dir known bugs should support React cache server component client-navigation",
      "app dir known bugs should support React fetch instrumentation server component",
      "app dir known bugs should support React fetch instrumentation server component client-navigation",
      "app dir next/script should insert preload tags for beforeInteractive and afterInteractive scripts",
      "app dir next/script should load stylesheets for next/scripts",
      "app dir next/script should support next/script and render in correct order",
      "app dir rewrites should support rewrites on client-side navigation",
      "app dir rewrites should support rewrites on client-side navigation from pages to app with existing pages path",
      "app dir rewrites should support rewrites on initial load",
      "app dir searchParams prop client component should have the correct search params",
      "app dir searchParams prop client component should have the correct search params on middleware rewrite",
      "app dir searchParams prop client component should have the correct search params on rewrite",
      "app dir searchParams prop server component should have the correct search params",
      "app dir searchParams prop server component should have the correct search params on middleware rewrite",
      "app dir searchParams prop server component should have the correct search params on rewrite",
      "app dir server components Loading should render loading.js in browser for slow layout",
      "app dir server components Loading should render loading.js in browser for slow layout and page",
      "app dir server components Loading should render loading.js in browser for slow page",
      "app dir server components Loading should render loading.js in initial html for slow layout",
      "app dir server components Loading should render loading.js in initial html for slow layout and page",
      "app dir server components Loading should render loading.js in initial html for slow page",
      "app dir server components catch-all routes should handle catch-all segments link",
      "app dir server components catch-all routes should handle optional catch-all segments link",
      "app dir server components catch-all routes should handle optional segments",
      "app dir server components catch-all routes should handle optional segments root",
      "app dir server components catch-all routes should handle required segments",
      "app dir server components catch-all routes should handle required segments root as not found",
      "app dir server components client components should have consistent query and params handling",
      "app dir server components dynamic routes should only pass params that apply to the layout",
      "app dir server components middleware should strip internal query parameters from requests to middleware for redirect",
      "app dir server components middleware should strip internal query parameters from requests to middleware for rewrite",
      "app dir server components next/router should support router.back and router.forward",
      "app dir server components should include client component layout with server component route should include it client-side",
      "app dir server components should include client component layout with server component route should include it server-side",
      "app dir server components should not serve .client.js as a path",
      "app dir server components should not serve .server.js as a path",
      "app dir server components should serve client component should serve client-side",
      "app dir server components should serve client component should serve server-side",
      "app dir server components should serve shared component",
      "app dir should encode chunk path correctly",
      "app dir should ensure the </body></html> suffix is at the end of the stream",
      "app dir should generate build traces correctly",
      "app dir should handle hash in initial url",
      "app dir should have correct preferredRegion values in manifest",
      "app dir should have correct searchParams and params (client)",
      "app dir should have correct searchParams and params (server)",
      "app dir should have correct size in build output",
      "app dir should include document html and body",
      "app dir should include layouts when no direct parent layout",
      "app dir should include parent document when no direct parent layout",
      "app dir should match redirects in pages correctly $path",
      "app dir should not apply client router filter on shallow",
      "app dir should not create new root layout when nested (optional)",
      "app dir should not have duplicate config warnings",
      "app dir should not include parent when not in parent directory",
      "app dir should not rerender layout when navigating between routes in the same layout",
      "app dir should not serve when layout is provided but no folder index",
      "app dir should not share edge workers",
      "app dir should pass props from getServerSideProps in root layout",
      "app dir should return the `vary` header from edge runtime",
      "app dir should return the `vary` header from pages for flight requests",
      "app dir should serve /index as separate page",
      "app dir should serve dynamic parameter",
      "app dir should serve dynamic route from pages",
      "app dir should serve from app",
      "app dir should serve from pages",
      "app dir should serve from public",
      "app dir should serve nested parent",
      "app dir should serve page as a segment name correctly",
      "app dir should serve polyfills for browsers that do not support modules",
      "app dir should successfully detect app route during prefetch",
      "app dir should use RSC prefetch data from build",
      "app dir should use new root layout when provided",
      "app dir should use text/x-component for flight",
      "app dir should use text/x-component for flight with edge runtime",
      "app dir should work for catch-all edge page",
      "app dir template component should render the template that holds state in a client component and reset on navigation",
      "app dir template component should render the template that is a server component and rerender on navigation"
    ],
    "pending": [
      "app dir <Link /> should soft replace",
      "app dir HMR should HMR correctly when changing the component type",
      "app dir Subresource Integrity does not include nonce when not enabled",
      "app dir Subresource Integrity includes a nonce value with bootstrap scripts when Content-Security-Policy header is defined",
      "app dir Subresource Integrity includes a nonce value with inline scripts when Content-Security-Policy header is defined",
      "app dir Subresource Integrity includes an integrity attribute on scripts",
      "app dir Subresource Integrity throws when escape characters are included in nonce",
      "app dir known bugs should support React fetch instrumentation client component",
      "app dir known bugs should support React fetch instrumentation client component client-navigation",
      "app dir should handle css imports in next/dynamic correctly",
      "app dir should match partial parameters",
      "app dir should not include parent when not in parent directory with route in directory",
      "app dir should not rerender layout when navigating between routes in the same layout",
      "app dir template component should render the template that is a server component and rerender on navigation"
    ],
    "runtimeError": true
  },
  "test/e2e/app-dir/app/standalone.test.ts": {
    "passed": ["should skip for non-next start"],
    "failed": [
      "output: standalone with app dir should handle trace files correctly for route groups (nodejs only)",
      "output: standalone with app dir should work correctly with output standalone"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/app/useReportWebVitals.test.ts": {
    "passed": [],
    "failed": [
      "useReportWebVitals hook should send web-vitals to vercel-insights"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/e2e/app-dir/app/vercel-speed-insights.test.ts": {
    "passed": [],
    "failed": [
      "vercel speed insights with assetPrefix Vercel analytics should send web vitals to Vercel analytics",
      "vercel speed insights without assetPrefix Vercel analytics should send web vitals to Vercel analytics"
    ],
    "pending": [
      "vercel speed insights with assetPrefix Vercel analytics should send web vitals to Vercel analytics",
      "vercel speed insights without assetPrefix Vercel analytics should send web vitals to Vercel analytics"
    ],
    "runtimeError": false
  },
  "test/e2e/app-dir/asset-prefix/asset-prefix.test.ts": {
    "passed": [
      "app-dir assetPrefix handling should redirect route when clicking link",
      "app-dir assetPrefix handling should redirect route when requesting it directly",
      "app-dir assetPrefix handling should redirect route when requesting it directly by browser",
      "app-dir assetPrefix handling should render link"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/async-component-preload/async-component-preload.test.ts": {
    "passed": [
      "async-component-preload should handle redirect in an async page"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/autoscroll-with-css-modules/index.test.ts": {
    "passed": [
      "router autoscrolling on navigation vertical scroll when page imports css modules should scroll to top of document when navigating between to pages without layout when",
      "router autoscrolling on navigation vertical scroll when page imports css modules should scroll when clicking in JS"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/back-button-download-bug/back-button-download-bug.test.ts": {
    "passed": [],
    "failed": [],
    "pending": [
      "app-dir back button download bug app-dir back button download bug should redirect route when clicking link"
    ],
    "runtimeError": false
  },
  "test/e2e/app-dir/build-size/index.test.ts": {
    "passed": [
      "app-dir build size should have correct size in build output",
      "app-dir build size should skip next dev for now"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/create-root-layout/create-root-layout.test.ts": {
    "passed": [],
    "failed": [
      "app-dir create root layout build should break the build if a page is missing root layout",
      "app-dir create root layout page.js find available dir create root layout",
      "app-dir create root layout page.js root layout in app create root layout",
      "app-dir create root layout page.js root layout in route group create root layout",
      "app-dir create root layout page.tsx create root layout"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/crypto-globally-available/crypto-globally-available.test.ts": {
    "passed": [
      "Web Crypto API is available globally should be available in Route Handlers",
      "Web Crypto API is available globally should be available in Server Components"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/deopted-into-client-rendering-warning/deopted-into-client-rendering-warning.test.ts": {
    "passed": ["should not show deopted into client rendering warning"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/draft-mode/draft-mode.test.ts": {
    "passed": [],
    "failed": [
      "app dir - draft mode in edge runtime should be disabled from api route handler",
      "app dir - draft mode in edge runtime should be enabled from api route handler when draft mode enabled",
      "app dir - draft mode in edge runtime should genenerate rand when draft mode enabled",
      "app dir - draft mode in edge runtime should have set-cookie header on enable",
      "app dir - draft mode in edge runtime should have set-cookie header with redirect location",
      "app dir - draft mode in edge runtime should not perform full page navigation on router.refresh()",
      "app dir - draft mode in edge runtime should not read other cookies when draft mode disabled during next start",
      "app dir - draft mode in edge runtime should read other cookies when draft mode enabled",
      "app dir - draft mode in edge runtime should use initial rand when draft mode is disabled on /with-edge/index",
      "app dir - draft mode in edge runtime should use initial rand when draft mode is disabled on /with-edge/with-cookies",
      "app dir - draft mode in nodejs runtime should be disabled from api route handler",
      "app dir - draft mode in nodejs runtime should be enabled from api route handler when draft mode enabled",
      "app dir - draft mode in nodejs runtime should genenerate rand when draft mode enabled",
      "app dir - draft mode in nodejs runtime should have set-cookie header on enable",
      "app dir - draft mode in nodejs runtime should have set-cookie header with redirect location",
      "app dir - draft mode in nodejs runtime should not generate rand when draft mode disabled during next start",
      "app dir - draft mode in nodejs runtime should not perform full page navigation on router.refresh()",
      "app dir - draft mode in nodejs runtime should not read other cookies when draft mode disabled during next start",
      "app dir - draft mode in nodejs runtime should read other cookies when draft mode enabled",
      "app dir - draft mode in nodejs runtime should use initial rand when draft mode is disabled on /index",
      "app dir - draft mode in nodejs runtime should use initial rand when draft mode is disabled on /with-cookies"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/dynamic-href/dynamic-href.test.ts": {
    "passed": [
      "dynamic-href should error when using dynamic href in app dir",
      "dynamic-href should error when using dynamic href.pathname in app dir",
      "dynamic-href should not error on /object in prod",
      "dynamic-href should not error on /string in prod"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/dynamic/dynamic.test.ts": {
    "passed": [],
    "failed": [
      "app dir - next/dynamic should generate correct client manifest for dynamic chunks",
      "app dir - next/dynamic should handle next/dynamic in SSR correctly",
      "app dir - next/dynamic should handle next/dynamic in hydration correctly",
      "app dir - next/dynamic should handle ssr: false in pages when appDir is enabled"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/edge-runtime-node-compatibility/edge-runtime-node-compatibility.test.ts": {
    "passed": [],
    "failed": [
      "edge runtime node compatibility [app] supports node:buffer",
      "edge runtime node compatibility [pages/api] supports node:buffer"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/emotion-js/index.test.ts": {
    "passed": [],
    "failed": [
      "app dir - emotion-js should render emotion-js css with compiler.emotion option correctly"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/error-boundary-navigation/index.test.ts": {
    "passed": [],
    "failed": [
      "app dir - not found navigation should allow navigating to a non-existent page",
      "app dir - not found navigation should allow navigating to a page calling notfound",
      "app dir - not found navigation should allow navigation back to route that was initially not-found",
      "app dir - not found navigation should allow navigation on error",
      "app dir - not found navigation should allow navigation on not-found",
      "app dir - not found navigation should allow navigation to other routes on route that was initially not-found",
      "app dir - not found navigation should be able to navigate to other page from root not-found page"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/error-boundary-navigation/override-node-env.test.ts": {
    "passed": [],
    "failed": [
      "app dir - not found navigation - with overridden node env should allow navigating to a non-existent page",
      "app dir - not found navigation - with overridden node env should allow navigating to a page calling notfound",
      "app dir - not found navigation - with overridden node env should allow navigation back to route that was initially not-found",
      "app dir - not found navigation - with overridden node env should allow navigation on error",
      "app dir - not found navigation - with overridden node env should allow navigation on not-found",
      "app dir - not found navigation - with overridden node env should allow navigation to other routes on route that was initially not-found",
      "app dir - not found navigation - with overridden node env should be able to navigate to other page from root not-found page",
      "app dir - not found navigation should allow navigating to a non-existent page",
      "app dir - not found navigation should allow navigating to a page calling notfound",
      "app dir - not found navigation should allow navigation back to route that was initially not-found",
      "app dir - not found navigation should allow navigation on error",
      "app dir - not found navigation should allow navigation on not-found",
      "app dir - not found navigation should allow navigation to other routes on route that was initially not-found",
      "app dir - not found navigation should be able to navigate to other page from root not-found page"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/front-redirect-issue/front-redirect-issue.test.ts": {
    "passed": ["app dir - front redirect issue should redirect"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/global-error/basic/index.test.ts": {
    "passed": [],
    "failed": [
      "app dir - global error should catch metadata error in error boundary if presented",
      "app dir - global error should catch metadata error in global-error if no error boundary is presented",
      "app dir - global error should render global error for error in client components",
      "app dir - global error should render global error for error in server components",
      "app dir - global error should trigger error component when an error happens during rendering"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/global-error/layout-error/index.test.ts": {
    "passed": [],
    "failed": [
      "app dir - global error - layout error should render global error for error in server components"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/headers-static-bailout/headers-static-bailout.test.ts": {
    "passed": [
      "headers-static-bailout it provides a helpful link in case static generation bailout is uncaught",
      "headers-static-bailout should bailout when using an import from next/headers",
      "headers-static-bailout should not bailout when not using headers",
      "headers-static-bailout should skip"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/hello-world/hello-world.test.ts": {
    "passed": [
      "hello-world should work using browser",
      "hello-world should work using cheerio",
      "hello-world should work with fetch",
      "hello-world should work with html"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/hooks/hooks.test.ts": {
    "passed": [
      "app dir - hooks from pages should have the correct hooks",
      "app dir - hooks useDraftMode should genenerate rand when draft mode enabled",
      "app dir - hooks useDraftMode should use initial rand when draft mode be disabled",
      "app dir - hooks usePathname should have the canonical url pathname on rewrite",
      "app dir - hooks usePathname should have the correct pathname",
      "app dir - hooks useSearchParams should have the canonical url search params on rewrite",
      "app dir - hooks useSearchParams should have the correct search params",
      "app dir - hooks useSelectedLayoutSegment should have the correct layout segment at /hooks/use-selected-layout-segment/first",
      "app dir - hooks useSelectedLayoutSegment should have the correct layout segment at /hooks/use-selected-layout-segment/first/slug1",
      "app dir - hooks useSelectedLayoutSegment should have the correct layout segment at /hooks/use-selected-layout-segment/first/slug2/second/a/b",
      "app dir - hooks useSelectedLayoutSegment should return null in pages",
      "app dir - hooks useSelectedLayoutSegments should have the correct layout segments at /hooks/use-selected-layout-segment/first",
      "app dir - hooks useSelectedLayoutSegments should have the correct layout segments at /hooks/use-selected-layout-segment/first/slug1",
      "app dir - hooks useSelectedLayoutSegments should have the correct layout segments at /hooks/use-selected-layout-segment/first/slug2/second",
      "app dir - hooks useSelectedLayoutSegments should have the correct layout segments at /hooks/use-selected-layout-segment/first/slug2/second/a/b",
      "app dir - hooks useSelectedLayoutSegments should have the correct layout segments at /hooks/use-selected-layout-segment/rewritten",
      "app dir - hooks useSelectedLayoutSegments should return an empty array in pages"
    ],
    "failed": [
      "app dir - hooks useRouter should allow access to the router",
      "app dir - hooks useSelectedLayoutSegments should have the correct layout segments at /hooks/use-selected-layout-segment/rewritten-middleware"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/i18n-hybrid/i18n-hybrid.test.js": {
    "passed": [
      "i18n-hybrid does not resolve /en-CA/blog/first-post",
      "i18n-hybrid does not resolve /en-US/blog/first-post",
      "i18n-hybrid does not resolve /fr-CA/blog/first-post",
      "i18n-hybrid does not resolve /fr-FR/blog/first-post",
      "i18n-hybrid does resolve /about",
      "i18n-hybrid does resolve /blog/first-post",
      "i18n-hybrid does resolve /en-CA/about",
      "i18n-hybrid does resolve /en-US/about",
      "i18n-hybrid does resolve /fr-CA/about",
      "i18n-hybrid does resolve /fr-FR/about"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/import/import.test.ts": {
    "passed": [
      "app dir imports we can import all components from .js",
      "app dir imports we can import all components from .jsx",
      "app dir imports we can import all components from .ts",
      "app dir imports we can import all components from .tsx"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/interception-middleware-rewrite/interception-middleware-rewrite.test.ts": {
    "passed": [],
    "failed": [
      "interception-middleware-rewrite should support intercepting routes with a middleware rewrite"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/interoperability-with-pages/navigation.test.ts": {
    "passed": [
      "navigation between pages and app dir It should be able to navigate app -> pages",
      "navigation between pages and app dir It should be able to navigate app -> pages and go back and forward",
      "navigation between pages and app dir It should be able to navigate pages -> app",
      "navigation between pages and app dir It should be able to navigate pages -> app and go back an forward"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/layout-params/layout-params.test.ts": {
    "passed": [
      "app dir - layout params basic params check layout renders just it's params",
      "app dir - layout params basic params check layout without params get no params",
      "app dir - layout params basic params check topmost layout renders all params",
      "app dir - layout params catchall params should give catchall params just to last layout",
      "app dir - layout params catchall params should give empty optional catchall params won't give params to any layout",
      "app dir - layout params catchall params should give optional catchall params just to last layout"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/mdx/mdx.test.ts": {
    "passed": [],
    "failed": [
      "mdx with-mdx-rs app directory should allow overriding components",
      "mdx with-mdx-rs app directory should work in initial html",
      "mdx with-mdx-rs app directory should work in initial html with mdx import",
      "mdx with-mdx-rs app directory should work using browser",
      "mdx with-mdx-rs app directory should work using browser with mdx import",
      "mdx with-mdx-rs pages directory should allow overriding components",
      "mdx with-mdx-rs pages directory should work in initial html",
      "mdx with-mdx-rs pages directory should work in initial html with mdx import",
      "mdx with-mdx-rs pages directory should work using browser",
      "mdx with-mdx-rs pages directory should work using browser with mdx import",
      "mdx without-mdx-rs app directory should allow overriding components",
      "mdx without-mdx-rs app directory should work in initial html",
      "mdx without-mdx-rs app directory should work in initial html with mdx import",
      "mdx without-mdx-rs app directory should work using browser",
      "mdx without-mdx-rs app directory should work using browser with mdx import",
      "mdx without-mdx-rs pages directory should allow overriding components",
      "mdx without-mdx-rs pages directory should work in initial html",
      "mdx without-mdx-rs pages directory should work in initial html with mdx import",
      "mdx without-mdx-rs pages directory should work using browser",
      "mdx without-mdx-rs pages directory should work using browser with mdx import"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/metadata-dynamic-routes/index.test.ts": {
    "passed": [
      "app dir - metadata dynamic routes should error when id is missing in generateImageMetadata"
    ],
    "failed": [
      "app dir - metadata dynamic routes icon image routes should render apple icon with dynamic routes",
      "app dir - metadata dynamic routes icon image routes should render icon with dynamic routes",
      "app dir - metadata dynamic routes should error when id is missing in generateSitemaps",
      "app dir - metadata dynamic routes should generate static paths of dynamic sitemap in production",
      "app dir - metadata dynamic routes should generate unique path for image routes under group routes",
      "app dir - metadata dynamic routes should include default og font files in file trace",
      "app dir - metadata dynamic routes should inject dynamic metadata properly to head",
      "app dir - metadata dynamic routes should optimize routes without multiple generation API as static routes",
      "app dir - metadata dynamic routes should pick configured metadataBase instead of deployment url for canonical url",
      "app dir - metadata dynamic routes should support edge runtime of image routes",
      "app dir - metadata dynamic routes should use localhost for local prod and fallback to deployment url when metadataBase is falsy",
      "app dir - metadata dynamic routes social image routes should fill params into dynamic routes url of metadata images",
      "app dir - metadata dynamic routes social image routes should fill params into routes groups url of static images",
      "app dir - metadata dynamic routes social image routes should handle custom fonts in both edge and nodejs runtime",
      "app dir - metadata dynamic routes social image routes should handle manifest.[ext] dynamic routes",
      "app dir - metadata dynamic routes social image routes should render og image with opengraph-image dynamic routes",
      "app dir - metadata dynamic routes social image routes should render og image with twitter-image dynamic routes",
      "app dir - metadata dynamic routes social image routes should support generate multi images with generateImageMetadata",
      "app dir - metadata dynamic routes social image routes should support generate multi sitemaps with generateSitemaps",
      "app dir - metadata dynamic routes social image routes should support params as argument in dynamic routes",
      "app dir - metadata dynamic routes text routes should handle robots.[ext] dynamic routes",
      "app dir - metadata dynamic routes text routes should handle sitemap.[ext] dynamic routes",
      "app dir - metadata dynamic routes text routes should not throw if client components are imported but not used"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/metadata-edge/index.test.ts": {
    "passed": [],
    "failed": [
      "app dir - Metadata API on the Edge runtime OG image route should not bundle `ImageResponse` into the page worker",
      "app dir - Metadata API on the Edge runtime should render OpenGraph image meta tag correctly"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/metadata-missing-metadata-base/index.test.ts": {
    "passed": [
      "app dir - metadata missing metadataBase should fallback to localhost if metadataBase is missing for absolute urls resolving"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/metadata-suspense/index.test.ts": {
    "passed": [
      "app dir - metadata dynamic routes should render metadata in head even root layout is wrapped with Suspense"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/metadata/metadata.test.ts": {
    "passed": [],
    "failed": [
      "app dir - metadata basic should apply metadata when navigating client-side",
      "app dir - metadata basic should handle metadataBase for urls resolved as only URL type",
      "app dir - metadata basic should relative canonical url",
      "app dir - metadata basic should support alternate tags",
      "app dir - metadata basic should support appLinks tags",
      "app dir - metadata basic should support apple related tags `itunes` and `appWebApp`",
      "app dir - metadata basic should support generateMetadata export",
      "app dir - metadata basic should support other basic tags",
      "app dir - metadata basic should support other basic tags (edge)",
      "app dir - metadata basic should support robots tags",
      "app dir - metadata basic should support stashed title in one layer of page and layout",
      "app dir - metadata basic should support stashed title in two layers of page and layout",
      "app dir - metadata basic should support title and description",
      "app dir - metadata basic should support title template",
      "app dir - metadata basic should support verification tags",
      "app dir - metadata basic should use parent layout title when no title is defined in page",
      "app dir - metadata file based icons should handle hmr updates to the file icon",
      "app dir - metadata file based icons should not render if image file is not specified",
      "app dir - metadata file based icons should render icon and apple touch icon meta if their images are specified",
      "app dir - metadata icons should merge icons from layout if no static icons files are specified",
      "app dir - metadata icons should not hoist meta[itemProp] to head",
      "app dir - metadata icons should support basic complex descriptor icons field",
      "app dir - metadata icons should support basic object icons field",
      "app dir - metadata icons should support basic string icons field",
      "app dir - metadata icons should support root level of favicon.ico",
      "app dir - metadata navigation should render root not-found with default metadata",
      "app dir - metadata navigation should support notFound in generateMetadata",
      "app dir - metadata navigation should support redirect in generateMetadata",
      "app dir - metadata opengraph should override file based images when opengraph-image and twitter-image specify images property",
      "app dir - metadata opengraph should pick up opengraph-image and twitter-image as static metadata files",
      "app dir - metadata opengraph should support opengraph tags",
      "app dir - metadata opengraph should support opengraph with article type",
      "app dir - metadata react cache should have same title and page value on initial load",
      "app dir - metadata react cache should have same title and page value when navigating",
      "app dir - metadata should not effect metadata images convention like files under pages directory",
      "app dir - metadata static optimization should build static files into static route",
      "app dir - metadata static routes should build favicon.ico as a custom route",
      "app dir - metadata static routes should have /favicon.ico as route",
      "app dir - metadata static routes should have icons as route",
      "app dir - metadata static routes should support root dir robots.txt",
      "app dir - metadata static routes should support sitemap.xml under every routes",
      "app dir - metadata static routes should support static manifest.webmanifest",
      "app dir - metadata twitter should render twitter card summary when image is not present",
      "app dir - metadata twitter should support default twitter app card",
      "app dir - metadata twitter should support default twitter player card",
      "app dir - metadata twitter should support twitter card summary_large_image when image present"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/navigation/navigation.test.ts": {
    "passed": [
      "app dir - navigation SEO should contain default meta tags in error page",
      "app dir - navigation SEO should emit noindex meta tag for not found page when streaming",
      "app dir - navigation SEO should emit refresh meta tag (permanent) for redirect page when streaming",
      "app dir - navigation SEO should emit refresh meta tag for redirect page when streaming",
      "app dir - navigation SEO should not log 404 errors in ipc server",
      "app dir - navigation bots should block rendering for bots and return 404 status",
      "app dir - navigation hash should not scroll to hash when scroll={false} is set",
      "app dir - navigation hash should scroll to the specified hash",
      "app dir - navigation hash-link-back-to-same-page should scroll to the specified hash",
      "app dir - navigation navigation between pages and app should not contain _rsc query while navigating from app to pages",
      "app dir - navigation navigation between pages and app should not contain _rsc query while navigating from pages to app",
      "app dir - navigation navigations when attaching a Proxy to `window.Promise` should navigate without issue",
      "app dir - navigation nested navigation should navigate to nested pages",
      "app dir - navigation query string should set query correctly",
      "app dir - navigation redirect components should redirect in a client component",
      "app dir - navigation redirect components should redirect in a server component",
      "app dir - navigation redirect components should redirect to external url",
      "app dir - navigation redirect next.config.js redirects should redirect from next.config.js",
      "app dir - navigation redirect next.config.js redirects should redirect from next.config.js with link navigation",
      "app dir - navigation redirect status code should respond with 307 status code in client component",
      "app dir - navigation redirect status code should respond with 307 status code in server component",
      "app dir - navigation redirect status code should respond with 308 status code if permanent flag is set",
      "app dir - navigation relative hashes and queries should work with a hash-only href",
      "app dir - navigation relative hashes and queries should work with a query-only href"
    ],
    "failed": [
      "app dir - navigation external push should push external url without affecting hooks",
      "app dir - navigation hash-with-scroll-offset should scroll to the specified hash",
      "app dir - navigation navigation between pages and app should not continously initiate a mpa navigation to the same URL when router state changes",
      "app dir - navigation not-found should trigger not-found client-side",
      "app dir - navigation not-found should trigger not-found in a client component",
      "app dir - navigation not-found should trigger not-found in a server component",
      "app dir - navigation not-found should trigger not-found while streaming",
      "app dir - navigation query string should handle unicode search params",
      "app dir - navigation redirect components should redirect client-side",
      "app dir - navigation redirect components should redirect to external url, initiating only once",
      "app dir - navigation redirect middleware redirects should redirect from middleware",
      "app dir - navigation redirect middleware redirects should redirect from middleware with link navigation",
      "app dir - navigation relative hashes and queries should work with a hash-only `router.push(...)`",
      "app dir - navigation relative hashes and queries should work with both relative hashes and queries"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/next-config/index.test.ts": {
    "passed": [
      "app dir - next config should support importing webpack in next.config"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/next-font/next-font.test.ts": {
    "passed": [],
    "failed": [
      "app app dir next-font Dev errors should recover on font loader error",
      "app app dir next-font computed styles should have correct styles at /",
      "app app dir next-font computed styles should have correct styles at /client",
      "app app dir next-font import values should have correct values at /",
      "app app dir next-font import values should have correct values at /client",
      "app app dir next-font navigation should not have duplicate preload tags on navigation",
      "app app dir next-font preconnect should add preconnect when preloading is disabled in component",
      "app app dir next-font preconnect should add preconnect when preloading is disabled in layout",
      "app app dir next-font preconnect should add preconnect when preloading is disabled in page",
      "app app dir next-font preconnect should not preconnect when css is used but no fonts",
      "app app dir next-font preload should preload correctly with client components",
      "app app dir next-font preload should preload correctly with layout using fonts",
      "app app dir next-font preload should preload correctly with page using fonts",
      "app app dir next-font preload should preload correctly with server components",
      "app-old app dir next-font Dev errors should recover on font loader error",
      "app-old app dir next-font computed styles should have correct styles at /",
      "app-old app dir next-font computed styles should have correct styles at /client",
      "app-old app dir next-font import values should have correct values at /",
      "app-old app dir next-font import values should have correct values at /client",
      "app-old app dir next-font navigation should not have duplicate preload tags on navigation",
      "app-old app dir next-font preconnect should add preconnect when preloading is disabled in component",
      "app-old app dir next-font preconnect should add preconnect when preloading is disabled in layout",
      "app-old app dir next-font preconnect should add preconnect when preloading is disabled in page",
      "app-old app dir next-font preconnect should not preconnect when css is used but no fonts",
      "app-old app dir next-font preload should preload correctly with client components",
      "app-old app dir next-font preload should preload correctly with layout using fonts",
      "app-old app dir next-font preload should preload correctly with page using fonts",
      "app-old app dir next-font preload should preload correctly with server components"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/next-image/next-image-https.test.ts": {
    "passed": [],
    "failed": [
      "app dir next-image (with https) only runs on CI as it requires administrator privileges"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/next-image/next-image.test.ts": {
    "passed": [],
    "failed": [
      "app dir next-image browser content should render images nested under page dir on /nested route",
      "app dir next-image browser content should render images on / route",
      "app dir next-image browser content should render images on /client route",
      "app dir next-image image content should render images nested under page dir on /nested route",
      "app dir next-image image content should render images on / route",
      "app dir next-image image content should render images on /client route",
      "app dir next-image image content should render legacy images in edge runtime on /legacy-edge-runtime route",
      "app dir next-image image content should render legacy images under /legacy route",
      "app dir next-image ssr content should render images nested under page dir on /nested route",
      "app dir next-image ssr content should render images on / route",
      "app dir next-image ssr content should render images on /client route"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/not-found-default/index.test.ts": {
    "passed": [],
    "failed": [
      "app dir - not found with default 404 page should be able to navigate to page calling not-found",
      "app dir - not found with default 404 page should be able to navigate to page with calling not-found in metadata",
      "app dir - not found with default 404 page should error on client notFound from root layout in browser",
      "app dir - not found with default 404 page should error on server notFound from root layout on server-side",
      "app dir - not found with default 404 page should render default 404 with root layout for non-existent page",
      "app dir - not found with default 404 page should render default not found for group routes if not found is not defined"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/not-found/basic/index.test.ts": {
    "passed": [
      "app dir - not-found - basic should not output /404 in tree view logs",
      "app dir - not-found - basic should use root not-found content for 404 html",
      "app dir - not-found - basic with default runtime should create the 404 mapping and copy the file to pages",
      "app dir - not-found - basic with default runtime should not reload the page"
    ],
    "failed": [
      "app dir - not-found - basic should include not found client reference manifest in the file trace",
      "app dir - not-found - basic with default runtime should escalate notFound to parent layout if no not-found boundary present in current layer",
      "app dir - not-found - basic with default runtime should match dynamic route not-found boundary correctly",
      "app dir - not-found - basic with default runtime should render the 404 page when the file is removed, and restore the page when re-added",
      "app dir - not-found - basic with default runtime should use the not-found page for non-matching routes",
      "app dir - not-found - basic with runtime = edge should escalate notFound to parent layout if no not-found boundary present in current layer",
      "app dir - not-found - basic with runtime = edge should match dynamic route not-found boundary correctly",
      "app dir - not-found - basic with runtime = edge should not reload the page",
      "app dir - not-found - basic with runtime = edge should render the 404 page when the file is removed, and restore the page when re-added",
      "app dir - not-found - basic with runtime = edge should use the not-found page for non-matching routes"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/not-found/conflict-route/index.test.ts": {
    "passed": [],
    "failed": [
      "app dir - not-found - conflict route with default runtime should allow to have a valid /not-found route",
      "app dir - not-found - conflict route with default runtime should use the not-found page for non-matching routes",
      "app dir - not-found - conflict route with runtime = edge should allow to have a valid /not-found route",
      "app dir - not-found - conflict route with runtime = edge should use the not-found page for non-matching routes"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/not-found/css-precedence/index.test.ts": {
    "passed": [],
    "failed": [
      "app dir css should load css while navigation between not-found and page"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/not-found/group-route-root-not-found/index.test.ts": {
    "passed": [],
    "failed": [
      "app dir - group routes with root not-found should render default 404 with root layout for non-existent page",
      "app dir - group routes with root not-found should render root not found for group routes if hit 404"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/not-found/group-route/index.test.ts": {
    "passed": [],
    "failed": [
      "app dir - not-found - group route with default runtime should use the not-found page under group routes",
      "app dir - not-found - group route with runtime = edge should use the not-found page under group routes"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/pages-to-app-routing/pages-to-app-routing.test.ts": {
    "passed": [],
    "failed": ["pages-to-app-routing should work using browser"],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/parallel-routes-and-interception/parallel-routes-and-interception.test.ts": {
    "passed": [],
    "failed": [
      "parallel-routes-and-interception parallel routes should apply the catch-all route to the parallel route if no matching route is found",
      "parallel-routes-and-interception parallel routes should display all parallel route params with useParams",
      "parallel-routes-and-interception parallel routes should match parallel routes",
      "parallel-routes-and-interception parallel routes should match parallel routes in route groups",
      "parallel-routes-and-interception parallel routes should navigate with a link with prefetch=false",
      "parallel-routes-and-interception parallel routes should only scroll to the parallel route that was navigated to",
      "parallel-routes-and-interception parallel routes should render nested parallel routes",
      "parallel-routes-and-interception parallel routes should support layout files in parallel routes",
      "parallel-routes-and-interception parallel routes should support nested parallel routes",
      "parallel-routes-and-interception parallel routes should support parallel route tab bars",
      "parallel-routes-and-interception parallel routes should support parallel routes with no page component",
      "parallel-routes-and-interception parallel routes should throw a 404 when no matching parallel route is found",
      "parallel-routes-and-interception parallel routes should throw an error when a route groups causes a conflict with a parallel segment",
      "parallel-routes-and-interception route intercepting should re-render the layout on the server when it had a default child route",
      "parallel-routes-and-interception route intercepting should render an intercepted route at the top level from a nested path",
      "parallel-routes-and-interception route intercepting should render an intercepted route from a slot",
      "parallel-routes-and-interception route intercepting should render intercepted route",
      "parallel-routes-and-interception route intercepting should render intercepted route from a nested route",
      "parallel-routes-and-interception route intercepting should render modal when paired with parallel routes",
      "parallel-routes-and-interception route intercepting should support intercepting with beforeFiles rewrites",
      "parallel-routes-and-interception route intercepting with dynamic catch-all routes should render intercepted route",
      "parallel-routes-and-interception route intercepting with dynamic optional catch-all routes should render intercepted route",
      "parallel-routes-and-interception route intercepting with dynamic routes should render intercepted route"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/parallel-routes-not-found/parallel-routes-not-found.test.ts": {
    "passed": [],
    "failed": [
      "parallel-routes-and-interception should not render the @children slot when the @slot is not found"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/params-hooks-compat/index.test.ts": {
    "passed": [
      "app-dir - params hooks compat should only access path params with useParams",
      "app-dir - params hooks compat should only access search params with useSearchParams"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/rewrites-redirects/rewrites-redirects.test.ts": {
    "passed": [
      "redirects and rewrites navigation using link should redirect from next.config.js correctly",
      "redirects and rewrites navigation using link should redirect using catchall from next.config.js correctly",
      "redirects and rewrites navigation using link should rewrite from next.config.js correctly"
    ],
    "failed": [
      "redirects and rewrites navigation using button should redirect from middleware correctly",
      "redirects and rewrites navigation using button should redirect from next.config.js correctly",
      "redirects and rewrites navigation using button should redirect using catchall from next.config.js correctly",
      "redirects and rewrites navigation using button should rewrite from middleware correctly",
      "redirects and rewrites navigation using button should rewrite from next.config.js correctly",
      "redirects and rewrites navigation using link should redirect from middleware correctly",
      "redirects and rewrites navigation using link should rewrite from middleware correctly"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/root-layout-redirect/root-layout-redirect.test.ts": {
    "passed": [],
    "failed": ["root-layout-redirect should work using browser"],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/root-layout-render-once/index.test.ts": {
    "passed": [],
    "failed": [
      "app-dir root layout render once should only render root layout once"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/root-layout/root-layout.test.ts": {
    "passed": [],
    "failed": [
      "app-dir root layout Should do a mpa navigation when switching root layout should work with basic routes",
      "app-dir root layout Should do a mpa navigation when switching root layout should work with dynamic catchall routes",
      "app-dir root layout Should do a mpa navigation when switching root layout should work with dynamic routes",
      "app-dir root layout Should do a mpa navigation when switching root layout should work with parallel routes",
      "app-dir root layout Should do a mpa navigation when switching root layout should work with route groups",
      "app-dir root layout Should do a mpa navigation when switching root layout should work with static routes",
      "app-dir root layout should correctly handle navigation between multiple root layouts"
    ],
    "pending": [
      "app-dir root layout Missing required tags should error on page load",
      "app-dir root layout Missing required tags should error on page load on static generation",
      "app-dir root layout Missing required tags should error on page navigation"
    ],
    "runtimeError": false
  },
  "test/e2e/app-dir/route-page-manifest-bug/route-page-manifest-bug.test.ts": {
    "passed": [
      "route-page-manifest-bug should work when requesting route handler after page"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/router-autoscroll/router-autoscroll.test.ts": {
    "passed": [
      "router autoscrolling on navigation bugs Should apply scroll when loading.js is used",
      "router autoscrolling on navigation bugs Should scroll to the top of the layout when the first child is display none",
      "router autoscrolling on navigation bugs Should scroll to the top of the layout when the first child is position fixed",
      "router autoscrolling on navigation bugs Should scroll to the top of the layout when the first child is position sticky",
      "router autoscrolling on navigation router.refresh() should not scroll when called alone",
      "router autoscrolling on navigation vertical scroll should not scroll to top of document if page in viewport",
      "router autoscrolling on navigation vertical scroll should not scroll when the top of the page is in the viewport"
    ],
    "failed": [
      "router autoscrolling on navigation horizontal scroll should't scroll horizontally",
      "router autoscrolling on navigation router.refresh() should not stop router.push() from scrolling",
      "router autoscrolling on navigation vertical scroll should scroll down to the navigated page when it's below viewort",
      "router autoscrolling on navigation vertical scroll should scroll to top of document if possible while giving focus to page",
      "router autoscrolling on navigation vertical scroll should scroll to top of document when navigating between to pages without layout",
      "router autoscrolling on navigation vertical scroll should scroll to top of page when scrolling to phe top of the document wouldn't have the page in the viewport"
    ],
    "pending": [
      "router autoscrolling on navigation router.refresh() should not scroll the page when we hot reload"
    ],
    "runtimeError": false
  },
  "test/e2e/app-dir/router-stuck-dynamic-static-segment/router-stuck-dynamic-static-segment.test.ts": {
    "passed": [
      "router-stuck-dynamic-static-segment should allow navigation between dynamic parameter and static parameter of the same value"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/rsc-basic/rsc-basic.test.ts": {
    "passed": [],
    "failed": [
      "app dir - rsc basics react@experimental should opt into the react@experimental when enabling ppr",
      "app dir - rsc basics react@experimental should opt into the react@experimental when enabling serverActions",
      "app dir - rsc basics should be able to navigate between rsc routes",
      "app dir - rsc basics should correctly render component returning null",
      "app dir - rsc basics should correctly render component returning undefined",
      "app dir - rsc basics should correctly render layout returning null",
      "app dir - rsc basics should correctly render layout returning undefined",
      "app dir - rsc basics should correctly render page returning null",
      "app dir - rsc basics should correctly render page returning undefined",
      "app dir - rsc basics should create client reference successfully for all file conventions",
      "app dir - rsc basics should escape streaming data correctly",
      "app dir - rsc basics should generate edge SSR manifests for Node.js",
      "app dir - rsc basics should handle streaming server components correctly",
      "app dir - rsc basics should handle various kinds of exports correctly",
      "app dir - rsc basics should link correctly with next/link without mpa navigation to the page",
      "app dir - rsc basics should not apply rsc syntax checks in pages/api",
      "app dir - rsc basics should not use bundled react for pages with app",
      "app dir - rsc basics should render built-in 404 page for missing route if pagesDir is not presented",
      "app dir - rsc basics should render css-in-js suspense boundary correctly",
      "app dir - rsc basics should render initial styles of css-in-js in edge SSR correctly",
      "app dir - rsc basics should render initial styles of css-in-js in nodejs SSR correctly",
      "app dir - rsc basics should render server components correctly",
      "app dir - rsc basics should resolve different kinds of components correctly",
      "app dir - rsc basics should reuse the inline flight response without sending extra requests",
      "app dir - rsc basics should stick to the url without trailing /page suffix",
      "app dir - rsc basics should support multi-level server component imports",
      "app dir - rsc basics should support native modules in server component",
      "app dir - rsc basics should support next/link in server components",
      "app dir - rsc basics should support partial hydration with inlined server data",
      "app dir - rsc basics should support streaming for flight response",
      "app dir - rsc basics should support webpack loader rules",
      "app dir - rsc basics should suspense next/image in server components",
      "app dir - rsc basics should suspense next/legacy/image in server components",
      "app dir - rsc basics should track client components in dynamic imports",
      "app dir - rsc basics should use canary react for app"
    ],
    "pending": [
      "app dir - rsc basics should support partial hydration with inlined server data in browser"
    ],
    "runtimeError": true
  },
  "test/e2e/app-dir/search-params-react-key/layout-params.test.ts": {
    "passed": [],
    "failed": [
      "app dir - search params keys should keep the React router instance the same when changing the search params"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/searchparams-static-bailout/searchparams-static-bailout.test.ts": {
    "passed": [
      "searchparams-static-bailout client component should bailout when using searchParams",
      "searchparams-static-bailout client component should bailout when using searchParams is passed to client component",
      "searchparams-static-bailout client component should not bailout when not using searchParams",
      "searchparams-static-bailout server component should bailout when using searchParams",
      "searchparams-static-bailout server component should not bailout when not using searchParams"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/server-actions-relative-redirect/server-actions-relative-redirect.test.ts": {
    "passed": [],
    "failed": [
      "server-actions-relative-redirect should work with absolute redirect",
      "server-actions-relative-redirect should work with relative redirect"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/e2e/app-dir/set-cookies/set-cookies.test.ts": {
    "passed": [],
    "failed": [
      "set-cookies for edge runtime for /app should set two set-cookie headers",
      "set-cookies for edge runtime for /pages should set two set-cookie headers",
      "set-cookies for experimental-edge runtime for /app should set two set-cookie headers",
      "set-cookies for experimental-edge runtime for /pages should set two set-cookie headers",
      "set-cookies for node runtime for /app should set two set-cookie headers",
      "set-cookies for node runtime for /pages should set two set-cookie headers"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/similar-pages-paths/similar-pages-paths.test.ts": {
    "passed": [
      "app-dir similar pages paths should not have conflicts for similar pattern page paths between app and pages"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/test-template/{{ toFileName name }}/{{ toFileName name }}.test.ts": {
    "passed": [
      "{{name}} should work using browser",
      "{{name}} should work using cheerio",
      "{{name}} should work with fetch",
      "{{name}} should work with html"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/third-parties/basic.test.ts": {
    "passed": [
      "@next/third-parties basic usage renders GoogleMapsEmbed",
      "@next/third-parties basic usage renders YoutubeEmbed"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/trailingslash/trailingslash.test.ts": {
    "passed": [
      "app-dir trailingSlash handling should redirect route when clicking link",
      "app-dir trailingSlash handling should redirect route when requesting it directly",
      "app-dir trailingSlash handling should redirect route when requesting it directly by browser"
    ],
    "failed": [
      "app-dir trailingSlash handling should render link with trailing slash"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/underscore-ignore-app-paths/underscore-ignore-app-paths.test.ts": {
    "passed": [
      "underscore-ignore-app-paths should not serve app path with underscore",
      "underscore-ignore-app-paths should serve pages path with underscore"
    ],
    "failed": ["underscore-ignore-app-paths should serve app path with %5F"],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/use-params/use-params.test.ts": {
    "passed": [
      "use-params should work for catch all params",
      "use-params should work for nested dynamic params",
      "use-params should work for nested dynamic params client navigating",
      "use-params should work for single dynamic param",
      "use-params should work for single dynamic param client navigating"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/use-selected-layout-segment-s/use-selected-layout-segment-s.test.ts": {
    "passed": [
      "useSelectedLayoutSegment(s) should correctly update when changing catchall segment",
      "useSelectedLayoutSegment(s) should correctly update when changing param segment",
      "useSelectedLayoutSegment(s) should correctly update when changing static segment",
      "useSelectedLayoutSegment(s) should return correct values for root layout",
      "useSelectedLayoutSegment(s) should return correct values in layout after last segment",
      "useSelectedLayoutSegment(s) should return correct values in layout before catchall segment",
      "useSelectedLayoutSegment(s) should return correct values in layout before param segment",
      "useSelectedLayoutSegment(s) should return correct values in layout before static segment"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/app-dir/with-babel/with-babel.test.ts": {
    "passed": [],
    "failed": [
      "with babel should contain og package files in middleware",
      "with babel should support babel in app dir"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/e2e/app-dir/with-exported-function-config/with-exported-function-config.test.ts": {
    "passed": [],
    "failed": [
      "with-exported-function-config should have correct values in function config manifest"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/basepath-trailing-slash.test.ts": {
    "passed": [
      "basePath + trailingSlash should allow URL query strings on index without refresh"
    ],
    "failed": [
      "basePath + trailingSlash should allow URL query strings without refresh",
      "basePath + trailingSlash should correctly replace state when same asPath but different url"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/browserslist-extends/index.test.ts": {
    "passed": ["browserslist-extends should work"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/browserslist/browserslist.test.ts": {
    "passed": [],
    "failed": ["Browserslist should apply browserslist target"],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/cancel-request/stream-cancel.test.ts": {
    "passed": [],
    "failed": [
      "streaming responses cancel inner stream after disconnect edge app route handler cancels stalled stream",
      "streaming responses cancel inner stream after disconnect edge app route handler cancels stream making progress",
      "streaming responses cancel inner stream after disconnect edge app route handler cancels stream that never sent data",
      "streaming responses cancel inner stream after disconnect edge pages api cancels stalled stream",
      "streaming responses cancel inner stream after disconnect edge pages api cancels stream making progress",
      "streaming responses cancel inner stream after disconnect edge pages api cancels stream that never sent data",
      "streaming responses cancel inner stream after disconnect middleware cancels stalled stream",
      "streaming responses cancel inner stream after disconnect middleware cancels stream making progress",
      "streaming responses cancel inner stream after disconnect middleware cancels stream that never sent data",
      "streaming responses cancel inner stream after disconnect node app route handler cancels stalled stream",
      "streaming responses cancel inner stream after disconnect node app route handler cancels stream making progress",
      "streaming responses cancel inner stream after disconnect node app route handler cancels stream that never sent data",
      "streaming responses cancel inner stream after disconnect node pages api cancels stalled stream",
      "streaming responses cancel inner stream after disconnect node pages api cancels stream making progress",
      "streaming responses cancel inner stream after disconnect node pages api cancels stream that never sent data"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/children-page/index.test.ts": {
    "passed": [
      "children-page with app dir should show the content if you have a page named children",
      "children-page with pages dir should show the content if you have a page named children"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/config-promise-export/async-function.test.ts": {
    "passed": ["async export should work"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/config-promise-export/promise.test.ts": {
    "passed": ["promise export should work"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/config-schema-check/index.test.ts": {
    "passed": [
      "next.config.js schema validating - defaultConfig should validate against defaultConfig"
    ],
    "failed": [
      "next.config.js schema validating - invalid config should warn the invalid next config"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/e2e/conflicting-app-page-error/index.test.ts": {
    "passed": [
      "Conflict between app file and pages file should not show error overlay for non conflict pages under app or pages dir",
      "Conflict between app file and pages file should print error for conflicting app/page"
    ],
    "failed": [
      "Conflict between app file and pages file should error again when there is new conflict",
      "Conflict between app file and pages file should show error overlay for /",
      "Conflict between app file and pages file should show error overlay for /another",
      "Conflict between app file and pages file should support hmr with conflicts"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/custom-app-render/custom-app-render.test.ts": {
    "passed": [],
    "failed": [
      "custom-app-render should render /",
      "custom-app-render should render /render"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/disable-js-preload/test/index.test.js": {
    "passed": [
      "disabled JS preloads should not have JS preload links",
      "disabled JS preloads should render the page"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/dynamic-route-interpolation/index.test.ts": {
    "passed": [
      "Dynamic Route Interpolation should bust data cache",
      "Dynamic Route Interpolation should bust data cache with symbol",
      "Dynamic Route Interpolation should work",
      "Dynamic Route Interpolation should work with brackets",
      "Dynamic Route Interpolation should work with brackets in API routes",
      "Dynamic Route Interpolation should work with parameter itself",
      "Dynamic Route Interpolation should work with parameter itself in API routes"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/edge-api-endpoints-can-receive-body/index.test.ts": {
    "passed": [],
    "failed": [
      "Edge API endpoints can receive body reads the body as text",
      "Edge API endpoints can receive body reads the body from index"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/edge-async-local-storage/index.test.ts": {
    "passed": [],
    "failed": [
      "edge api can use async local storage cans use a single instance per request",
      "edge api can use async local storage cans use multiple instances per request"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/edge-can-read-request-body/index.test.ts": {
    "passed": [
      "Edge can read request body middleware reads a text body",
      "Edge can read request body renders the static page"
    ],
    "failed": [
      "Edge can read request body middleware reads a JSON body",
      "Edge can read request body middleware reads a multipart form data",
      "Edge can read request body middleware reads an URL encoded form data"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/edge-can-use-wasm-files/index.test.ts": {
    "passed": [],
    "failed": [
      "edge api endpoints can use wasm files uses the wasm file",
      "middleware can use wasm files can be called twice",
      "middleware can use wasm files lists the necessary wasm bindings in the manifest",
      "middleware can use wasm files uses the wasm file",
      "middleware can use wasm files with the experimental modes on uses the wasm file"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/edge-compiler-can-import-blob-assets/index.test.ts": {
    "passed": [],
    "failed": [
      "Edge Compiler can import asset assets allows to assets from node_modules",
      "Edge Compiler can import asset assets allows to fetch a remote URL",
      "Edge Compiler can import asset assets allows to fetch a remote URL with a path and basename",
      "Edge Compiler can import asset assets allows to fetch image assets",
      "Edge Compiler can import asset assets allows to fetch text assets",
      "Edge Compiler can import asset assets extracts all the assets from the bundle"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/edge-compiler-module-exports-preference/index.test.ts": {
    "passed": [],
    "failed": [
      "Edge compiler module exports preference favors the browser export"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/edge-configurable-runtime/index.test.ts": {
    "passed": [
      "Configurable runtime for pages and API routes In dev mode runs with no warning API route on the edge runtime",
      "Configurable runtime for src/pages and API routes In dev mode runs with no warning API route on the edge runtime"
    ],
    "failed": [
      "Configurable runtime for pages and API routes In dev mode errors about page using edge runtime",
      "Configurable runtime for pages and API routes In dev mode warns about API route using experimental-edge runtime",
      "Configurable runtime for pages and API routes In dev mode warns about page using edge runtime",
      "Configurable runtime for pages and API routes In start mode builds with API route on the edge runtime and page on the experimental edge runtime",
      "Configurable runtime for pages and API routes In start mode does not build with page on the edge runtime",
      "Configurable runtime for src/pages and API routes In dev mode errors about page using edge runtime",
      "Configurable runtime for src/pages and API routes In dev mode warns about API route using experimental-edge runtime",
      "Configurable runtime for src/pages and API routes In dev mode warns about page using edge runtime",
      "Configurable runtime for src/pages and API routes In start mode builds with API route on the edge runtime and page on the experimental edge runtime",
      "Configurable runtime for src/pages and API routes In start mode does not build with page on the edge runtime"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/edge-pages-support/edge-document.test.ts": {
    "passed": [],
    "failed": [
      "edge render - custom _document with edge runtime should render page properly"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/edge-pages-support/index.test.ts": {
    "passed": [],
    "failed": [
      "edge-render-getserversideprops should have correct query for pages/api",
      "edge-render-getserversideprops should have correct query for pages/api dynamic",
      "edge-render-getserversideprops should have correct query/params on /[id]",
      "edge-render-getserversideprops should have correct query/params on dynamic rewrite",
      "edge-render-getserversideprops should have correct query/params on index",
      "edge-render-getserversideprops should have correct query/params on rewrite",
      "edge-render-getserversideprops should have data routes in routes-manifest",
      "edge-render-getserversideprops should not output trace files for edge routes",
      "edge-render-getserversideprops should respond to _next/data for [id] correctly",
      "edge-render-getserversideprops should respond to _next/data for index correctly"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/edge-runtime-uses-edge-light-import-specifier-for-packages/edge-runtime-uses-edge-light-import-specifier-for-packages.test.ts": {
    "passed": [],
    "failed": [
      "edge-runtime uses edge-light import specifier for packages app-dir imports the correct module",
      "edge-runtime uses edge-light import specifier for packages pages import the correct module",
      "edge-runtime uses edge-light import specifier for packages pages/api endpoints import the correct module"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/favicon-short-circuit/favicon-short-circuit.test.ts": {
    "passed": [
      "favicon-short-circuit should short circuit the favicon in development"
    ],
    "failed": [
      "favicon-short-circuit should not short circuit the favicon in production"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/fetch-failures-have-good-stack-traces-in-edge-runtime/fetch-failures-have-good-stack-traces-in-edge-runtime.test.ts": {
    "passed": [],
    "failed": [
      "fetch failures have good stack traces in edge runtime when awaiting `fetch` using an unknown domain, stack traces are preserved",
      "fetch failures have good stack traces in edge runtime when returning `fetch` using an unknown domain, stack traces are preserved"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/getserversideprops/test/index.test.ts": {
    "passed": [
      "getServerSideProps should SSR getServerSideProps page correctly",
      "getServerSideProps should SSR normal page correctly",
      "getServerSideProps should allow POST request for getServerSideProps page",
      "getServerSideProps should always call getServerSideProps without caching",
      "getServerSideProps should handle throw ENOENT correctly",
      "getServerSideProps should have correct req.url and query for direct visit",
      "getServerSideProps should have correct req.url and query for direct visit dynamic page",
      "getServerSideProps should have correct req.url and query for direct visit dynamic page rewrite direct",
      "getServerSideProps should have correct req.url and query for direct visit dynamic page rewrite direct with internal query",
      "getServerSideProps should have correct req.url and query for direct visit dynamic page rewrite param",
      "getServerSideProps should have correct req.url and query for direct visit dynamic page with query",
      "getServerSideProps should have gssp in __NEXT_DATA__",
      "getServerSideProps should have original req.url for /_next/data request",
      "getServerSideProps should have original req.url for /_next/data request dynamic page",
      "getServerSideProps should have original req.url for /_next/data request dynamic page with query",
      "getServerSideProps should have original req.url for /_next/data request with query",
      "getServerSideProps should load a fast refresh page",
      "getServerSideProps should navigate to a normal page and back",
      "getServerSideProps should not fetch data on mount",
      "getServerSideProps should not have gssp in __NEXT_DATA__ for non-GSSP page",
      "getServerSideProps should not re-call getServerSideProps when updating query",
      "getServerSideProps should not show error for accessing res after gssp returns",
      "getServerSideProps should not show error for invalid JSON returned from getServerSideProps",
      "getServerSideProps should not show error for invalid JSON returned from getStaticProps on CST",
      "getServerSideProps should not show warning from url prop being returned",
      "getServerSideProps should not warn for accessing res after gssp returns",
      "getServerSideProps should only warn for accessing res if not streaming",
      "getServerSideProps should output routes-manifest correctly",
      "getServerSideProps should parse query values on mount correctly",
      "getServerSideProps should pass query for data request",
      "getServerSideProps should provide correct query value for dynamic page",
      "getServerSideProps should reload page on failed data request",
      "getServerSideProps should render 404 correctly when notFound is returned (dynamic)",
      "getServerSideProps should render 404 correctly when notFound is returned (non-dynamic)",
      "getServerSideProps should render correctly when notFound is false (dynamic)",
      "getServerSideProps should render correctly when notFound is false (non-dynamic)",
      "getServerSideProps should respect custom caching header",
      "getServerSideProps should return data correctly",
      "getServerSideProps should return data correctly for dynamic page",
      "getServerSideProps should return data correctly when props is a promise",
      "getServerSideProps should set default caching header",
      "getServerSideProps should show error for accessing res after gssp returns",
      "getServerSideProps should show error for accessing res through props promise after gssp returns",
      "getServerSideProps should show error for extra keys returned from getServerSideProps",
      "getServerSideProps should show error for invalid JSON returned from getServerSideProps",
      "getServerSideProps should show error for invalid JSON returned from getStaticProps on CST",
      "getServerSideProps should supply params values for catchall correctly",
      "getServerSideProps should supply query values SSR",
      "getServerSideProps should work with early request ending"
    ],
    "failed": [
      "getServerSideProps should dedupe server data requests",
      "getServerSideProps should navigate between pages successfully",
      "getServerSideProps should pass query for data request on navigation",
      "getServerSideProps should render 404 correctly when notFound is returned client-transition (dynamic)",
      "getServerSideProps should render 404 correctly when notFound is returned client-transition (non-dynamic)"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/handle-non-hoisted-swc-helpers/index.test.ts": {
    "passed": ["handle-non-hoisted-swc-helpers should work"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/hello-world/hello-world.test.ts": {
    "passed": [
      "hello-world should work using browser",
      "hello-world should work using cheerio",
      "hello-world should work with fetch",
      "hello-world should work with html"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/i18n-api-support/index.test.ts": {
    "passed": [
      "i18n API support should fallback rewrite non-matching API request",
      "i18n API support should respond to normal API request",
      "i18n API support should respond to normal dynamic API request"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/i18n-data-fetching-redirect/index.test.ts": {
    "passed": [],
    "failed": [
      "i18n-data-fetching-redirect Redirect to another locale gsp-blocking-redirect en -> sv",
      "i18n-data-fetching-redirect Redirect to another locale gsp-blocking-redirect sv -> en",
      "i18n-data-fetching-redirect Redirect to another locale gsp-fallback-redirect en -> sv",
      "i18n-data-fetching-redirect Redirect to another locale gsp-fallback-redirect sv -> en",
      "i18n-data-fetching-redirect Redirect to another locale gssp-redirect en -> sv",
      "i18n-data-fetching-redirect Redirect to another locale gssp-redirect sv -> en",
      "i18n-data-fetching-redirect Redirect to another locale next/link gsp-blocking-redirect en -> sv",
      "i18n-data-fetching-redirect Redirect to another locale next/link gsp-blocking-redirect sv -> en",
      "i18n-data-fetching-redirect Redirect to another locale next/link gsp-fallback-redirect en -> sv",
      "i18n-data-fetching-redirect Redirect to another locale next/link gsp-fallback-redirect sv -> en",
      "i18n-data-fetching-redirect Redirect to another locale next/link gssp-redirect en -> sv",
      "i18n-data-fetching-redirect Redirect to another locale next/link gssp-redirect sv -> en",
      "i18n-data-fetching-redirect Redirect to locale from context gsp-blocking-redirect en",
      "i18n-data-fetching-redirect Redirect to locale from context gsp-blocking-redirect sv",
      "i18n-data-fetching-redirect Redirect to locale from context gsp-fallback-redirect en",
      "i18n-data-fetching-redirect Redirect to locale from context gsp-fallback-redirect sv",
      "i18n-data-fetching-redirect Redirect to locale from context gssp-redirect en",
      "i18n-data-fetching-redirect Redirect to locale from context gssp-redirect sv",
      "i18n-data-fetching-redirect Redirect to locale from context next/link gsp-blocking-redirect en",
      "i18n-data-fetching-redirect Redirect to locale from context next/link gsp-blocking-redirect sv",
      "i18n-data-fetching-redirect Redirect to locale from context next/link gsp-fallback-redirect en",
      "i18n-data-fetching-redirect Redirect to locale from context next/link gsp-fallback-redirect sv",
      "i18n-data-fetching-redirect Redirect to locale from context next/link gssp-redirect en",
      "i18n-data-fetching-redirect Redirect to locale from context next/link gssp-redirect sv"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/i18n-data-route/i18n-data-route.test.ts": {
    "passed": [
      "i18n-data-route with locale prefix /en-CA should render /[slug]/about via /en-CA/blog/about",
      "i18n-data-route with locale prefix /en-CA should render /about via /en-CA/about",
      "i18n-data-route with locale prefix /en-CA should serve data for /[slug]/about",
      "i18n-data-route with locale prefix /en-CA should serve data for /about",
      "i18n-data-route with locale prefix /fr-CA should render /[slug]/about via /fr-CA/blog/about",
      "i18n-data-route with locale prefix /fr-CA should render /about via /fr-CA/about",
      "i18n-data-route with locale prefix /fr-CA should serve data for /[slug]/about",
      "i18n-data-route with locale prefix /fr-CA should serve data for /about",
      "i18n-data-route without locale prefix should render /[slug]/about via /blog/about",
      "i18n-data-route without locale prefix should render /about via /about",
      "i18n-data-route without locale prefix should serve data for /[slug]/about",
      "i18n-data-route without locale prefix should serve data for /about"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/i18n-default-locale-redirect/i18n-default-locale-redirect.test.ts": {
    "passed": [],
    "failed": [
      "i18-default-locale-redirect should not request a path prefixed with default locale",
      "i18-default-locale-redirect should request a path prefixed with non-default locale"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/e2e/i18n-disallow-multiple-locales/i18n-disallow-multiple-locales.test.ts": {
    "passed": [
      "i18n-disallow-multiple-locales /en should 200",
      "i18n-disallow-multiple-locales /en-US should 200",
      "i18n-disallow-multiple-locales /en-US/en should 404",
      "i18n-disallow-multiple-locales /en-US/en-US should 404",
      "i18n-disallow-multiple-locales /en-US/fr should 404",
      "i18n-disallow-multiple-locales /en-US/fr-BE should 404",
      "i18n-disallow-multiple-locales /en-US/nl should 404",
      "i18n-disallow-multiple-locales /en-US/nl-BE should 404",
      "i18n-disallow-multiple-locales /en-US/nl-NL should 404",
      "i18n-disallow-multiple-locales /en/en should 404",
      "i18n-disallow-multiple-locales /en/en-US should 404",
      "i18n-disallow-multiple-locales /en/fr should 404",
      "i18n-disallow-multiple-locales /en/fr-BE should 404",
      "i18n-disallow-multiple-locales /en/nl should 404",
      "i18n-disallow-multiple-locales /en/nl-BE should 404",
      "i18n-disallow-multiple-locales /en/nl-NL should 404",
      "i18n-disallow-multiple-locales /fr should 200",
      "i18n-disallow-multiple-locales /fr-BE should 200",
      "i18n-disallow-multiple-locales /fr-BE/en should 404",
      "i18n-disallow-multiple-locales /fr-BE/en-US should 404",
      "i18n-disallow-multiple-locales /fr-BE/fr should 404",
      "i18n-disallow-multiple-locales /fr-BE/fr-BE should 404",
      "i18n-disallow-multiple-locales /fr-BE/nl should 404",
      "i18n-disallow-multiple-locales /fr-BE/nl-BE should 404",
      "i18n-disallow-multiple-locales /fr-BE/nl-NL should 404",
      "i18n-disallow-multiple-locales /fr/en should 404",
      "i18n-disallow-multiple-locales /fr/en-US should 404",
      "i18n-disallow-multiple-locales /fr/fr should 404",
      "i18n-disallow-multiple-locales /fr/fr-BE should 404",
      "i18n-disallow-multiple-locales /fr/nl should 404",
      "i18n-disallow-multiple-locales /fr/nl-BE should 404",
      "i18n-disallow-multiple-locales /fr/nl-NL should 404",
      "i18n-disallow-multiple-locales /nl should 200",
      "i18n-disallow-multiple-locales /nl-BE should 200",
      "i18n-disallow-multiple-locales /nl-BE/en should 404",
      "i18n-disallow-multiple-locales /nl-BE/en-US should 404",
      "i18n-disallow-multiple-locales /nl-BE/fr should 404",
      "i18n-disallow-multiple-locales /nl-BE/fr-BE should 404",
      "i18n-disallow-multiple-locales /nl-BE/nl should 404",
      "i18n-disallow-multiple-locales /nl-BE/nl-BE should 404",
      "i18n-disallow-multiple-locales /nl-BE/nl-NL should 404",
      "i18n-disallow-multiple-locales /nl-NL should 200",
      "i18n-disallow-multiple-locales /nl-NL/en should 404",
      "i18n-disallow-multiple-locales /nl-NL/en-US should 404",
      "i18n-disallow-multiple-locales /nl-NL/fr should 404",
      "i18n-disallow-multiple-locales /nl-NL/fr-BE should 404",
      "i18n-disallow-multiple-locales /nl-NL/nl should 404",
      "i18n-disallow-multiple-locales /nl-NL/nl-BE should 404",
      "i18n-disallow-multiple-locales /nl-NL/nl-NL should 404",
      "i18n-disallow-multiple-locales /nl/en should 404",
      "i18n-disallow-multiple-locales /nl/en-US should 404",
      "i18n-disallow-multiple-locales /nl/fr should 404",
      "i18n-disallow-multiple-locales /nl/fr-BE should 404",
      "i18n-disallow-multiple-locales /nl/nl should 404",
      "i18n-disallow-multiple-locales /nl/nl-BE should 404",
      "i18n-disallow-multiple-locales /nl/nl-NL should 404",
      "i18n-disallow-multiple-locales should verify the default locale works"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/i18n-ignore-redirect-source-locale/redirects-with-basepath.test.ts": {
    "passed": [],
    "failed": [
      "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from and to: ",
      "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from and to: /en",
      "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from and to: /nl",
      "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from and to: /sv",
      "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from:  to: /",
      "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from:  to: en",
      "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from:  to: sv",
      "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from: /en to: /",
      "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from: /en to: en",
      "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from: /en to: sv",
      "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from: /nl to: /",
      "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from: /nl to: en",
      "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from: /nl to: sv",
      "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from: /sv to: /",
      "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from: /sv to: en",
      "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from: /sv to: sv"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/i18n-ignore-redirect-source-locale/redirects.test.ts": {
    "passed": [],
    "failed": [
      "i18n-ignore-redirect-source-locale get redirected to the new page, from and to: ",
      "i18n-ignore-redirect-source-locale get redirected to the new page, from and to: /en",
      "i18n-ignore-redirect-source-locale get redirected to the new page, from and to: /nl",
      "i18n-ignore-redirect-source-locale get redirected to the new page, from and to: /sv",
      "i18n-ignore-redirect-source-locale get redirected to the new page, from:  to: /",
      "i18n-ignore-redirect-source-locale get redirected to the new page, from:  to: en",
      "i18n-ignore-redirect-source-locale get redirected to the new page, from:  to: sv",
      "i18n-ignore-redirect-source-locale get redirected to the new page, from: /en to: /",
      "i18n-ignore-redirect-source-locale get redirected to the new page, from: /en to: en",
      "i18n-ignore-redirect-source-locale get redirected to the new page, from: /en to: sv",
      "i18n-ignore-redirect-source-locale get redirected to the new page, from: /nl to: /",
      "i18n-ignore-redirect-source-locale get redirected to the new page, from: /nl to: en",
      "i18n-ignore-redirect-source-locale get redirected to the new page, from: /nl to: sv",
      "i18n-ignore-redirect-source-locale get redirected to the new page, from: /sv to: /",
      "i18n-ignore-redirect-source-locale get redirected to the new page, from: /sv to: en",
      "i18n-ignore-redirect-source-locale get redirected to the new page, from: /sv to: sv"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/i18n-ignore-rewrite-source-locale/rewrites-with-basepath.test.ts": {
    "passed": [
      "i18n-ignore-rewrite-source-locale with basepath call api by skipping locale in rewrite, locale: ",
      "i18n-ignore-rewrite-source-locale with basepath call api by skipping locale in rewrite, locale: /en",
      "i18n-ignore-rewrite-source-locale with basepath call api by skipping locale in rewrite, locale: /nl",
      "i18n-ignore-rewrite-source-locale with basepath call api by skipping locale in rewrite, locale: /sv",
      "i18n-ignore-rewrite-source-locale with basepath get public file by skipping locale in rewrite, locale: ",
      "i18n-ignore-rewrite-source-locale with basepath get public file by skipping locale in rewrite, locale: /en",
      "i18n-ignore-rewrite-source-locale with basepath get public file by skipping locale in rewrite, locale: /nl",
      "i18n-ignore-rewrite-source-locale with basepath get public file by skipping locale in rewrite, locale: /sv"
    ],
    "failed": [
      "i18n-ignore-rewrite-source-locale with basepath get _next/static/ files by skipping locale in rewrite, locale: ",
      "i18n-ignore-rewrite-source-locale with basepath get _next/static/ files by skipping locale in rewrite, locale: /en",
      "i18n-ignore-rewrite-source-locale with basepath get _next/static/ files by skipping locale in rewrite, locale: /nl",
      "i18n-ignore-rewrite-source-locale with basepath get _next/static/ files by skipping locale in rewrite, locale: /sv"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/i18n-ignore-rewrite-source-locale/rewrites.test.ts": {
    "passed": [
      "i18n-ignore-rewrite-source-locale call api by skipping locale in rewrite, locale: ",
      "i18n-ignore-rewrite-source-locale call api by skipping locale in rewrite, locale: /en",
      "i18n-ignore-rewrite-source-locale call api by skipping locale in rewrite, locale: /nl",
      "i18n-ignore-rewrite-source-locale call api by skipping locale in rewrite, locale: /sv",
      "i18n-ignore-rewrite-source-locale get public file by skipping locale in rewrite, locale: ",
      "i18n-ignore-rewrite-source-locale get public file by skipping locale in rewrite, locale: /en",
      "i18n-ignore-rewrite-source-locale get public file by skipping locale in rewrite, locale: /nl",
      "i18n-ignore-rewrite-source-locale get public file by skipping locale in rewrite, locale: /sv"
    ],
    "failed": [
      "i18n-ignore-rewrite-source-locale get _next/static/ files by skipping locale in rewrite, locale: ",
      "i18n-ignore-rewrite-source-locale get _next/static/ files by skipping locale in rewrite, locale: /en",
      "i18n-ignore-rewrite-source-locale get _next/static/ files by skipping locale in rewrite, locale: /nl",
      "i18n-ignore-rewrite-source-locale get _next/static/ files by skipping locale in rewrite, locale: /sv"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/ignore-invalid-popstateevent/with-i18n.test.ts": {
    "passed": [],
    "failed": [
      "i18n: Event with stale state - static route previously was dynamic Don't ignore event with different locale",
      "i18n: Event with stale state - static route previously was dynamic Ignore event with query param",
      "i18n: Event with stale state - static route previously was dynamic Ignore event without query param"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/ignore-invalid-popstateevent/without-i18n.test.ts": {
    "passed": [],
    "failed": [
      "Event with stale state - static route previously was dynamic Ignore event with query param",
      "Event with stale state - static route previously was dynamic Ignore event without query param"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/instrumentation-hook-src/instrumentation-hook-src.test.ts": {
    "passed": [],
    "failed": [
      "instrumentation-hook-src should not overlap with a instrumentation page",
      "instrumentation-hook-src should run the edge instrumentation compiled version with the edge runtime",
      "instrumentation-hook-src should run the instrumentation hook"
    ],
    "pending": [
      "instrumentation-hook-src should reload the server when the instrumentation hook changes"
    ],
    "runtimeError": true
  },
  "test/e2e/instrumentation-hook/instrumentation-hook.test.ts": {
    "passed": [],
    "failed": [
      "Instrumentation Hook general should not overlap with a instrumentation page",
      "Instrumentation Hook with-async-edge-page with-async-edge-page should run the instrumentation hook",
      "Instrumentation Hook with-async-node-page with-async-node-page should run the instrumentation hook",
      "Instrumentation Hook with-edge-api with-edge-api should run the instrumentation hook",
      "Instrumentation Hook with-edge-page with-edge-page should run the instrumentation hook",
      "Instrumentation Hook with-middleware with-middleware should run the instrumentation hook",
      "Instrumentation Hook with-node-api with-node-api should run the instrumentation hook",
      "Instrumentation Hook with-node-page with-node-page should run the instrumentation hook"
    ],
    "pending": [
      "Instrumentation Hook general should reload the server when the instrumentation hook changes"
    ],
    "runtimeError": false
  },
  "test/e2e/link-with-api-rewrite/index.test.ts": {
    "passed": [
      "link-with-api-rewrite should perform hard navigation for direct urls",
      "link-with-api-rewrite should perform hard navigation for rewritten urls"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/manual-client-base-path/index.test.ts": {
    "passed": [],
    "failed": [
      "manual-client-base-path should navigate correctly from another",
      "manual-client-base-path should navigate correctly from index",
      "manual-client-base-path should not update with basePath on mount /",
      "manual-client-base-path should not update with basePath on mount /another",
      "manual-client-base-path should not update with basePath on mount /dynamic/first",
      "manual-client-base-path should not update with basePath on mount /dynamic/second",
      "manual-client-base-path should not warn for flag in output"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/e2e/middleware-base-path/test/index.test.ts": {
    "passed": [],
    "failed": [
      "Middleware base tests router.query must exist when Link clicked page routing",
      "Middleware base tests should execute from absolute paths"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/middleware-custom-matchers-basepath/test/index.test.ts": {
    "passed": ["Middleware custom matchers basePath should not match"],
    "failed": [
      "Middleware custom matchers basePath should match",
      "Middleware custom matchers basePath should match has query on client routing"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/middleware-custom-matchers-i18n/test/index.test.ts": {
    "passed": [
      "Middleware custom matchers i18n should not match",
      "Middleware custom matchers with root should not match"
    ],
    "failed": [
      "Middleware custom matchers i18n should match",
      "Middleware custom matchers i18n should match has query on client routing"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/middleware-custom-matchers/test/index.test.ts": {
    "passed": [
      "Middleware custom matchers should match missing header correctly",
      "Middleware custom matchers should match missing query correctly"
    ],
    "failed": [
      "Middleware custom matchers should match has cookie",
      "Middleware custom matchers should match has cookie on client routing",
      "Middleware custom matchers should match has header",
      "Middleware custom matchers should match has header value",
      "Middleware custom matchers should match has host",
      "Middleware custom matchers should match has query",
      "Middleware custom matchers should match has query on client routing",
      "Middleware custom matchers should match source path"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/middleware-dynamic-basepath-matcher/test/index.test.ts": {
    "passed": [
      "Middleware custom matchers basePath should match",
      "Middleware custom matchers basePath should not match"
    ],
    "failed": ["Middleware custom matchers basePath should match query path"],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/middleware-fetches-with-any-http-method/index.test.ts": {
    "passed": [],
    "failed": [
      "Middleware fetches with any HTTP method passes the method on a direct fetch request",
      "Middleware fetches with any HTTP method passes the method when providing a Request object"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/middleware-fetches-with-body/index.test.ts": {
    "passed": [
      "Middleware fetches with body should return 413 for body equal to 10mb",
      "Middleware fetches with body with bodyParser = false should be able to send and return with body greater than 16KiB",
      "Middleware fetches with body with bodyParser = false should be able to send and return with body size equal to 16KiB",
      "Middleware fetches with body with custom bodyParser sizeLimit (5kb) should be able to send and return body size equal to 5kb",
      "Middleware fetches with body with custom bodyParser sizeLimit (5kb) should return 413 for body greater than 5kb",
      "Middleware fetches with body with custom bodyParser sizeLimit (5mb) should be able to send and return body size equal to 5mb",
      "Middleware fetches with body with custom bodyParser sizeLimit (5mb) should return 413 for body greater than 5mb",
      "Middleware fetches with body with default bodyParser sizeLimit (1mb) should be able to send and return body greater than default highWaterMark (16KiB)",
      "Middleware fetches with body with default bodyParser sizeLimit (1mb) should be able to send and return body size equal to 1mb",
      "Middleware fetches with body with default bodyParser sizeLimit (1mb) should return 413 for body greater than 1mb"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/middleware-general/test/index.test.ts": {
    "passed": [
      "Middleware Runtime with i18n should have correct files in manifest",
      "Middleware Runtime with i18n should not run middleware for on-demand revalidate",
      "Middleware Runtime without i18n should have correct files in manifest",
      "Middleware Runtime without i18n should not run middleware for on-demand revalidate"
    ],
    "failed": [
      "Middleware Runtime with i18n allows shallow linking with middleware",
      "Middleware Runtime with i18n allows to access env variables",
      "Middleware Runtime with i18n hard-navigates when the data request failed",
      "Middleware Runtime with i18n passes search params with rewrites",
      "Middleware Runtime with i18n refreshes the page when middleware changes ",
      "Middleware Runtime with i18n should accept a URL instance for fetch",
      "Middleware Runtime with i18n should add a rewrite header on data requests for rewrites",
      "Middleware Runtime with i18n should allow to abort a fetch request",
      "Middleware Runtime with i18n should be able to rewrite on _next/static/chunks/pages/ 404",
      "Middleware Runtime with i18n should contain `globalThis`",
      "Middleware Runtime with i18n should contain crypto APIs",
      "Middleware Runtime with i18n should have correct dynamic route params for middleware rewrite to dynamic route",
      "Middleware Runtime with i18n should have correct dynamic route params on client-transition to dynamic route",
      "Middleware Runtime with i18n should have correct query values for rewrite to ssg page",
      "Middleware Runtime with i18n should have correct route params for chained rewrite from middleware to config rewrite",
      "Middleware Runtime with i18n should have correct route params for rewrite from config dynamic route",
      "Middleware Runtime with i18n should have correct route params for rewrite from config non-dynamic route",
      "Middleware Runtime with i18n should have init header for NextResponse.redirect",
      "Middleware Runtime with i18n should have the custom config in the manifest",
      "Middleware Runtime with i18n should have valid middleware field in manifest",
      "Middleware Runtime with i18n should keep non data requests in their original shape",
      "Middleware Runtime with i18n should normalize data requests into page requests",
      "Middleware Runtime with i18n should only contain middleware route in dev middleware manifest",
      "Middleware Runtime with i18n should redirect the same for direct visit and client-transition",
      "Middleware Runtime with i18n should respond with 400 on decode failure",
      "Middleware Runtime with i18n should rewrite correctly for non-SSG/SSP page",
      "Middleware Runtime with i18n should rewrite the same for direct visit and client-transition",
      "Middleware Runtime with i18n should set fetch user agent correctly",
      "Middleware Runtime with i18n should throw when using NextRequest with a relative URL",
      "Middleware Runtime with i18n should throw when using NextResponse.rewrite with a relative URL",
      "Middleware Runtime with i18n should throw when using Request with a relative URL",
      "Middleware Runtime with i18n should throw when using URL with a relative URL",
      "Middleware Runtime with i18n should trigger middleware for data requests",
      "Middleware Runtime with i18n should validate & parse request url from a dynamic route with params",
      "Middleware Runtime with i18n should validate & parse request url from a dynamic route with params and no query",
      "Middleware Runtime with i18n should validate & parse request url from a dynamic route with params and query",
      "Middleware Runtime with i18n should validate & parse request url from any route",
      "Middleware Runtime with i18n should warn when using NextResponse.redirect with a relative URL",
      "Middleware Runtime with i18n should warn when using Response.redirect with a relative URL",
      "Middleware Runtime with i18n should work with notFound: true correctly",
      "Middleware Runtime without i18n allows shallow linking with middleware",
      "Middleware Runtime without i18n allows to access env variables",
      "Middleware Runtime without i18n hard-navigates when the data request failed",
      "Middleware Runtime without i18n passes search params with rewrites",
      "Middleware Runtime without i18n refreshes the page when middleware changes ",
      "Middleware Runtime without i18n should accept a URL instance for fetch",
      "Middleware Runtime without i18n should add a rewrite header on data requests for rewrites",
      "Middleware Runtime without i18n should allow to abort a fetch request",
      "Middleware Runtime without i18n should be able to rewrite on _next/static/chunks/pages/ 404",
      "Middleware Runtime without i18n should contain `globalThis`",
      "Middleware Runtime without i18n should contain crypto APIs",
      "Middleware Runtime without i18n should have correct dynamic route params for middleware rewrite to dynamic route",
      "Middleware Runtime without i18n should have correct dynamic route params on client-transition to dynamic route",
      "Middleware Runtime without i18n should have correct query values for rewrite to ssg page",
      "Middleware Runtime without i18n should have correct route params for chained rewrite from middleware to config rewrite",
      "Middleware Runtime without i18n should have correct route params for rewrite from config dynamic route",
      "Middleware Runtime without i18n should have correct route params for rewrite from config non-dynamic route",
      "Middleware Runtime without i18n should have init header for NextResponse.redirect",
      "Middleware Runtime without i18n should have the custom config in the manifest",
      "Middleware Runtime without i18n should have valid middleware field in manifest",
      "Middleware Runtime without i18n should keep non data requests in their original shape",
      "Middleware Runtime without i18n should normalize data requests into page requests",
      "Middleware Runtime without i18n should only contain middleware route in dev middleware manifest",
      "Middleware Runtime without i18n should redirect the same for direct visit and client-transition",
      "Middleware Runtime without i18n should respond with 400 on decode failure",
      "Middleware Runtime without i18n should rewrite correctly for non-SSG/SSP page",
      "Middleware Runtime without i18n should rewrite the same for direct visit and client-transition",
      "Middleware Runtime without i18n should set fetch user agent correctly",
      "Middleware Runtime without i18n should throw when using NextRequest with a relative URL",
      "Middleware Runtime without i18n should throw when using NextResponse.rewrite with a relative URL",
      "Middleware Runtime without i18n should throw when using Request with a relative URL",
      "Middleware Runtime without i18n should throw when using URL with a relative URL",
      "Middleware Runtime without i18n should trigger middleware for data requests",
      "Middleware Runtime without i18n should validate & parse request url from a dynamic route with params and query",
      "Middleware Runtime without i18n should validate & parse request url from any route",
      "Middleware Runtime without i18n should warn when using NextResponse.redirect with a relative URL",
      "Middleware Runtime without i18n should warn when using Response.redirect with a relative URL",
      "Middleware Runtime without i18n should work with notFound: true correctly"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/e2e/middleware-matcher/index.test.ts": {
    "passed": [
      "Middleware can set the matcher in its config should navigate correctly with matchers",
      "using a single matcher does not add the header for an unmatched path",
      "using a single matcher does not add the header for root data request",
      "using a single matcher does not add the header for root request"
    ],
    "failed": [
      "Middleware can set the matcher in its config adds the header for a matched data path (with header)",
      "Middleware can set the matcher in its config adds the header for a matched data path (without header)",
      "Middleware can set the matcher in its config adds the header for a matched path",
      "Middleware can set the matcher in its config adds the header for another matched data path",
      "Middleware can set the matcher in its config adds the header for another matched path",
      "Middleware can set the matcher in its config does add the header for root data request",
      "Middleware can set the matcher in its config does add the header for root request",
      "Middleware can set the matcher in its config should load matches in client matchers correctly",
      "using a single matcher adds the header for a matched data path (without header)",
      "using a single matcher adds the header for a matched path",
      "using a single matcher adds the headers for a matched data path (with header)",
      "using a single matcher with i18n adds the header for a matched path",
      "using a single matcher with i18n adds the header for a mathed root path with /index",
      "using a single matcher with i18n adds the headers for a matched data path",
      "using a single matcher with i18n and basePath adds the header for a matched path",
      "using a single matcher with i18n and basePath adds the header for a mathed root path with /index",
      "using a single matcher with i18n and basePath adds the headers for a matched data path",
      "using a single matcher with i18n and basePath and trailingSlash adds the header for a matched path",
      "using a single matcher with i18n and basePath and trailingSlash adds the header for a mathed root path with /index",
      "using a single matcher with i18n and basePath and trailingSlash adds the headers for a matched data path",
      "using a single matcher with i18n and basePath and trailingSlash does not add the header for an unmatched path",
      "using a single matcher with i18n and basePath does not add the header for an unmatched path",
      "using a single matcher with i18n and trailingSlash adds the header for a matched path",
      "using a single matcher with i18n and trailingSlash adds the header for a mathed root path with /index",
      "using a single matcher with i18n and trailingSlash adds the headers for a matched data path",
      "using a single matcher with i18n and trailingSlash does not add the header for an unmatched path",
      "using a single matcher with i18n does not add the header for an unmatched path",
      "using root matcher adds the header for a matched data path (with header)",
      "using root matcher adds the header for a matched data path (without header)",
      "using root matcher adds the header to the /",
      "using root matcher adds the header to the /index"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/e2e/middleware-redirects/test/index.test.ts": {
    "passed": [],
    "failed": [
      "Middleware Redirect /fr should implement internal redirects",
      "Middleware Redirect /fr should redirect",
      "Middleware Redirect /fr should redirect (infinite-loop)",
      "Middleware Redirect /fr should redirect cleanly with the original url param",
      "Middleware Redirect /fr should redirect multiple times",
      "Middleware Redirect /fr should redirect to api route with locale",
      "Middleware Redirect /fr should redirect with a fragment",
      "Middleware Redirect does not include the locale in redirects by default",
      "Middleware Redirect should implement internal redirects",
      "Middleware Redirect should redirect",
      "Middleware Redirect should redirect (infinite-loop)",
      "Middleware Redirect should redirect cleanly with the original url param",
      "Middleware Redirect should redirect correctly with redirect in next.config.js",
      "Middleware Redirect should redirect multiple times",
      "Middleware Redirect should redirect to api route with locale",
      "Middleware Redirect should redirect to data urls with data requests and internal redirects",
      "Middleware Redirect should redirect to external urls with data requests and external redirects",
      "Middleware Redirect should redirect with a fragment"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/e2e/middleware-request-header-overrides/test/index.test.ts": {
    "passed": [],
    "failed": [
      "Middleware Request Headers Overrides Edge Functions Backend Adds new headers",
      "Middleware Request Headers Overrides Edge Functions Backend Deletes headers",
      "Middleware Request Headers Overrides Edge Functions Backend Updates headers",
      "Middleware Request Headers Overrides Serverless Functions Backend Adds new headers",
      "Middleware Request Headers Overrides Serverless Functions Backend Deletes headers",
      "Middleware Request Headers Overrides Serverless Functions Backend Updates headers",
      "Middleware Request Headers Overrides getServerSideProps Backend Adds new headers",
      "Middleware Request Headers Overrides getServerSideProps Backend Deletes headers",
      "Middleware Request Headers Overrides getServerSideProps Backend Updates headers"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/middleware-responses/test/index.test.ts": {
    "passed": [],
    "failed": [
      "Middleware Responses /fr responds with multiple cookies",
      "Middleware Responses /fr should not fail when returning a stream",
      "Middleware Responses /fr should not fail when returning a text body",
      "Middleware Responses /fr should respond appending headers headers",
      "Middleware Responses /fr should respond with a 401 status code",
      "Middleware Responses /fr should respond with one header",
      "Middleware Responses /fr should respond with two headers",
      "Middleware Responses responds with multiple cookies",
      "Middleware Responses should not fail when returning a stream",
      "Middleware Responses should not fail when returning a text body",
      "Middleware Responses should respond appending headers headers",
      "Middleware Responses should respond with a 401 status code",
      "Middleware Responses should respond with one header",
      "Middleware Responses should respond with two headers"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/middleware-shallow-link/index.test.ts": {
    "passed": ["browser-shallow-navigation should render the correct page"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/middleware-trailing-slash/test/index.test.ts": {
    "passed": [
      "Middleware Runtime trailing slash should have correct files in manifest",
      "Middleware Runtime trailing slash should not run middleware for on-demand revalidate",
      "Middleware Runtime trailing slash should redirect the same for direct visit and client-transition",
      "Middleware Runtime trailing slash should respond with 400 on decode failure",
      "Middleware Runtime trailing slash should rewrite correctly for non-SSG/SSP page",
      "Middleware Runtime trailing slash with .html extension should work using browser",
      "Middleware Runtime trailing slash with .html extension should work when navigating",
      "Middleware Runtime trailing slash with .html extension should work when requesting the page directly",
      "Middleware Runtime trailing slash without .html extension should work using browser",
      "Middleware Runtime trailing slash without .html extension should work when navigating",
      "Middleware Runtime trailing slash without .html extension should work when requesting the page directly"
    ],
    "failed": [
      "Middleware Runtime trailing slash allows shallow linking with middleware",
      "Middleware Runtime trailing slash refreshes the page when middleware changes ",
      "Middleware Runtime trailing slash should add a rewrite header on data requests for rewrites",
      "Middleware Runtime trailing slash should have correct dynamic route params for middleware rewrite to dynamic route",
      "Middleware Runtime trailing slash should have correct dynamic route params on client-transition to dynamic route",
      "Middleware Runtime trailing slash should have correct query values for rewrite to ssg page",
      "Middleware Runtime trailing slash should have correct route params for chained rewrite from middleware to config rewrite",
      "Middleware Runtime trailing slash should have correct route params for rewrite from config dynamic route",
      "Middleware Runtime trailing slash should have correct route params for rewrite from config non-dynamic route",
      "Middleware Runtime trailing slash should have init header for NextResponse.redirect",
      "Middleware Runtime trailing slash should have valid middleware field in manifest",
      "Middleware Runtime trailing slash should keep non data requests in their original shape",
      "Middleware Runtime trailing slash should normalize data requests into page requests",
      "Middleware Runtime trailing slash should rewrite the same for direct visit and client-transition",
      "Middleware Runtime trailing slash should trigger middleware for data requests",
      "Middleware Runtime trailing slash should validate & parse request url from any route"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/module-layer/index.test.ts": {
    "passed": [],
    "failed": [
      "module layer no server-only in server targets should log the build info properly",
      "module layer no server-only in server targets should render routes marked with restriction marks without errors",
      "module layer with server-only in server targets should log the build info properly",
      "module layer with server-only in server targets should render routes marked with restriction marks without errors"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/multi-zone/multi-zone.test.ts": {
    "passed": [],
    "failed": [
      "multi-zone should correctly respond for /first",
      "multi-zone should correctly respond for /first/blog/post-1",
      "multi-zone should correctly respond for /second",
      "multi-zone should correctly respond for /second/another/post-1",
      "multi-zone should correctly respond for /second/blog/post-1"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/new-link-behavior/child-a-tag-error.test.ts": {
    "passed": [
      "New Link Behavior with <a> child should throw error with <a> child"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/new-link-behavior/index.test.ts": {
    "passed": [
      "New Link Behavior should handle onclick",
      "New Link Behavior should handle preventdefault",
      "New Link Behavior should navigate to /about",
      "New Link Behavior should render link with <a>",
      "New Link Behavior should render link with classname",
      "New Link Behavior should render link with id",
      "New Link Behavior should render link with multiple children"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/new-link-behavior/material-ui.test.ts": {
    "passed": [
      "New Link Behavior with material-ui should render MuiLink with <a>"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/new-link-behavior/stitches.test.ts": {
    "passed": ["New Link Behavior with stitches should render <a>"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/new-link-behavior/typescript.test.ts": {
    "passed": [
      "New Link Behavior should apply ref on link",
      "New Link Behavior should render link with <a>"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/next-font/basepath.test.ts": {
    "passed": [],
    "failed": ["next/font/google basepath preload correct files"],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/next-font/google-fetch-error.test.ts": {
    "passed": [],
    "failed": [
      "next/font/google fetch error should error when not in dev",
      "next/font/google fetch error should use a fallback font in dev"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/next-font/index.test.ts": {
    "passed": [
      "next/font app Fallback fontfaces local Fraunces",
      "next/font app Fallback fontfaces local Indie flower",
      "next/font app Fallback fontfaces local Roboto multiple weights and styles",
      "next/font app Fallback fontfaces local Roboto multiple weights and styles - variable 1",
      "next/font app Fallback fontfaces local Roboto multiple weights and styles - variable 2",
      "next/font app computed styles page using fallback fonts",
      "next/font app computed styles page using variables",
      "next/font app computed styles page with fonts",
      "next/font app import values Variable font without weight range",
      "next/font app import values page with font",
      "next/font app import values page with local fonts",
      "next/font app-old Fallback fontfaces local Fraunces",
      "next/font app-old Fallback fontfaces local Indie flower",
      "next/font app-old Fallback fontfaces local Roboto multiple weights and styles",
      "next/font app-old Fallback fontfaces local Roboto multiple weights and styles - variable 1",
      "next/font app-old Fallback fontfaces local Roboto multiple weights and styles - variable 2",
      "next/font app-old computed styles page using fallback fonts",
      "next/font app-old computed styles page using variables",
      "next/font app-old computed styles page with fonts",
      "next/font app-old import values Variable font without weight range",
      "next/font app-old import values page with font",
      "next/font app-old import values page with local fonts"
    ],
    "failed": [
      "next/font app Fallback fontfaces google Fraunces",
      "next/font app Fallback fontfaces google Indie flower",
      "next/font app preload font without preloadable subsets",
      "next/font app preload font without size adjust",
      "next/font app preload google fonts with multiple weights/styles",
      "next/font app preload page with fonts",
      "next/font app preload page with local fonts",
      "next/font app preload page without fonts",
      "next/font app-old Fallback fontfaces google Fraunces",
      "next/font app-old Fallback fontfaces google Indie flower",
      "next/font app-old preload font without preloadable subsets",
      "next/font app-old preload font without size adjust",
      "next/font app-old preload google fonts with multiple weights/styles",
      "next/font app-old preload page with fonts",
      "next/font app-old preload page with local fonts",
      "next/font app-old preload page without fonts"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/next-font/with-font-declarations-file.test.ts": {
    "passed": [],
    "failed": [
      "next/font/google with-font-declarations-file preload correct files at /inter",
      "next/font/google with-font-declarations-file preload correct files at /local-font",
      "next/font/google with-font-declarations-file preload correct files at /roboto"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/next-font/with-proxy.test.ts": {
    "passed": [],
    "failed": [
      "next/font/google with proxy should use a proxy agent when proxy environment variable is set"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/next-font/without-preloaded-fonts.test.ts": {
    "passed": [
      "next/font/google without-preloaded-fonts without _app without fonts"
    ],
    "failed": [
      "next/font/google no preloads with _app without fonts",
      "next/font/google no preloads with _app without preload",
      "next/font/google without-preloaded-fonts without _app without preload"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/next-head/index.test.ts": {
    "passed": [
      "should set-up next should have correct head tags after hydration",
      "should set-up next should have correct head tags from a fragment",
      "should set-up next should have correct head tags in initial document",
      "should set-up next should have current head tags from a _document getInitialProps",
      "should set-up next should place charset element at the top of <head>"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/next-image-forward-ref/index.test.ts": {
    "passed": [
      "next-image-forward-ref allows framer-motion to animate opacity"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/next-script/index.test.ts": {
    "passed": [
      "beforeInteractive in document Head Script is injected server-side",
      "beforeInteractive in document body Script is injected server-side",
      "experimental.nextScriptWorkers: false with no Partytown dependency Partytown snippet is not injected to head if not enabled in configuration"
    ],
    "failed": [
      "experimental.nextScriptWorkers: true with config override Partytown config script is overwritten",
      "experimental.nextScriptWorkers: true with required Partytown dependency for external script Partytown snippets are injected to head if enabled in configuration",
      "experimental.nextScriptWorkers: true with required Partytown dependency for external script Worker scripts are modified by Partytown to execute on a worker thread",
      "experimental.nextScriptWorkers: true with required Partytown dependency for inline script Inline worker script through children is modified by Partytown to execute on a worker thread",
      "experimental.nextScriptWorkers: true with required Partytown dependency for inline script Inline worker script through dangerouslySetInnerHtml is modified by Partytown to execute on a worker thread"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/e2e/no-eslint-warn-with-no-eslint-config/index.test.ts": {
    "passed": [
      "no-eslint-warn-with-no-eslint-config should not have eslint warnings when no eslint config",
      "no-eslint-warn-with-no-eslint-config should not warn with eslint config in package.json",
      "no-eslint-warn-with-no-eslint-config should render",
      "no-eslint-warn-with-no-eslint-config should warn with empty eslint config in package.json",
      "no-eslint-warn-with-no-eslint-config should warn with empty eslintrc"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/nonce-head-manager/index.test.ts": {
    "passed": [],
    "failed": [
      "should set-up next should not re-execute the script when re-rendering",
      "should set-up next should not re-execute the script when re-rendering with CSP header"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/e2e/og-api/index.test.ts": {
    "passed": [
      "og-api should throw error when returning a response object in pages/api in node runtime"
    ],
    "failed": [
      "og-api should copy files correctly",
      "og-api should respond from index",
      "og-api should work in app route",
      "og-api should work in app route in node runtime",
      "og-api should work in pages/api"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/opentelemetry/opentelemetry.test.ts": {
    "passed": [],
    "failed": [
      "opentelemetry app router should handle RSC with fetch",
      "opentelemetry app router should handle route handlers in app router",
      "opentelemetry pages should handle api routes in pages",
      "opentelemetry pages should handle getServerSideProps",
      "opentelemetry pages should handle getStaticProps when fallback: 'blocking'"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/e2e/optimized-loading/test/index.test.ts": {
    "passed": [
      "Optimized loading page / should load scripts with defer in head",
      "Optimized loading page / should not have JS preload links",
      "Optimized loading page / should render the page /",
      "Optimized loading page /page1 should load scripts with defer in head",
      "Optimized loading page /page1 should not have JS preload links",
      "Optimized loading page /page1 should render the page /page1"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/pages-performance-mark/index.test.ts": {
    "passed": [
      "pages performance mark should render the page correctly without crashing with performance mark"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/postcss-config-cjs/index.test.ts": {
    "passed": ["postcss-config-cjs works with postcss.config.cjs files"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/prerender-crawler.test.ts": {
    "passed": [
      "Prerender crawler handling should block for crawler correctly",
      "Prerender crawler handling should return fallback for non-crawler correctly",
      "Prerender crawler handling should return prerendered page for correctly"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/prerender-native-module.test.ts": {
    "passed": [
      "prerender native module should render /blog/first correctly",
      "prerender native module should render /blog/second correctly",
      "prerender native module should render index correctly"
    ],
    "failed": ["prerender native module should output traces"],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/prerender.test.ts": {
    "passed": [
      "Prerender outputs a prerender-manifest correctly",
      "Prerender outputs dataRoutes in routes-manifest correctly",
      "Prerender outputs prerendered files correctly",
      "Prerender should 404 for a missing catchall explicit route",
      "Prerender should 404 for an invalid data url",
      "Prerender should SSR blocking path correctly (blocking)",
      "Prerender should SSR blocking path correctly (pre-rendered)",
      "Prerender should SSR catch-all page with brackets in param as object",
      "Prerender should SSR catch-all page with brackets in param as string",
      "Prerender should SSR dynamic page with brackets in param as object",
      "Prerender should SSR dynamic page with brackets in param as string",
      "Prerender should SSR incremental page correctly",
      "Prerender should SSR normal page correctly",
      "Prerender should allow rewriting to SSG page with fallback: 'blocking'",
      "Prerender should allow rewriting to SSG page with fallback: false",
      "Prerender should always call getStaticProps without caching in dev",
      "Prerender should always show fallback for page not in getStaticPaths",
      "Prerender should automatically reset cache TTL when an error occurs and build cache was available",
      "Prerender should automatically reset cache TTL when an error occurs and runtime cache was available",
      "Prerender should error on bad object from getStaticProps",
      "Prerender should error on dynamic page without getStaticPaths",
      "Prerender should error on dynamic page without getStaticPaths returning fallback property",
      "Prerender should handle de-duping correctly",
      "Prerender should handle fallback only page correctly HTML",
      "Prerender should handle fallback only page correctly data",
      "Prerender should handle on-demand revalidate for fallback: blocking",
      "Prerender should handle on-demand revalidate for fallback: false",
      "Prerender should handle revalidating HTML correctly",
      "Prerender should handle revalidating HTML correctly with blocking",
      "Prerender should handle revalidating HTML correctly with blocking and seed",
      "Prerender should handle revalidating JSON correctly",
      "Prerender should handle revalidating JSON correctly with blocking",
      "Prerender should handle revalidating JSON correctly with blocking and seed",
      "Prerender should have gsp in __NEXT_DATA__",
      "Prerender should log error in console and browser in dev mode",
      "Prerender should navigate to a normal page and back",
      "Prerender should navigate to catch-all page with brackets in param as object",
      "Prerender should navigate to catch-all page with brackets in param as string",
      "Prerender should navigate to dynamic page with brackets in param as object",
      "Prerender should navigate to dynamic page with brackets in param as string",
      "Prerender should never show fallback for page not in getStaticPaths when blocking",
      "Prerender should not contain headers already sent error",
      "Prerender should not error when flushing cache files",
      "Prerender should not fail to update incremental cache",
      "Prerender should not fallback before invalid JSON is returned from getStaticProps when blocking fallback",
      "Prerender should not fetch prerender data on mount",
      "Prerender should not have attempted sending invalid payload",
      "Prerender should not have experimental undici warning",
      "Prerender should not have gsp in __NEXT_DATA__ for non-GSP page",
      "Prerender should not on-demand revalidate for fallback: blocking with onlyGenerated if not generated",
      "Prerender should not re-call getStaticProps when updating query",
      "Prerender should not return data for fallback: false and missing dynamic page",
      "Prerender should not revalidate when set to false",
      "Prerender should not revalidate when set to false in blocking fallback mode",
      "Prerender should not show error for invalid JSON returned from getStaticProps on CST",
      "Prerender should not show error for invalid JSON returned from getStaticProps on SSR",
      "Prerender should not show fallback for page in getStaticPaths",
      "Prerender should not show fallback for page in getStaticPaths when blocking",
      "Prerender should not show warning from url prop being returned",
      "Prerender should not supply query values to params in /_next/data request",
      "Prerender should not supply query values to params or useRouter dynamic page SSR",
      "Prerender should not supply query values to params or useRouter non-dynamic page SSR",
      "Prerender should not throw error for on-demand revalidate for SSR path",
      "Prerender should of formatted build output correctly",
      "Prerender should on-demand revalidate for fallback: blocking with onlyGenerated if generated",
      "Prerender should on-demand revalidate for revalidate: false",
      "Prerender should on-demand revalidate that returns notFound: true",
      "Prerender should only show warning once per page when large amount of page data is returned",
      "Prerender should parse query values on mount correctly",
      "Prerender should reload page on failed data request",
      "Prerender should render correctly for SSG pages that starts with api-docs",
      "Prerender should respond for catch-all deep folder",
      "Prerender should respond with 405 for POST to static page",
      "Prerender should return data correctly",
      "Prerender should return data correctly for SSG pages that starts with api-docs",
      "Prerender should return data correctly for dynamic page",
      "Prerender should return data correctly for dynamic page (non-seeded)",
      "Prerender should revalidate on-demand revalidate with preview cookie",
      "Prerender should server prerendered path correctly for SSG pages that starts with api-docs",
      "Prerender should show error for invalid JSON returned from getStaticProps on CST",
      "Prerender should show error for invalid JSON returned from getStaticProps on SSR",
      "Prerender should show fallback before invalid JSON is returned from getStaticProps",
      "Prerender should show warning every time page with large amount of page data is returned",
      "Prerender should show warning when large amount of page data is returned",
      "Prerender should support lazy catchall route",
      "Prerender should support nested lazy catchall route",
      "Prerender should support prerendered catchall route",
      "Prerender should support prerendered catchall-explicit route (nested)",
      "Prerender should support prerendered catchall-explicit route (single)",
      "Prerender should use correct caching headers for a no-revalidate page",
      "Prerender should use correct caching headers for a revalidate page"
    ],
    "failed": [
      "Prerender should fetch /_next/data correctly with mismatched href and as",
      "Prerender should navigate between pages successfully",
      "Prerender should not error when rewriting to fallback dynamic SSG page",
      "Prerender should output traces"
    ],
    "pending": [
      "Prerender should reload page on failed data request, and retry"
    ],
    "runtimeError": false
  },
  "test/e2e/proxy-request-with-middleware/test/index.test.ts": {
    "passed": [
      "Requests not effected when middleware used should proxy GET request ",
      "Requests not effected when middleware used should proxy POST request with body"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/reload-scroll-backforward-restoration/index.test.ts": {
    "passed": [],
    "failed": [
      "reload-scroll-back-restoration should restore the scroll position on navigating back",
      "reload-scroll-back-restoration should restore the scroll position on navigating forward"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/e2e/repeated-forward-slashes-error/repeated-forward-slashes-error.test.ts": {
    "passed": [
      "repeated-forward-slashes-error should log error when href has repeated forward-slashes"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/skip-trailing-slash-redirect/index.test.ts": {
    "passed": [
      "skip-trailing-slash-redirect should not have trailing slash redirects in manifest"
    ],
    "failed": [
      "skip-trailing-slash-redirect app dir should navigate client side correctly",
      "skip-trailing-slash-redirect app dir should not apply trailing slash redirect (with slash)",
      "skip-trailing-slash-redirect app dir should not apply trailing slash redirect (without slash)",
      "skip-trailing-slash-redirect app dir should preserve original trailing slashes to links on client",
      "skip-trailing-slash-redirect app dir should respond to dynamic route correctly",
      "skip-trailing-slash-redirect app dir should respond to index correctly",
      "skip-trailing-slash-redirect pages dir should navigate client side correctly",
      "skip-trailing-slash-redirect pages dir should not apply trailing slash redirect (with slash)",
      "skip-trailing-slash-redirect pages dir should not apply trailing slash redirect (without slash)",
      "skip-trailing-slash-redirect pages dir should preserve original trailing slashes to links on client",
      "skip-trailing-slash-redirect pages dir should respond to dynamic route correctly",
      "skip-trailing-slash-redirect pages dir should respond to index correctly",
      "skip-trailing-slash-redirect should allow response body from middleware with flag",
      "skip-trailing-slash-redirect should allow rewriting invalid buildId correctly",
      "skip-trailing-slash-redirect should apply config redirect correctly",
      "skip-trailing-slash-redirect should apply config rewrites correctly",
      "skip-trailing-slash-redirect should be able to redirect locale casing $1",
      "skip-trailing-slash-redirect should correct skip URL normalizing in middleware",
      "skip-trailing-slash-redirect should handle external rewrite correctly /chained-rewrite-ssg",
      "skip-trailing-slash-redirect should handle external rewrite correctly /chained-rewrite-ssr",
      "skip-trailing-slash-redirect should handle external rewrite correctly /chained-rewrite-static",
      "skip-trailing-slash-redirect should handle external rewrite correctly /docs-auto-static/first",
      "skip-trailing-slash-redirect should handle external rewrite correctly /docs-ssr/first",
      "skip-trailing-slash-redirect should handle external rewrite correctly /docs/first",
      "skip-trailing-slash-redirect should merge cookies from middleware and API routes correctly",
      "skip-trailing-slash-redirect should merge cookies from middleware and edge API routes correctly",
      "skip-trailing-slash-redirect should not apply trailing slash on load on client",
      "skip-trailing-slash-redirect should parse locale info for data request correctly",
      "skip-trailing-slash-redirect should provide original _next/data URL with skipMiddlewareUrlNormalize"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/e2e/ssr-react-context/index.test.ts": {
    "passed": [
      "React Context should render a page with context",
      "React Context should render correctly with context consumer",
      "React Context should render with context after change"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/streaming-ssr/index.test.ts": {
    "passed": [
      "react 18 streaming SSR in minimal mode with node runtime should generate html response by streaming correctly",
      "react 18 streaming SSR in minimal mode with node runtime should have generated a static 404 page",
      "streaming SSR with custom next configs should work with custom document",
      "streaming SSR with custom server should render page correctly under custom server"
    ],
    "failed": [
      "react 18 streaming SSR in minimal mode with node runtime should pass correct nextRuntime values",
      "streaming SSR with custom next configs should match more specific route along with dynamic routes",
      "streaming SSR with custom next configs should redirect paths without trailing-slash and render when slash is appended",
      "streaming SSR with custom next configs should render multi-byte characters correctly in streaming",
      "streaming SSR with custom next configs should render next/router correctly in edge runtime",
      "streaming SSR with custom next configs should render styled-jsx styles in streaming"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/styled-jsx/index.test.ts": {
    "passed": [
      "styled-jsx should contain styled-jsx styles during SSR",
      "styled-jsx should render styles during CSR",
      "styled-jsx should render styles during CSR (AMP)",
      "styled-jsx should render styles during SSR (AMP)"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/swc-warnings/index.test.ts": {
    "passed": [],
    "failed": [
      "can force swc should not have warning",
      "swc warnings by default should have warning"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/e2e/switchable-runtime/index.test.ts": {
    "passed": [
      "Switchable runtime Switchable runtime (dev) should not consume server.js file extension",
      "Switchable runtime Switchable runtime (dev) should not include edge api routes and edge ssr routes into dev middleware manifest"
    ],
    "failed": [
      "Switchable runtime Switchable runtime (dev) should be able to navigate between edge SSR routes without any errors",
      "Switchable runtime Switchable runtime (dev) should be possible to switch between runtimes in API routes",
      "Switchable runtime Switchable runtime (dev) should be possible to switch between runtimes in pages",
      "Switchable runtime Switchable runtime (dev) should build /api/hello and /api/edge as an api route with edge runtime",
      "Switchable runtime Switchable runtime (dev) should sort edge SSR routes correctly",
      "Switchable runtime Switchable runtime (prod) should build /api/hello and /api/edge as an api route with edge runtime",
      "Switchable runtime Switchable runtime (prod) should build /app-valid-runtime as a dynamic page with the edge runtime",
      "Switchable runtime Switchable runtime (prod) should build /edge as a dynamic page with the edge runtime",
      "Switchable runtime Switchable runtime (prod) should build /node-ssr as a dynamic page with the nodejs runtime",
      "Switchable runtime Switchable runtime (prod) should build /static as a static page with the nodejs runtime",
      "Switchable runtime Switchable runtime (prod) should support etag header in the web server"
    ],
    "pending": [
      "Switchable runtime Switchable runtime (dev) should be possible to switch between runtimes with same content",
      "Switchable runtime Switchable runtime (dev) should give proper errors for invalid runtime in app dir",
      "Switchable runtime Switchable runtime (dev) should not crash the dev server when invalid runtime is configured",
      "Switchable runtime Switchable runtime (dev) should recover from syntax error when using edge runtime",
      "Switchable runtime Switchable runtime (dev) should support client side navigation to ssg rsc pages",
      "Switchable runtime Switchable runtime (dev) should support client side navigation to ssr rsc pages",
      "Switchable runtime Switchable runtime (dev) should support client side navigation to static rsc pages",
      "Switchable runtime Switchable runtime (prod) should build /edge-rsc as a dynamic page with the edge runtime",
      "Switchable runtime Switchable runtime (prod) should build /node as a static page with the nodejs runtime",
      "Switchable runtime Switchable runtime (prod) should build /node-rsc as a static page with the nodejs runtime",
      "Switchable runtime Switchable runtime (prod) should build /node-rsc-isr as an isr page with the nodejs runtime",
      "Switchable runtime Switchable runtime (prod) should build /node-rsc-ssg as a static page with the nodejs runtime",
      "Switchable runtime Switchable runtime (prod) should build /node-rsc-ssr as a dynamic page with the nodejs runtime",
      "Switchable runtime Switchable runtime (prod) should build /node-ssg as a static page with the nodejs runtime",
      "Switchable runtime Switchable runtime (prod) should display correct tree view with page types in terminal",
      "Switchable runtime Switchable runtime (prod) should prefetch data for static pages",
      "Switchable runtime Switchable runtime (prod) should support client side navigation to ssg rsc pages",
      "Switchable runtime Switchable runtime (prod) should support client side navigation to ssr rsc pages",
      "Switchable runtime Switchable runtime (prod) should support client side navigation to static rsc pages"
    ],
    "runtimeError": false
  },
  "test/e2e/test-template/{{ toFileName name }}/{{ toFileName name }}.test.ts": {
    "passed": [
      "{{name}} should work using browser",
      "{{name}} should work using cheerio",
      "{{name}} should work with fetch",
      "{{name}} should work with html"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/test-utils-tests/basic/basic.test.ts": {
    "passed": ["createNextDescribe should work"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/third-parties/index.test.ts": {
    "passed": [
      "@next/third-parties basic usage renders GoogleMapsEmbed",
      "@next/third-parties basic usage renders YoutubeEmbed"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/trailingslash-with-rewrite/index.test.ts": {
    "passed": [
      "trailingSlash:true with rewrites and getStaticProps should work"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/transpile-packages/index.test.ts": {
    "passed": [
      "transpile packages css should handle css modules imports inside transpiled modules",
      "transpile packages css should handle global css imports inside transpiled modules",
      "transpile packages css should handle global scss imports inside transpiled modules",
      "transpile packages css should handle scss modules imports inside transpiled modules"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/type-module-interop/index.test.ts": {
    "passed": [
      "Type module interop should render client-side",
      "Type module interop should render client-side with modules",
      "Type module interop should render server-side",
      "Type module interop should render server-side with modules"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/typescript-version-no-warning/typescript-version-no-warning.test.ts": {
    "passed": [
      "typescript-version-no-warning should not print warning when new typescript version is used with next build",
      "typescript-version-no-warning should skip"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/typescript-version-warning/typescript-version-warning.test.ts": {
    "passed": [
      "typescript-version-warning should print warning when old typescript version is used with next build",
      "typescript-version-warning should skip"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/undici-fetch/index.test.ts": {
    "passed": [
      "undici fetch undici global Headers should return true when undici is used",
      "undici fetch undici global Request should return true when undici is used",
      "undici fetch undici global Response should return true when undici is used",
      "undici fetch undici global fetch should return true when undici is used"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/yarn-pnp/test/with-eslint.test.ts": {
    "passed": [],
    "failed": [
      "yarn PnP should compile and serve the index page correctly with-eslint"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/yarn-pnp/test/with-mdx.test.ts": {
    "passed": [],
    "failed": [
      "yarn PnP should compile and serve the index page correctly with-mdx"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/e2e/yarn-pnp/test/with-next-sass.test.ts": {
    "passed": [],
    "failed": [
      "yarn PnP should compile and serve the index page correctly with-next-sass"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/404-page-app/test/index.test.js": {
    "passed": [
      "404 Page Support with _app dev mode should not show pages/404 GIP error if _app has GIP",
      "404 Page Support with _app production mode should build successfully",
      "404 Page Support with _app production mode should not output static 404 if _app has getInitialProps",
      "404 Page Support with _app production mode should still use 404 page",
      "404 Page Support with _app production mode specify to use the 404 page still in the routes-manifest"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/404-page-custom-error/test/index.test.js": {
    "passed": [
      "Default 404 Page with custom _error dev mode should render error correctly",
      "Default 404 Page with custom _error dev mode should render index page normal",
      "Default 404 Page with custom _error dev mode should respond to 404 correctly",
      "Default 404 Page with custom _error server mode should build successfully",
      "Default 404 Page with custom _error server mode should have output 404.html",
      "Default 404 Page with custom _error server mode should render error correctly",
      "Default 404 Page with custom _error server mode should render index page normal",
      "Default 404 Page with custom _error server mode should respond to 404 correctly",
      "Default 404 Page with custom _error server mode should set pages404 in routes-manifest correctly"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/404-page-ssg/test/index.test.js": {
    "passed": [
      "404 Page Support SSG dev mode should not show an error in the logs for 404 SSG",
      "404 Page Support SSG dev mode should render error correctly",
      "404 Page Support SSG dev mode should render index page normal",
      "404 Page Support SSG dev mode should respond to 404 correctly",
      "404 Page Support SSG server mode should build successfully",
      "404 Page Support SSG server mode should have 404 page in prerender-manifest",
      "404 Page Support SSG server mode should not revalidate custom 404 page",
      "404 Page Support SSG server mode should not show an error in the logs for 404 SSG",
      "404 Page Support SSG server mode should render error correctly",
      "404 Page Support SSG server mode should render index page normal",
      "404 Page Support SSG server mode should respond to 404 correctly",
      "404 Page Support SSG server mode should set pages404 in routes-manifest correctly"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/404-page/test/index.test.js": {
    "passed": [
      "404 Page Support dev mode should not error when visited directly",
      "404 Page Support dev mode should render _error for a 500 error still",
      "404 Page Support dev mode should set correct status code with pages/404",
      "404 Page Support dev mode should use pages/404",
      "404 Page Support dev mode should use pages/404 for .d.ts file",
      "404 Page Support does not show error with getStaticProps in pages/404 build",
      "404 Page Support does not show error with getStaticProps in pages/404 dev",
      "404 Page Support falls back to _error correctly without pages/404",
      "404 Page Support server mode should add /404 to pages-manifest correctly",
      "404 Page Support server mode should not error when visited directly",
      "404 Page Support server mode should output 404.html during build",
      "404 Page Support server mode should render _error for a 500 error still",
      "404 Page Support server mode should set correct status code with pages/404",
      "404 Page Support server mode should use pages/404",
      "404 Page Support server mode should use pages/404 for .d.ts file",
      "404 Page Support should not cache for custom 404 page with gssp and revalidate disabled",
      "404 Page Support should not cache for custom 404 page with gssp and revalidate enabled",
      "404 Page Support should not cache for custom 404 page without gssp",
      "404 Page Support shows error with getInitialProps in pages/404 build",
      "404 Page Support shows error with getInitialProps in pages/404 dev",
      "404 Page Support shows error with getServerSideProps in pages/404 build",
      "404 Page Support shows error with getServerSideProps in pages/404 dev"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/500-page/test/gsp-gssp.test.js": {
    "passed": [
      "does build 500 statically with getInitialProps in _app and getStaticProps in pages/500",
      "does not build 500 statically with no pages/500 and getServerSideProps in _error",
      "does not show error with getStaticProps in pages/500 build",
      "does not show error with getStaticProps in pages/500 dev",
      "shows error with getServerSideProps in pages/500 build",
      "shows error with getServerSideProps in pages/500 dev"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/500-page/test/index.test.js": {
    "passed": [
      "500 Page Support builds 500 statically by default with no pages/500",
      "500 Page Support builds 500 statically by default with no pages/500 and custom _error without getInitialProps",
      "500 Page Support dev mode should not error when visited directly",
      "500 Page Support dev mode should set correct status code with pages/500",
      "500 Page Support dev mode should use pages/500",
      "500 Page Support does not build 500 statically with getInitialProps in _app",
      "500 Page Support does not build 500 statically with no pages/500 and custom getInitialProps in _error",
      "500 Page Support does not build 500 statically with no pages/500 and custom getInitialProps in _error and _app",
      "500 Page Support server mode should add /500 to pages-manifest correctly",
      "500 Page Support server mode should not error when visited directly",
      "500 Page Support server mode should output 500.html during build",
      "500 Page Support server mode should set correct status code with pages/500",
      "500 Page Support server mode should use pages/500",
      "500 Page Support shows error with getInitialProps in pages/500 build",
      "500 Page Support shows error with getInitialProps in pages/500 dev"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/amp-export-validation/test/index.test.js": {
    "passed": [
      "AMP Validation on Export should have shown errors during build"
    ],
    "failed": ["AMP Validation on Export should export AMP pages"],
    "pending": [
      "AMP Validation on Export shows AMP warning without throwing error",
      "AMP Validation on Export shows warning and error when throwing error",
      "AMP Validation on Export throws error on AMP error"
    ],
    "runtimeError": false
  },
  "test/integration/amphtml-custom-optimizer/test/index.test.js": {
    "passed": [
      "AMP Custom Optimizer should build and start for dynamic page",
      "AMP Custom Optimizer should build and start for static page"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/amphtml-custom-validator/test/index.test.js": {
    "passed": ["AMP Custom Validator should build and start successfully"],
    "failed": ["AMP Custom Validator should run in dev mode successfully"],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/amphtml-fragment-style/test/index.test.js": {
    "passed": [
      "AMP Fragment Styles adds styles from fragment in AMP mode correctly"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/amphtml-ssg/test/index.test.js": {
    "passed": [
      "AMP SSG Support dev mode should load a hybrid amp page with query correctly",
      "AMP SSG Support dev mode should load a hybrid amp page without query correctly",
      "AMP SSG Support dev mode should load an amp first page correctly",
      "AMP SSG Support dev mode should load dynamic hybrid SSG/AMP page",
      "AMP SSG Support dev mode should load dynamic hybrid SSG/AMP page with query",
      "AMP SSG Support dev mode should load dynamic hybrid SSG/AMP page with trailing slash",
      "AMP SSG Support export mode should have copied SSG files correctly",
      "AMP SSG Support server mode should load a hybrid amp page with query correctly",
      "AMP SSG Support server mode should load a hybrid amp page without query correctly",
      "AMP SSG Support server mode should load an amp first page correctly",
      "AMP SSG Support server mode should load dynamic hybrid SSG/AMP page",
      "AMP SSG Support server mode should load dynamic hybrid SSG/AMP page with query",
      "AMP SSG Support server mode should load dynamic hybrid SSG/AMP page with trailing slash",
      "AMP SSG Support server mode should output prerendered files correctly during build"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/amphtml/test/index.test.js": {
    "passed": ["AMP Usage production mode should have amp optimizer in trace"],
    "failed": [
      "AMP Usage AMP dev mode should add data-ampdevmode to development script tags",
      "AMP Usage AMP dev mode should detect amp validator warning on invalid amp",
      "AMP Usage AMP dev mode should navigate from non-AMP to AMP without error",
      "AMP Usage AMP dev mode should not contain missing files warning",
      "AMP Usage AMP dev no-warn should not warn on valid amp",
      "AMP Usage production mode With AMP context should render nested AMP page with AMP hook",
      "AMP Usage production mode With AMP context should render nested normal page with AMP hook",
      "AMP Usage production mode With AMP context should render the AMP page that uses the AMP hook",
      "AMP Usage production mode With AMP context should render the normal page that uses the AMP hook",
      "AMP Usage production mode With basic AMP usage should auto import extensions",
      "AMP Usage production mode With basic AMP usage should drop custom scripts",
      "AMP Usage production mode With basic AMP usage should not drop custom amp scripts",
      "AMP Usage production mode With basic AMP usage should not output client pages for AMP only",
      "AMP Usage production mode With basic AMP usage should not output client pages for AMP only with config exported after declaration",
      "AMP Usage production mode With basic AMP usage should optimize clean",
      "AMP Usage production mode With basic AMP usage should render the page as valid AMP",
      "AMP Usage production mode With basic AMP usage should render the page without leaving render target",
      "AMP Usage production mode With basic usage should render the page",
      "AMP Usage production mode canonical amphtml should allow manually setting amphtml rel",
      "AMP Usage production mode canonical amphtml should allow manually setting canonical",
      "AMP Usage production mode canonical amphtml should not render amphtml link tag with no AMP page",
      "AMP Usage production mode canonical amphtml should remove conflicting amp tags",
      "AMP Usage production mode canonical amphtml should render a canonical regardless of amp-only status (explicit)",
      "AMP Usage production mode canonical amphtml should render amphtml from provided rel link",
      "AMP Usage production mode canonical amphtml should render link rel amphtml",
      "AMP Usage production mode canonical amphtml should render link rel amphtml with existing query",
      "AMP Usage production mode canonical amphtml should render the AMP page that uses the AMP hook",
      "AMP Usage production mode combined styles should combine style tags",
      "AMP Usage production mode combined styles should remove sourceMaps from styles",
      "AMP Usage production mode should not contain missing files warning"
    ],
    "pending": [
      "AMP Usage AMP dev mode should detect changes and refresh a hybrid AMP page",
      "AMP Usage AMP dev mode should detect changes and refresh an AMP page",
      "AMP Usage AMP dev mode should detect changes and refresh an AMP page at root pages/",
      "AMP Usage AMP dev mode should detect changes to component and refresh an AMP page",
      "AMP Usage AMP dev mode should detect the changes and display it",
      "AMP Usage AMP dev mode should not reload unless the page is edited for an AMP page"
    ],
    "runtimeError": false
  },
  "test/integration/api-body-parser/test/index.test.js": {
    "passed": [
      "should not throw if request body is already parsed in custom middleware",
      "should not throw if request's content-type is invalid",
      "should parse JSON body"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/api-catch-all/test/index.test.js": {
    "passed": [
      "API routes Server support should return data when catch-all",
      "API routes Server support should return data when catch-all with index and no trailing slash",
      "API routes Server support should return data when catch-all with index and trailing slash",
      "API routes Server support should return redirect when catch-all with index and trailing slash",
      "API routes dev support should return data when catch-all",
      "API routes dev support should return data when catch-all with index and no trailing slash",
      "API routes dev support should return data when catch-all with index and trailing slash",
      "API routes dev support should return redirect when catch-all with index and trailing slash"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/api-support/test/index.test.js": {
    "passed": [
      "API routes Server support should 404 on optional dynamic api page",
      "API routes Server support should build api routes",
      "API routes Server support should handle 204 status correctly",
      "API routes Server support should handle proxying to self correctly",
      "API routes Server support should not conflict with /api routes",
      "API routes Server support should not warn if response body is larger than 4MB with responseLimit config = false",
      "API routes Server support should parse JSON body",
      "API routes Server support should parse bigger body then 1mb",
      "API routes Server support should parse body in handler",
      "API routes Server support should parse body with config",
      "API routes Server support should parse query correctly",
      "API routes Server support should parse urlencoded body",
      "API routes Server support should prioritize a non-dynamic page",
      "API routes Server support should redirect to login",
      "API routes Server support should redirect with status code 301",
      "API routes Server support should redirect with status code 307",
      "API routes Server support should render page",
      "API routes Server support should respond from /api/auth/[...nextauth] correctly",
      "API routes Server support should return 200 on POST on pages",
      "API routes Server support should return 404 for undefined path",
      "API routes Server support should return JSON on post on API",
      "API routes Server support should return cookies object",
      "API routes Server support should return custom error",
      "API routes Server support should return data on dynamic nested route",
      "API routes Server support should return data on dynamic optional nested route",
      "API routes Server support should return data on dynamic route",
      "API routes Server support should return empty cookies object",
      "API routes Server support should return empty query object",
      "API routes Server support should return error with invalid JSON",
      "API routes Server support should set cors headers when adding cors middleware",
      "API routes Server support should show friendly error for invalid redirect",
      "API routes Server support should show friendly error in case of passing null as first argument redirect",
      "API routes Server support should show warning with next export",
      "API routes Server support should special-case empty JSON body",
      "API routes Server support should support boolean for JSON in api page",
      "API routes Server support should support etag spec",
      "API routes Server support should support null in JSON response body",
      "API routes Server support should support string in JSON response body",
      "API routes Server support should support undefined response body",
      "API routes Server support should throw Internal Server Error",
      "API routes Server support should throw Internal Server Error (async)",
      "API routes Server support should warn if response body is larger than 4MB",
      "API routes Server support should warn with configured size if response body is larger than configured size",
      "API routes Server support should work with child_process correctly",
      "API routes Server support should work with dynamic params and search string",
      "API routes Server support should work with dynamic params and search string like lambda",
      "API routes Server support should work with index api",
      "API routes Server support should work with nullable payload",
      "API routes dev support should 404 on optional dynamic api page",
      "API routes dev support should compile only server code in development",
      "API routes dev support should handle 204 status correctly",
      "API routes dev support should handle proxying to self correctly",
      "API routes dev support should not conflict with /api routes",
      "API routes dev support should not show warning if using externalResolver flag",
      "API routes dev support should not show warning when the API resolves and the response is piped",
      "API routes dev support should not warn if response body is larger than 4MB with responseLimit config = false",
      "API routes dev support should parse JSON body",
      "API routes dev support should parse bigger body then 1mb",
      "API routes dev support should parse body in handler",
      "API routes dev support should parse body with config",
      "API routes dev support should parse query correctly",
      "API routes dev support should parse urlencoded body",
      "API routes dev support should prioritize a non-dynamic page",
      "API routes dev support should redirect to login",
      "API routes dev support should redirect with status code 301",
      "API routes dev support should redirect with status code 307",
      "API routes dev support should render page",
      "API routes dev support should respond from /api/auth/[...nextauth] correctly",
      "API routes dev support should return 200 on POST on pages",
      "API routes dev support should return 404 for undefined path",
      "API routes dev support should return JSON on post on API",
      "API routes dev support should return cookies object",
      "API routes dev support should return custom error",
      "API routes dev support should return data on dynamic nested route",
      "API routes dev support should return data on dynamic optional nested route",
      "API routes dev support should return data on dynamic route",
      "API routes dev support should return empty cookies object",
      "API routes dev support should return empty query object",
      "API routes dev support should return error with invalid JSON",
      "API routes dev support should set cors headers when adding cors middleware",
      "API routes dev support should show false positive warning if not using externalResolver flag",
      "API routes dev support should show friendly error for invalid redirect",
      "API routes dev support should show friendly error in case of passing null as first argument redirect",
      "API routes dev support should show warning when the API resolves without ending the request in dev mode",
      "API routes dev support should special-case empty JSON body",
      "API routes dev support should support boolean for JSON in api page",
      "API routes dev support should support etag spec",
      "API routes dev support should support null in JSON response body",
      "API routes dev support should support string in JSON response body",
      "API routes dev support should support undefined response body",
      "API routes dev support should throw Internal Server Error",
      "API routes dev support should throw Internal Server Error (async)",
      "API routes dev support should warn if response body is larger than 4MB",
      "API routes dev support should warn with configured size if response body is larger than configured size",
      "API routes dev support should work with child_process correctly",
      "API routes dev support should work with dynamic params and search string",
      "API routes dev support should work with dynamic params and search string like lambda",
      "API routes dev support should work with index api",
      "API routes dev support should work with nullable payload"
    ],
    "failed": [],
    "pending": [
      "API routes Server support should return error exceeded body limit",
      "API routes dev support should return error exceeded body limit"
    ],
    "runtimeError": false
  },
  "test/integration/app-aspath/test/index.test.js": {
    "passed": [
      "App asPath should not have any changes in asPath after a bundle rebuild"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/app-config-asset-prefix/test/index.test.js": {
    "passed": [
      "App assetPrefix config should render correctly with assetPrefix: \"/\""
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/app-dir-export/test/config.test.ts": {
    "passed": [
      "app dir with output export (next dev / next build) should correctly emit exported assets to config.distDir",
      "app dir with output export (next dev / next build) should error when \"next export -o <dir>\" is used with config",
      "app dir with output export (next dev / next build) should error when no config.output detected for next export",
      "app dir with output export (next dev / next build) should throw when exportPathMap configured",
      "app dir with output export (next dev / next build) should warn about \"next export\" is no longer needed with config"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/app-dir-export/test/dynamic-missing-gsp-dev.test.ts": {
    "passed": [],
    "failed": [
      "should error when client component has generateStaticParams",
      "should error when dynamic route is missing generateStaticParams"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/app-dir-export/test/dynamic-missing-gsp-prod.test.ts": {
    "passed": [],
    "failed": [
      "should error when client component has generateStaticParams",
      "should error when dynamic route is missing generateStaticParams"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/app-dir-export/test/dynamicapiroute-dev.test.ts": {
    "passed": [],
    "failed": [
      "should work in dev with dynamicApiRoute 'error'",
      "should work in dev with dynamicApiRoute 'force-dynamic'",
      "should work in dev with dynamicApiRoute 'force-static'",
      "should work in dev with dynamicApiRoute undefined"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/app-dir-export/test/dynamicapiroute-prod.test.ts": {
    "passed": [],
    "failed": [
      "should work in prod with dynamicApiRoute 'error'",
      "should work in prod with dynamicApiRoute 'force-dynamic'",
      "should work in prod with dynamicApiRoute 'force-static'",
      "should work in prod with dynamicApiRoute undefined"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/app-dir-export/test/dynamicpage-dev.test.ts": {
    "passed": ["should work in dev with dynamicPage 'force-dynamic'"],
    "failed": [
      "should work in dev with dynamicPage 'error'",
      "should work in dev with dynamicPage 'force-static'",
      "should work in dev with dynamicPage undefined"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/app-dir-export/test/dynamicpage-prod.test.ts": {
    "passed": ["should work in prod with dynamicPage 'force-dynamic'"],
    "failed": [
      "should work in prod with dynamicPage $dynamicPage",
      "should work in prod with dynamicPage 'force-static'",
      "should work in prod with dynamicPage undefined"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/app-dir-export/test/start.test.ts": {
    "passed": [
      "app dir with output export (next start) should error during next start with output export"
    ],
    "failed": [
      "app dir with output export (next start) should warn during next start with output standalone"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/app-dir-export/test/trailing-slash-dev.test.ts": {
    "passed": [],
    "failed": [
      "should work in dev with trailingSlash 'false'",
      "should work in dev with trailingSlash 'true'"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/app-dir-export/test/trailing-slash-start.test.ts": {
    "passed": [],
    "failed": [
      "should work in prod with trailingSlash 'false'",
      "should work in prod with trailingSlash 'true'"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/app-document-add-hmr/test/index.test.js": {
    "passed": [],
    "failed": [],
    "pending": [
      "_app/_document add HMR should HMR when _app is added",
      "_app/_document add HMR should HMR when _document is added"
    ],
    "runtimeError": false
  },
  "test/integration/app-document-import-order/test/index.test.js": {
    "passed": [
      "Root components import order root components should be imported in this order _document > _app > page in order to respect side effects",
      "on dev server root components should be imported in this order _document > _app > page in order to respect side effects"
    ],
    "failed": [
      "Root components import order _app chunks should be attached to de dom before page chunks",
      "on dev server _app chunks should be attached to de dom before page chunks"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/app-document-remove-hmr/test/index.test.js": {
    "passed": [
      "_app removal HMR should HMR when _app is removed",
      "_app removal HMR should HMR when _document is removed"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/app-document-style-fragment/test/index.test.js": {
    "passed": [
      "Custom Document Fragment Styles correctly adds styles from fragment styles key"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/app-document/test/index.test.js": {
    "passed": [],
    "failed": [
      "Document and App Client side It should share module state with pages",
      "Document and App Client side should detect the changes to pages/_app.js and display it",
      "Document and App Client side should detect the changes to pages/_document.js and display it",
      "Document and App Client side should keep state between page navigations",
      "Document and App Rendering via HTTP _app It should share module state with pages",
      "Document and App Rendering via HTTP _app It should show valid error when thrown in _app getInitialProps",
      "Document and App Rendering via HTTP _app It shows a custom tag",
      "Document and App Rendering via HTTP _document Document.getInitialProps returns html prop representing app shell",
      "Document and App Rendering via HTTP _document It adds a timestamp to link tags with preload attribute to invalidate the cache (DEV only)",
      "Document and App Rendering via HTTP _document It adds crossOrigin to all scripts and preload links",
      "Document and App Rendering via HTTP _document It adds nonces to all scripts and preload links",
      "Document and App Rendering via HTTP _document It renders ctx.renderPage with enhanceApp and enhanceComponent correctly",
      "Document and App Rendering via HTTP _document It renders ctx.renderPage with enhanceApp correctly",
      "Document and App Rendering via HTTP _document It renders ctx.renderPage with enhanceComponent correctly",
      "Document and App Rendering via HTTP _document It renders ctx.renderPage with enhancer correctly",
      "Document and App Rendering via HTTP _document should include required elements in rendered html",
      "Document and App With CSP enabled should load inline script by hash",
      "Document and App With CSP enabled should load inline script by nonce",
      "Document and App should not have any missing key warnings"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/app-dynamic-error/test/index.test.ts": {
    "passed": [
      "throws an error when prerendering a page with config dynamic error"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/app-functional/test/index.test.js": {
    "passed": [],
    "failed": ["Document and App should not have any missing key warnings"],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/app-tree/test/index.test.js": {
    "passed": [
      "AppTree dev mode should pass AppTree to NextPageContext",
      "AppTree dev mode should provide router context in AppTree on CSR",
      "AppTree dev mode should provide router context in AppTree on SSR",
      "AppTree production mode should pass AppTree to NextPageContext",
      "AppTree production mode should provide router context in AppTree on CSR",
      "AppTree production mode should provide router context in AppTree on SSR"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/app-types/app-types.test.js": {
    "passed": [],
    "failed": [
      "app type checking production mode should generate route types correctly and report link error",
      "app type checking production mode should generate route types correctly and report router API errors",
      "app type checking production mode should type check invalid entry exports"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/async-modules/test/index.test.js": {
    "passed": [],
    "failed": [
      "Async modules dev mode can render async 404 pages",
      "Async modules dev mode csr async page modules",
      "Async modules dev mode ssr async page modules",
      "Async modules dev mode works on async api routes",
      "Async modules dev mode works with getServerSideProps",
      "Async modules dev mode works with getStaticProps",
      "Async modules production mode can render async 404 pages",
      "Async modules production mode can render async error page",
      "Async modules production mode csr async page modules",
      "Async modules production mode ssr async page modules",
      "Async modules production mode works on async api routes",
      "Async modules production mode works with getServerSideProps",
      "Async modules production mode works with getStaticProps"
    ],
    "pending": [
      "Async modules dev mode can render async AMP pages",
      "Async modules dev mode can render async error page",
      "Async modules production mode can render async AMP pages"
    ],
    "runtimeError": false
  },
  "test/integration/auto-export-error-bail/test/index.test.js": {
    "passed": [
      "Auto Export _error bail server mode should not opt-out of auto static optimization from invalid _error"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/auto-export-query-error/test/index.test.js": {
    "passed": [
      "Auto Export server mode should show warning for query provided for auto exported page correctly"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/auto-export/test/index.test.js": {
    "passed": [
      "Auto Export dev Refreshes query on mount",
      "Auto Export dev Supports commonjs 1",
      "Auto Export dev Supports commonjs 2",
      "Auto Export dev should include error link when hydration error does occur",
      "Auto Export dev should not replace URL with page name while asPath is delayed",
      "Auto Export dev should not show hydration warning from mismatching asPath",
      "Auto Export dev should update asPath after mount",
      "Auto Export production Refreshes query on mount",
      "Auto Export production Supports commonjs 1",
      "Auto Export production Supports commonjs 2",
      "Auto Export production should not replace URL with page name while asPath is delayed",
      "Auto Export production should update asPath after mount"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/babel-custom/test/index.test.js": {
    "passed": [],
    "failed": [
      "Babel should allow babelrc JSON5 syntax",
      "Babel should allow setting babelrc env",
      "Babel should allow setting targets to a string",
      "Babel should allow setting targets.browsers"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/babel/test/index.test.js": {
    "passed": [],
    "failed": [
      "Babel Rendering via HTTP Should compile a page with flowtype correctly"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/basepath-root-catch-all/test/index.test.js": {
    "passed": [],
    "failed": [
      "dev mode should use correct data URL for root catch-all",
      "production mode should use correct data URL for root catch-all"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/bigint/test/index.test.js": {
    "passed": [
      "bigint API route support dev mode should return 200",
      "bigint API route support dev mode should return the BigInt result text",
      "bigint API route support server mode should return 200",
      "bigint API route support server mode should return the BigInt result text"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/broken-webpack-plugin/test/index.test.js": {
    "passed": [],
    "failed": [
      "Handles a broken webpack plugin (precompile) should render error correctly"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/build-indicator/test/index.test.js": {
    "passed": [
      "Build Activity Indicator Disabled with next.config.js Does not add the build indicator container",
      "Build Activity Indicator should validate buildActivityPosition config"
    ],
    "failed": [
      "Build Activity Indicator Enabled Adds the build indicator container",
      "Build Activity Indicator Enabled Shows build indicator when page is built from modifying",
      "Build Activity Indicator Enabled Shows the build indicator when a page is built during navigation"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/build-output/test/index.test.js": {
    "passed": [
      "Build Output Basic Application Output (experimental: {\"gzipSize\":false}) should not emit extracted comments",
      "Build Output Basic Application Output (experimental: {\"gzipSize\":false}) should print duration when rendering or get static props takes long",
      "Build Output Basic Application Output (experimental: {}) should not emit extracted comments",
      "Build Output Basic Application Output (experimental: {}) should print duration when rendering or get static props takes long",
      "Build Output Custom Static Error Output should not specify /404 as lambda when static"
    ],
    "failed": [
      "Build Output Basic Application Output (experimental: {\"gzipSize\":false}) should not include internal pages",
      "Build Output Basic Application Output (experimental: {}) should not include internal pages",
      "Build Output Custom App Output should not include custom error",
      "Build Output Custom Error Output should not include custom app",
      "Build Output With AMP Output should not include custom error"
    ],
    "pending": [
      "Build Output Basic Application Output (experimental: {\"gzipSize\":false}) should not deviate from snapshot",
      "Build Output Basic Application Output (experimental: {}) should not deviate from snapshot"
    ],
    "runtimeError": false
  },
  "test/integration/build-trace-extra-entries-turbo/test/index.test.js": {
    "passed": [],
    "failed": [
      "build trace with extra entries should build and trace correctly"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/build-trace-extra-entries/test/index.test.js": {
    "passed": [],
    "failed": [
      "build trace with extra entries should build and trace correctly"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/build-warnings/test/index.test.js": {
    "passed": [
      "Build warnings should not shown warning about minification withou any modification",
      "Build warnings should not warn about missing cache in non-CI",
      "Build warnings should not warn about missing cache on supported platforms",
      "Build warnings should warn about missing cache in CI"
    ],
    "failed": [
      "Build warnings should shown warning about minification for minimize",
      "Build warnings should shown warning about minification for minimizer"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/catches-missing-getStaticProps/test/index.test.js": {
    "passed": [
      "Catches Missing getStaticProps should catch it in dev mode",
      "Catches Missing getStaticProps should catch it in server build mode"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/chunking/test/index.test.js": {
    "passed": [],
    "failed": [
      "Chunking Serving should hydrate with aggressive chunking",
      "Chunking Serving should load chunks when navigating",
      "Chunking should create a framework chunk",
      "Chunking should execute the build manifest",
      "Chunking should not create a commons chunk",
      "Chunking should not create a lib chunk for react or react-dom",
      "Chunking should not include more than one instance of react-dom",
      "Chunking should not preload the build manifest",
      "Chunking should use all url friendly names"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/clean-distdir/test/index.test.js": {
    "passed": [
      "Cleaning distDir disabled write should not clean up .next before build start",
      "Cleaning distDir server mode should clean up .next before build start"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/cli/test/index.test.js": {
    "passed": [
      "CLI Usage build --help",
      "CLI Usage build -h",
      "CLI Usage build invalid directory",
      "CLI Usage build should exit when SIGINT is signalled",
      "CLI Usage build should exit when SIGTERM is signalled",
      "CLI Usage build should not throw UnhandledPromiseRejectionWarning",
      "CLI Usage build should warn when unknown argument provided",
      "CLI Usage dev --experimental-https",
      "CLI Usage dev --experimental-https with provided key/cert",
      "CLI Usage dev --help",
      "CLI Usage dev --hostname",
      "CLI Usage dev --port",
      "CLI Usage dev --port 0",
      "CLI Usage dev -H",
      "CLI Usage dev -h",
      "CLI Usage dev -p",
      "CLI Usage dev NODE_OPTIONS='--inspect'",
      "CLI Usage dev PORT=0",
      "CLI Usage dev custom directory",
      "CLI Usage dev invalid directory",
      "CLI Usage dev should exit when SIGINT is signalled",
      "CLI Usage dev should exit when SIGTERM is signalled",
      "CLI Usage dev should format IPv6 addresses correctly",
      "CLI Usage dev should not throw UnhandledPromiseRejectionWarning",
      "CLI Usage dev should warn when unknown argument provided",
      "CLI Usage export --help",
      "CLI Usage export -h",
      "CLI Usage export invalid directory",
      "CLI Usage export should not throw UnhandledPromiseRejectionWarning",
      "CLI Usage export should warn when unknown argument provided",
      "CLI Usage info --help",
      "CLI Usage info -h",
      "CLI Usage info should print output",
      "CLI Usage info should print output with next.config.mjs",
      "CLI Usage no command --help",
      "CLI Usage no command --version",
      "CLI Usage no command -h",
      "CLI Usage no command -v",
      "CLI Usage no command detects command typos",
      "CLI Usage no command invalid directory",
      "CLI Usage start --help",
      "CLI Usage start --keepAliveTimeout Infinity",
      "CLI Usage start --keepAliveTimeout happy path",
      "CLI Usage start --keepAliveTimeout negative number",
      "CLI Usage start --keepAliveTimeout string arg",
      "CLI Usage start -h",
      "CLI Usage start duplicate sass deps",
      "CLI Usage start invalid directory",
      "CLI Usage start should exit when SIGINT is signalled",
      "CLI Usage start should exit when SIGTERM is signalled",
      "CLI Usage start should format IPv6 addresses correctly",
      "CLI Usage start should not start on a port out of range",
      "CLI Usage start should not start on a reserved port",
      "CLI Usage start should not throw UnhandledPromiseRejectionWarning",
      "CLI Usage start should warn when unknown argument provided",
      "CLI Usage telemetry --help",
      "CLI Usage telemetry -h",
      "CLI Usage telemetry should not throw UnhandledPromiseRejectionWarning",
      "CLI Usage telemetry should warn when unknown argument provided"
    ],
    "failed": ["CLI Usage dev -p conflict", "CLI Usage dev -p reserved"],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/client-404/test/index.test.js": {
    "passed": [
      "Client 404 dev mode Client Navigation 404 should hard navigate to URL on failing to load bundle",
      "Client 404 dev mode Client Navigation 404 should show 404 upon client replacestate should navigate the page",
      "Client 404 production mode Client Navigation 404 should hard navigate to URL on failing to load bundle",
      "Client 404 production mode Client Navigation 404 should hard navigate to URL on failing to load missing bundle",
      "Client 404 production mode Client Navigation 404 should show 404 upon client replacestate should navigate the page"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/client-navigation-a11y/test/index.test.js": {
    "passed": [
      "Client Navigation accessibility <RouteAnnouncer /> There is a title and a h1 tag has the innerText equal to the value of h1",
      "Client Navigation accessibility <RouteAnnouncer /> There is a title but no h1 tag has the innerText equal to the value of document.title",
      "Client Navigation accessibility <RouteAnnouncer /> There is no title and no h1 tag has the innerText equal to the value of the pathname",
      "Client Navigation accessibility <RouteAnnouncer /> There is no title but a h1 tag has the innerText equal to the value of h1",
      "Client Navigation accessibility <RouteAnnouncer /> has aria-live=\"assertive\" and role=\"alert\"",
      "Client Navigation accessibility <RouteAnnouncer /> should not have the initial route announced"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/client-shallow-routing/test/index.test.js": {
    "passed": [
      "Client Shallow Routing dev mode should not shallowly navigate back in history when current page was not shallow",
      "Client Shallow Routing dev mode should not shallowly navigate forwards in history when current page was not shallow",
      "Client Shallow Routing production mode should not shallowly navigate back in history when current page was not shallow",
      "Client Shallow Routing production mode should not shallowly navigate forwards in history when current page was not shallow"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/compression/test/index.test.js": {
    "passed": ["Compression should compress responses by default"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/config-devtool-dev/test/index.test.js": {
    "passed": [],
    "failed": [
      "devtool set in development mode in next config should warn and revert when a devtool is set in development mode"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/config-experimental-warning/test/index.test.js": {
    "passed": [
      "Config Experimental Warning should not show warning with config from object",
      "Config Experimental Warning should not show warning with default config from function",
      "Config Experimental Warning should not show warning with default value",
      "Config Experimental Warning should show warning with config from function with experimental",
      "Config Experimental Warning should show warning with config from object with experimental"
    ],
    "failed": [
      "Config Experimental Warning should show warning for dropped experimental.appDir option",
      "Config Experimental Warning should show warning with config from object with experimental and multiple keys"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/config-mjs/test/index.test.js": {
    "passed": [],
    "failed": [
      "Configuration correctly imports a package that defines `module` but no `main` in package.json",
      "Configuration renders public config on the server only",
      "Configuration renders server config on the server only",
      "Configuration renders the build id in development mode",
      "Configuration should disable X-Powered-By header support",
      "Configuration should have config available on the client"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/config-output-export/test/index.test.ts": {
    "passed": [
      "config-output-export should error with \"headers\" config",
      "config-output-export should error with \"i18n\" config",
      "config-output-export should error with \"redirects\" config",
      "config-output-export should error with \"rewrites\" config",
      "config-output-export should error with api routes function",
      "config-output-export should error with getServerSideProps without fallback",
      "config-output-export should error with getStaticPaths and fallback blocking",
      "config-output-export should error with getStaticPaths and fallback true",
      "config-output-export should error with getStaticProps and revalidate 10 seconds (ISR)",
      "config-output-export should error with middleware function",
      "config-output-export should work with getStaticPaths and fallback false",
      "config-output-export should work with getStaticProps and revalidate false",
      "config-output-export should work with getStaticProps and without revalidate",
      "config-output-export should work with static homepage"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/config-promise-error/test/index.test.js": {
    "passed": [],
    "failed": [
      "Promise in next config should warn when a promise is returned on webpack"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/config-resolve-alias/test/index.test.js": {
    "passed": [],
    "failed": [
      "Invalid resolve alias should show relevant error when webpack resolve alias is wrong"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/config-syntax-error/test/index.test.js": {
    "passed": [
      "Invalid config syntax should error when next.config.js contains syntax error",
      "Invalid config syntax should error when next.config.mjs contains syntax error"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/config-validation/test/index.test.ts": {
    "passed": [
      "next.config.js validation it should validate correctly for invalid config types",
      "next.config.js validation it should validate correctly for unexpected config fields"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/config/test/index.test.js": {
    "passed": [],
    "failed": [
      "Configuration correctly imports a package that defines `module` but no `main` in package.json",
      "Configuration renders public config on the server only",
      "Configuration renders server config on the server only",
      "Configuration renders the build id in development mode",
      "Configuration should disable X-Powered-By header support",
      "Configuration should have config available on the client"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/conflicting-public-file-page/test/index.test.js": {
    "passed": [
      "Errors on conflict between public file and page file Throws error during build",
      "Errors on conflict between public file and page file Throws error during development"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/conflicting-ssg-paths/test/index.test.js": {
    "passed": [
      "Conflicting SSG paths should show proper error when a dynamic SSG route conflicts with SSR route",
      "Conflicting SSG paths should show proper error when a dynamic SSG route conflicts with normal route",
      "Conflicting SSG paths should show proper error when two dynamic SSG routes have conflicting paths"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/create-next-app/index.test.ts": {
    "passed": [
      "create next app empty directory",
      "create next app invalid example name",
      "create next app non-empty directory",
      "create next app should allow an example named default",
      "create next app should allow example with GitHub URL",
      "create next app should allow example with GitHub URL and example-path",
      "create next app should allow example with GitHub URL with trailing slash",
      "create next app should ask the user for a name for the project if none supplied",
      "create next app should create a project in the current directory",
      "create next app should exit if example flag is empty",
      "create next app should exit if the folder is not writable",
      "create next app should fall back to default template",
      "create next app should use --example-path over the file path in the GitHub URL",
      "create next app valid example",
      "create next app valid example without package.json"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/create-next-app/package-manager.test.ts": {
    "passed": [
      "should infer Bun as the package manager",
      "should infer Bun as the package manager with example",
      "should infer npm as the package manager",
      "should infer npm as the package manager with example",
      "should infer pnpm as the package manager",
      "should infer pnpm as the package manager with example",
      "should infer yarn as the package manager",
      "should infer yarn as the package manager with example",
      "should use Bun as the package manager on supplying --use-bun with example",
      "should use Yarn as the package manager on supplying --use-yarn",
      "should use Yarn as the package manager on supplying --use-yarn with example",
      "should use npm as the package manager on supplying --use-npm",
      "should use npm as the package manager on supplying --use-npm with example",
      "should use pnpm as the package manager on supplying --use-pnpm",
      "should use pnpm as the package manager on supplying --use-pnpm with example"
    ],
    "failed": ["should use Bun as the package manager on supplying --use-bun"],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/create-next-app/templates-app.test.ts": {
    "passed": [
      "create-next-app --app should create JS appDir projects with --js",
      "create-next-app --app should create JS appDir projects with --js --src-dir",
      "create-next-app --app should create TS appDir projects with --ts",
      "create-next-app --app should create Tailwind CSS appDir projects with --tailwind"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/create-next-app/templates-pages.test.ts": {
    "passed": [
      "create-next-app templates should create JS projects with --js, --javascript",
      "create-next-app templates should create JS projects with --js, --javascript --src-dir",
      "create-next-app templates should create TS projects with --ts, --typescript",
      "create-next-app templates should create TS projects with --ts, --typescript --src-dir",
      "create-next-app templates should prompt user to choose if --import-alias is not provided",
      "create-next-app templates should prompt user to choose if --tailwind or --no-tailwind is not provided",
      "create-next-app templates should prompt user to choose if --ts or --js is not provided",
      "create-next-app templates should work with --tailwind and --src together"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/critical-css/test/index.test.js": {
    "passed": [
      "CSS optimization for SSR apps should have all CSS files in manifest",
      "CSS optimization for SSR apps should not inline non-critical css"
    ],
    "failed": [
      "CSS optimization for SSR apps should inline critical CSS",
      "CSS optimization for SSR apps should inline critical CSS (dynamic)"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/css-client-nav/test/index.test.js": {
    "passed": [
      "CSS Module client-side navigation dev should be able to client-side navigate from blue to red",
      "CSS Module client-side navigation dev should be able to client-side navigate from none to blue",
      "CSS Module client-side navigation dev should be able to client-side navigate from none to red",
      "CSS Module client-side navigation dev should be able to client-side navigate from red to blue",
      "CSS Module client-side navigation production should time out and hard navigate for stalled CSS request"
    ],
    "failed": [
      "CSS Module client-side navigation production should be able to client-side navigate from blue to red",
      "CSS Module client-side navigation production should be able to client-side navigate from none to blue",
      "CSS Module client-side navigation production should be able to client-side navigate from none to red",
      "CSS Module client-side navigation production should be able to client-side navigate from red to blue"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/css-customization/test/index.test.js": {
    "passed": [],
    "failed": [
      "Bad CSS Customization Array (1) should fail the build",
      "Bad CSS Customization Array (2) should fail the build",
      "Bad CSS Customization Array (3) should fail the build",
      "Bad CSS Customization Array (4) should fail the build",
      "Bad CSS Customization Array (5) should fail the build",
      "Bad CSS Customization Array (6) should fail the build",
      "Bad CSS Customization Array (7) should fail the build",
      "Bad CSS Customization Array (8) should fail the build",
      "Bad CSS Customization Function should fail the build",
      "Bad CSS Customization should compile successfully",
      "Bad CSS Customization should've compiled and prefixed",
      "Bad CSS Customization should've emitted a source map",
      "CSS Customization Array should compile successfully",
      "CSS Customization Array should've compiled and prefixed",
      "CSS Customization Array should've emitted a source map",
      "CSS Customization custom loader should compile successfully",
      "CSS Customization custom loader should've applied style",
      "CSS Customization should compile successfully",
      "CSS Customization should've compiled and prefixed",
      "CSS Customization should've emitted a source map"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/css-features/test/browserslist.test.js": {
    "passed": [],
    "failed": [
      "Browserslist: New should have compiled successfully",
      "Browserslist: New should've emitted a single CSS file",
      "Browserslist: Old should have compiled successfully",
      "Browserslist: Old should've emitted a single CSS file"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/css-features/test/css-modules.test.js": {
    "passed": [],
    "failed": [
      "CSS Modules: Import Exports should have compiled successfully",
      "CSS Modules: Import Exports should've emitted a single CSS file",
      "CSS Modules: Import Global CSS should have compiled successfully",
      "CSS Modules: Import Global CSS should've emitted a single CSS file",
      "CSS Modules: Importing Invalid Global CSS should fail to build",
      "Custom Properties: Fail for :root {} in CSS Modules should fail to build",
      "Custom Properties: Fail for global element in CSS Modules should fail to build"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/css-features/test/index.test.js": {
    "passed": [],
    "failed": [
      "Custom Properties: Pass-Through IE11 should have compiled successfully",
      "Custom Properties: Pass-Through IE11 should've emitted a single CSS file",
      "Custom Properties: Pass-Through Modern should have compiled successfully",
      "Custom Properties: Pass-Through Modern should've emitted a single CSS file",
      "Inline Comments: Minify should have compiled successfully",
      "Inline Comments: Minify should've emitted a single CSS file"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/css-minify/test/index.test.js": {
    "passed": [],
    "failed": ["css-minify should minify correctly by removing whitespace"],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/css-modules/test/index.test.js": {
    "passed": [
      "Can hot reload CSS Module without losing state should update CSS color without remounting <input>",
      "Catch-all Route CSS Module Usage should apply styles correctly",
      "Dynamic Route CSS Module Usage should apply styles correctly",
      "Has CSS Module in computed styles in Development should have CSS for page",
      "Has CSS Module in computed styles in Production should have CSS for page"
    ],
    "failed": [
      "3rd Party CSS Module Support should have compiled successfully",
      "3rd Party CSS Module Support should've emitted a single CSS file",
      "3rd Party CSS Module Support should've injected the CSS on server render",
      "Basic CSS Module Support should have compiled successfully",
      "Basic CSS Module Support should've emitted a single CSS file",
      "Basic CSS Module Support should've injected the CSS on server render",
      "CSS Module Composes Usage (Basic) should have compiled successfully",
      "CSS Module Composes Usage (Basic) should've emitted a single CSS file",
      "CSS Module Composes Usage (External) should have compiled successfully",
      "CSS Module Composes Usage (External) should've emitted a single CSS file",
      "Catch-all Route CSS Module Usage should have compiled successfully",
      "Catch-all Route CSS Module Usage should've emitted a single CSS file",
      "Dynamic Route CSS Module Usage should have compiled successfully",
      "Dynamic Route CSS Module Usage should've emitted a single CSS file",
      "Has CSS Module in computed styles in Production should have compiled successfully",
      "Valid CSS Module Usage from within node_modules should have compiled successfully",
      "Valid CSS Module Usage from within node_modules should've emitted a single CSS file",
      "Valid CSS Module Usage from within node_modules should've prerendered with relevant data",
      "Valid Nested CSS Module Usage from within node_modules should have compiled successfully",
      "Valid Nested CSS Module Usage from within node_modules should've emitted a single CSS file",
      "Valid Nested CSS Module Usage from within node_modules should've prerendered with relevant data"
    ],
    "pending": [
      "Invalid CSS Module Usage in node_modules should fail to build",
      "Invalid Global CSS Module Usage in node_modules should fail to build"
    ],
    "runtimeError": false
  },
  "test/integration/css/test/basic-global-support.test.js": {
    "passed": [],
    "failed": [
      "Basic Global Support should compile successfully",
      "Basic Global Support should've emitted a single CSS file",
      "Basic Global Support with special characters in path should compile successfully",
      "Basic Global Support with special characters in path should've emitted a single CSS file",
      "Basic Global Support with src/ dir should compile successfully",
      "Basic Global Support with src/ dir should've emitted a single CSS file",
      "CSS URL via `file-loader` and asset prefix (1) should compile successfully",
      "CSS URL via `file-loader` and asset prefix (1) should've emitted expected files",
      "CSS URL via `file-loader` and asset prefix (2) should compile successfully",
      "CSS URL via `file-loader` and asset prefix (2) should've emitted expected files",
      "CSS URL via `file-loader` should compile successfully",
      "CSS URL via `file-loader` should've emitted expected files",
      "Multi Global Support (reversed) should compile successfully",
      "Multi Global Support (reversed) should've emitted a single CSS file",
      "Multi Global Support should compile successfully",
      "Multi Global Support should've emitted a single CSS file",
      "Nested @import() Global Support should compile successfully",
      "Nested @import() Global Support should've emitted a single CSS file"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/css/test/css-and-styled-jsx.test.js": {
    "passed": [
      "Ordering with styled-jsx (dev) should have the correct color (css ordering)",
      "Ordering with styled-jsx (prod) should have the correct color (css ordering)"
    ],
    "failed": [
      "Ordering with styled-jsx (prod) should have compiled successfully"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/css/test/css-compilation.test.js": {
    "passed": [],
    "failed": [
      "CSS Property Ordering should have compiled successfully",
      "CSS Property Ordering should have the border width (property ordering)",
      "CSS Support CSS Compilation and Prefixing should compile successfully",
      "CSS Support CSS Compilation and Prefixing should've compiled and prefixed",
      "CSS Support CSS Compilation and Prefixing should've emitted a source map",
      "CSS Support Good CSS Import from node_modules should compile successfully",
      "CSS Support Good CSS Import from node_modules should've emitted a single CSS file",
      "CSS Support Good Nested CSS Import from node_modules should compile successfully",
      "CSS Support Good Nested CSS Import from node_modules should've emitted a single CSS file",
      "CSS Support Has CSS in computed styles in Production should have CSS for page",
      "CSS Support Has CSS in computed styles in Production should have compiled successfully",
      "CSS Support Has CSS in computed styles in Production should've preloaded the CSS file and injected it in <head>",
      "CSS Support React Lifecyce Order (production) should have compiled successfully",
      "CSS Support React Lifecyce Order (production) should have the correct color on mount after navigation"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/css/test/css-rendering.test.js": {
    "passed": [
      "CSS Support CSS Import from node_modules should fail the build",
      "CSS Support CSS page transition inject <style> with nonce so it works with CSP header Production Mode should have correct color on index page (on hover)",
      "CSS Support CSS page transition inject <style> with nonce so it works with CSP header Production Mode should have correct color on index page (on load)",
      "CSS Support CSS page transition inject <style> with nonce so it works with CSP header Production Mode should have correct color on index page (on nav from index)",
      "CSS Support CSS page transition inject <style> with nonce so it works with CSP header Production Mode should have correct color on index page (on nav from other)",
      "CSS Support CSS page transition inject <style> with nonce so it works with CSP header Production Mode should not change color on hover",
      "CSS Support Page hydrates with CSS and not waiting on dependencies Production Mode should hydrate black without dependencies manifest",
      "CSS Support Page reload on CSS missing Production Mode should fall back to server-side transition on missing CSS"
    ],
    "failed": [
      "CSS Support CSS Cleanup on Render Failure Production Mode not have intermediary page styles on error rendering",
      "CSS Support CSS page transition inject <style> with nonce so it works with CSP header Production Mode should have correct CSS injection order",
      "CSS Support Page hydrates with CSS and not waiting on dependencies Production Mode should hydrate red without dependencies manifest",
      "CSS Support Page hydrates with CSS and not waiting on dependencies Production Mode should route from black to red without dependencies"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/css/test/dev-css-handling.test.js": {
    "passed": [
      "Body is not hidden when broken in Development should have body visible",
      "Body is not hidden when unused in Development should have body visible",
      "Has CSS in computed styles in Development should have CSS for page",
      "React Lifecyce Order (dev) should have the correct color on mount after navigation"
    ],
    "failed": [
      "Can hot reload CSS without losing state should update CSS color without remounting <input>"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/css/test/valid-invalid-css.test.js": {
    "passed": [],
    "failed": [
      "Invalid CSS in _document should fail to build",
      "Invalid Global CSS should fail to build",
      "Invalid Global CSS with Custom App should fail to build",
      "Valid Global CSS from npm should compile successfully",
      "Valid Global CSS from npm should've emitted a single CSS file",
      "Valid and Invalid Global CSS with Custom App should fail to build"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/custom-error-page-exception/test/index.test.js": {
    "passed": [],
    "failed": [],
    "pending": [
      "Custom error page exception should handle errors from _error render"
    ],
    "runtimeError": false
  },
  "test/integration/custom-error/test/index.test.js": {
    "passed": [
      "Custom _error dev mode 1 should not warn with /_error and /404 when rendering error first",
      "Custom _error dev mode 2 should not warn with /_error and /404",
      "Custom _error dev mode 2 should warn on custom /_error without custom /404",
      "Custom _error production mode renders custom _error successfully",
      "Custom _error production mode should not contain /_error in build output"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/custom-page-extension/test/index.test.js": {
    "passed": [],
    "failed": [
      "Custom page extension dev mode should work dynamic page",
      "Custom page extension dev mode should work with normal page",
      "Custom page extension production mode should work dynamic page",
      "Custom page extension production mode should work with normal page"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/custom-routes-catchall/test/index.test.js": {
    "passed": [
      "Custom routes dev mode should rewrite and render page correctly",
      "Custom routes dev mode should rewrite to /_next/static correctly",
      "Custom routes dev mode should rewrite to public file correctly",
      "Custom routes dev mode should rewrite to public/static correctly",
      "Custom routes production mode should rewrite and render page correctly",
      "Custom routes production mode should rewrite to /_next/static correctly",
      "Custom routes production mode should rewrite to public file correctly",
      "Custom routes production mode should rewrite to public/static correctly"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/custom-routes-i18n-index-redirect/test/index.test.js": {
    "passed": [
      "Custom routes i18n with index redirect dev mode should respond to default locale redirects correctly for index redirect",
      "Custom routes i18n with index redirect production mode should respond to default locale redirects correctly for index redirect"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/custom-routes-i18n/test/index.test.js": {
    "passed": [
      "Custom routes i18n dev mode should respond to default locale redirects correctly",
      "Custom routes i18n dev mode should rewrite correctly",
      "Custom routes i18n dev mode should rewrite index routes correctly",
      "Custom routes i18n production mode should respond to default locale redirects correctly",
      "Custom routes i18n production mode should rewrite correctly",
      "Custom routes i18n production mode should rewrite index routes correctly"
    ],
    "failed": [
      "Custom routes i18n dev mode should navigate on the client with rewrites correctly",
      "Custom routes i18n production mode should navigate on the client with rewrites correctly"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/custom-server-types/test/index.test.js": {
    "passed": ["Custom Server TypeScript should build server.ts correctly"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/custom-server/test/index.test.js": {
    "passed": [],
    "failed": [],
    "pending": [
      "Custom Server using HTTP Error when rendering without starting slash should warn in dev mode",
      "Custom Server using HTTP Error when rendering without starting slash should warn in production mode",
      "Custom Server using HTTP HMR with custom server Should support HMR when rendering with /index pathname",
      "Custom Server using HTTP compression handling should handle compression for route /",
      "Custom Server using HTTP compression handling should handle compression for route /no-query",
      "Custom Server using HTTP unhandled rejection stderr should include error message and stack trace",
      "Custom Server using HTTP with a custom fetch polyfill should serve internal file from render",
      "Custom Server using HTTP with dynamic assetPrefix should contain customServer in NEXT_DATA",
      "Custom Server using HTTP with dynamic assetPrefix should handle custom urls with requests handler",
      "Custom Server using HTTP with dynamic assetPrefix should handle null assetPrefix accordingly",
      "Custom Server using HTTP with dynamic assetPrefix should handle render with undefined query",
      "Custom Server using HTTP with dynamic assetPrefix should render nested index",
      "Custom Server using HTTP with dynamic assetPrefix should serve internal file from render",
      "Custom Server using HTTP with dynamic assetPrefix should set the assetPrefix dynamically",
      "Custom Server using HTTP with dynamic assetPrefix should set the assetPrefix to a given request",
      "Custom Server using HTTP with generateEtags disabled response does not include etag header",
      "Custom Server using HTTP with generateEtags enabled response includes etag header",
      "Custom Server using HTTP with middleware $title should read the expected url protocol in middleware",
      "Custom Server using HTTPS Error when rendering without starting slash should warn in dev mode",
      "Custom Server using HTTPS Error when rendering without starting slash should warn in production mode",
      "Custom Server using HTTPS compression handling should handle compression for route /",
      "Custom Server using HTTPS compression handling should handle compression for route /no-query",
      "Custom Server using HTTPS unhandled rejection stderr should include error message and stack trace",
      "Custom Server using HTTPS with a custom fetch polyfill should serve internal file from render",
      "Custom Server using HTTPS with dynamic assetPrefix should contain customServer in NEXT_DATA",
      "Custom Server using HTTPS with dynamic assetPrefix should handle custom urls with requests handler",
      "Custom Server using HTTPS with dynamic assetPrefix should handle null assetPrefix accordingly",
      "Custom Server using HTTPS with dynamic assetPrefix should handle render with undefined query",
      "Custom Server using HTTPS with dynamic assetPrefix should render nested index",
      "Custom Server using HTTPS with dynamic assetPrefix should serve internal file from render",
      "Custom Server using HTTPS with dynamic assetPrefix should set the assetPrefix dynamically",
      "Custom Server using HTTPS with dynamic assetPrefix should set the assetPrefix to a given request",
      "Custom Server using HTTPS with generateEtags disabled response does not include etag header",
      "Custom Server using HTTPS with generateEtags enabled response includes etag header",
      "Custom Server using HTTPS with middleware $title should read the expected url protocol in middleware"
    ],
    "runtimeError": false
  },
  "test/integration/data-fetching-errors/test/index.test.js": {
    "passed": [
      "GS(S)P Page Errors build mode should show error for getServerSideProps as component member",
      "GS(S)P Page Errors build mode should show error for getStaticPaths as component member",
      "GS(S)P Page Errors build mode should show error for getStaticProps as component member",
      "GS(S)P Page Errors build mode should show error for undefined getStaticProps",
      "GS(S)P Page Errors dev mode should show error for getServerSideProps as component member",
      "GS(S)P Page Errors dev mode should show error for getStaticPaths as component member",
      "GS(S)P Page Errors dev mode should show error for getStaticProps as component member",
      "GS(S)P Page Errors dev mode should show error for undefined getServerSideProps",
      "GS(S)P Page Errors dev mode should show error for undefined getStaticProps",
      "GS(S)P Page Errors start mode Error stack printed to stderr"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/dedupes-scripts/test/index.test.js": {
    "passed": [
      "De-dedupes scripts in _document Does not have duplicate script references"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/development-hmr-refresh/test/index.test.js": {
    "passed": ["page should not reload when the file is not changed"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/development-runtime-config/test/index.test.js": {
    "passed": [
      "should work with runtime-config in next.config.js empty runtime-config"
    ],
    "failed": [
      "should work with runtime-config in next.config.js with runtime-config"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/disable-js/test/index.test.js": {
    "passed": [
      "disabled runtime JS dev mode should have a script for each preload link",
      "disabled runtime JS dev mode should not have __NEXT_DATA__ script",
      "disabled runtime JS dev mode should render the page",
      "disabled runtime JS production mode should not have __NEXT_DATA__ script",
      "disabled runtime JS production mode should not have preload links",
      "disabled runtime JS production mode should not have scripts",
      "disabled runtime JS production mode should render the page"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/dist-dir/test/index.test.js": {
    "passed": [
      "distDir With basic usage should build the app within the given `dist` directory",
      "distDir With basic usage should not build the app within the default `.next` directory",
      "distDir With basic usage should render the page",
      "distDir dev mode should build the app within the given `dist` directory",
      "distDir dev mode should not build the app within the default `.next` directory",
      "distDir dev mode should render the page",
      "distDir should handle null/undefined distDir",
      "distDir should throw error with invalid distDir"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/document-file-dependencies/test/index.test.js": {
    "passed": [
      "File Dependencies production mode should apply styles defined in global and module css files in a standard page.",
      "File Dependencies production mode should apply styles defined in global and module css files in error page"
    ],
    "failed": [
      "File Dependencies production mode should apply styles defined in global and module css files in 404 page"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/document-head-warnings/test/index.test.js": {
    "passed": [
      "Custom Document Head Warnings development mode warns when using a <title> in document/head",
      "Custom Document Head Warnings development mode warns when using a crossOrigin attribute on document/head",
      "Custom Document Head Warnings development mode warns when using viewport meta tags in document/head"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/draft-mode/test/index.test.ts": {
    "passed": [
      "Test Draft Mode Development Mode should disable draft mode",
      "Test Draft Mode Development Mode should enable draft mode",
      "Test Draft Mode Development Mode should fetch draft data on CST",
      "Test Draft Mode Development Mode should fetch draft data on SSR",
      "Test Draft Mode Development Mode should return cookies to be expired after dev server reboot",
      "Test Draft Mode Development Mode should start development application",
      "Test Draft Mode Development Mode should start the client-side browser"
    ],
    "failed": [
      "Test Draft Mode Server Mode should compile successfully",
      "Test Draft Mode Server Mode should enable draft mode",
      "Test Draft Mode Server Mode should not return fallback page on draft request",
      "Test Draft Mode Server Mode should pass draft mode to API routes",
      "Test Draft Mode Server Mode should pass undefined to API routes when not in draft mode",
      "Test Draft Mode Server Mode should return cookies to be expired on disable request",
      "Test Draft Mode Server Mode should return correct caching headers for draft mode request",
      "Test Draft Mode Server Mode should return dynamic response when draft mode enabled",
      "Test Draft Mode Server Mode should return prerendered page on first request",
      "Test Draft Mode Server Mode should return prerendered page on second request",
      "Test Draft Mode Server Mode should start production application"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/duplicate-pages/test/index.test.js": {
    "passed": [
      "Handles Duplicate Pages dev mode Shows warning in development",
      "Handles Duplicate Pages production Throws an error during build"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/dynamic-optional-routing-root-fallback/test/index.test.js": {
    "passed": [
      "Dynamic Optional Routing Root Fallback dev mode should render optional catch-all top-level route with no segments",
      "Dynamic Optional Routing Root Fallback dev mode should render optional catch-all top-level route with one segment",
      "Dynamic Optional Routing Root Fallback dev mode should render optional catch-all top-level route with two segments",
      "Dynamic Optional Routing Root Fallback production mode should render optional catch-all top-level route with no segments",
      "Dynamic Optional Routing Root Fallback production mode should render optional catch-all top-level route with one segment",
      "Dynamic Optional Routing Root Fallback production mode should render optional catch-all top-level route with two segments"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/dynamic-optional-routing-root-static-paths/test/index.test.js": {
    "passed": [
      "Dynamic Optional Routing dev mode should render optional catch-all top-level route with no segments",
      "Dynamic Optional Routing dev mode should render optional catch-all top-level route with one segment",
      "Dynamic Optional Routing dev mode should render optional catch-all top-level route with two segments",
      "Dynamic Optional Routing production mode should render optional catch-all top-level route with no segments",
      "Dynamic Optional Routing production mode should render optional catch-all top-level route with one segment",
      "Dynamic Optional Routing production mode should render optional catch-all top-level route with two segments"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/dynamic-optional-routing/test/index.test.js": {
    "passed": [
      "Dynamic Optional Routing dev mode should fail to build when mixed with regular catch-all",
      "Dynamic Optional Routing dev mode should fail to build when optional but no catch-all",
      "Dynamic Optional Routing dev mode should fail to build when optional route has index.js at root",
      "Dynamic Optional Routing dev mode should fail to build when optional route has same page at root",
      "Dynamic Optional Routing dev mode should fall back to top-level catch-all",
      "Dynamic Optional Routing dev mode should fallback correctly when fallback enabled",
      "Dynamic Optional Routing dev mode should handle getStaticPaths 1 segment",
      "Dynamic Optional Routing dev mode should handle getStaticPaths 1 segment and trailing slash",
      "Dynamic Optional Routing dev mode should handle getStaticPaths 2 segments",
      "Dynamic Optional Routing dev mode should handle getStaticPaths 2 segments and trailing slash",
      "Dynamic Optional Routing dev mode should handle getStaticPaths no segments",
      "Dynamic Optional Routing dev mode should handle getStaticPaths no segments and trailing slash",
      "Dynamic Optional Routing dev mode should handle getStaticPaths with fallback 2 segments",
      "Dynamic Optional Routing dev mode should handle getStaticPaths with fallback no segments",
      "Dynamic Optional Routing dev mode should match catch-all api route with multiple segments",
      "Dynamic Optional Routing dev mode should match catch-all api route with no segments",
      "Dynamic Optional Routing dev mode should match catch-all api route with no segments and leading slash",
      "Dynamic Optional Routing dev mode should match catch-all api route with single segment",
      "Dynamic Optional Routing dev mode should match root path on false param",
      "Dynamic Optional Routing dev mode should match root path on null param",
      "Dynamic Optional Routing dev mode should match root path on undefined param",
      "Dynamic Optional Routing dev mode should render catch-all nested route with multiple segments",
      "Dynamic Optional Routing dev mode should render catch-all nested route with no segments",
      "Dynamic Optional Routing dev mode should render catch-all nested route with no segments and leading slash",
      "Dynamic Optional Routing dev mode should render catch-all nested route with single segment",
      "Dynamic Optional Routing dev mode should render catch-all top-level route with multiple segments",
      "Dynamic Optional Routing dev mode should render catch-all top-level route with no segments",
      "Dynamic Optional Routing dev mode should render catch-all top-level route with single segment",
      "Dynamic Optional Routing production mode should fail to build when mixed with regular catch-all",
      "Dynamic Optional Routing production mode should fail to build when optional but no catch-all",
      "Dynamic Optional Routing production mode should fail to build when optional route has index.js at root",
      "Dynamic Optional Routing production mode should fail to build when optional route has same page at root",
      "Dynamic Optional Routing production mode should fail to build when param is not explicitly defined",
      "Dynamic Optional Routing production mode should fall back to top-level catch-all",
      "Dynamic Optional Routing production mode should fallback correctly when fallback enabled",
      "Dynamic Optional Routing production mode should handle getStaticPaths 1 segment",
      "Dynamic Optional Routing production mode should handle getStaticPaths 1 segment and trailing slash",
      "Dynamic Optional Routing production mode should handle getStaticPaths 2 segments",
      "Dynamic Optional Routing production mode should handle getStaticPaths 2 segments and trailing slash",
      "Dynamic Optional Routing production mode should handle getStaticPaths no segments",
      "Dynamic Optional Routing production mode should handle getStaticPaths no segments and trailing slash",
      "Dynamic Optional Routing production mode should handle getStaticPaths with fallback 2 segments",
      "Dynamic Optional Routing production mode should handle getStaticPaths with fallback no segments",
      "Dynamic Optional Routing production mode should match catch-all api route with multiple segments",
      "Dynamic Optional Routing production mode should match catch-all api route with no segments",
      "Dynamic Optional Routing production mode should match catch-all api route with no segments and leading slash",
      "Dynamic Optional Routing production mode should match catch-all api route with single segment",
      "Dynamic Optional Routing production mode should match root path on false param",
      "Dynamic Optional Routing production mode should match root path on null param",
      "Dynamic Optional Routing production mode should match root path on undefined param",
      "Dynamic Optional Routing production mode should render catch-all nested route with multiple segments",
      "Dynamic Optional Routing production mode should render catch-all nested route with no segments",
      "Dynamic Optional Routing production mode should render catch-all nested route with no segments and leading slash",
      "Dynamic Optional Routing production mode should render catch-all nested route with single segment",
      "Dynamic Optional Routing production mode should render catch-all top-level route with multiple segments",
      "Dynamic Optional Routing production mode should render catch-all top-level route with no segments",
      "Dynamic Optional Routing production mode should render catch-all top-level route with single segment"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/dynamic-require/test/index.test.js": {
    "passed": [
      "Dynamic require should not throw error when dynamic require is used"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/dynamic-route-rename/test/index.test.js": {
    "passed": [
      "Dynamic route rename casing should not throw error when changing casing of dynamic route file"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/dynamic-routing/test/index.test.js": {
    "passed": [
      "Dynamic Routing dev mode [catch all] should not decode slashes (end)",
      "Dynamic Routing dev mode [catch all] should not decode slashes (middle)",
      "Dynamic Routing dev mode [catch all] should not decode slashes (start)",
      "Dynamic Routing dev mode [catch all] should not match root on SSR",
      "Dynamic Routing dev mode [catch all] should pass param in getInitialProps during SSR",
      "Dynamic Routing dev mode [catch all] should pass params in getInitialProps during SSR",
      "Dynamic Routing dev mode [catch all] should strip trailing slash",
      "Dynamic Routing dev mode [catch-all] should pass params in getInitialProps during client navigation (encoded)",
      "Dynamic Routing dev mode [catch-all] should pass params in getInitialProps during client navigation (multi)",
      "Dynamic Routing dev mode [catch-all] should pass params in getInitialProps during client navigation (single)",
      "Dynamic Routing dev mode [catch-all] shouldn't fail on colon followed by double digits in the path",
      "Dynamic Routing dev mode [nested ssg: catch all] should pass param in getStaticProps during SSR",
      "Dynamic Routing dev mode [nested ssg: catch all] should pass params in getStaticProps during SSR",
      "Dynamic Routing dev mode [nested ssg: catch-all] should pass params in getStaticProps during client navigation (multi)",
      "Dynamic Routing dev mode [nested ssg: catch-all] should pass params in getStaticProps during client navigation (single)",
      "Dynamic Routing dev mode [predefined ssg: catch all] should pass param in getStaticProps during SSR",
      "Dynamic Routing dev mode [predefined ssg: catch all] should pass params in getStaticProps during SSR",
      "Dynamic Routing dev mode [predefined ssg: prerendered catch all] should pass param in getStaticProps during SSR",
      "Dynamic Routing dev mode [predefined ssg: prerendered catch all] should pass params in getStaticProps during SSR",
      "Dynamic Routing dev mode [ssg: catch all] should pass param in getStaticProps during SSR",
      "Dynamic Routing dev mode [ssg: catch all] should pass params in getStaticProps during SSR",
      "Dynamic Routing dev mode [ssg: catch-all] should pass params in getStaticProps during client navigation (multi interpolated)",
      "Dynamic Routing dev mode [ssg: catch-all] should pass params in getStaticProps during client navigation (multi)",
      "Dynamic Routing dev mode [ssg: catch-all] should pass params in getStaticProps during client navigation (multi) no as",
      "Dynamic Routing dev mode [ssg: catch-all] should pass params in getStaticProps during client navigation (single interpolated)",
      "Dynamic Routing dev mode [ssg: catch-all] should pass params in getStaticProps during client navigation (single)",
      "Dynamic Routing dev mode should allow calling Router.push on mount successfully",
      "Dynamic Routing dev mode should handle only hash on dynamic route",
      "Dynamic Routing dev mode should handle only query on dynamic route",
      "Dynamic Routing dev mode should navigate optional dynamic page",
      "Dynamic Routing dev mode should navigate optional dynamic page with value",
      "Dynamic Routing dev mode should navigate to a dynamic page successfully",
      "Dynamic Routing dev mode should navigate to a dynamic page successfully interpolated",
      "Dynamic Routing dev mode should navigate to a dynamic page successfully interpolated with additional query values",
      "Dynamic Routing dev mode should navigate to a dynamic page successfully no as",
      "Dynamic Routing dev mode should navigate to a dynamic page with href with differing query and as correctly",
      "Dynamic Routing dev mode should navigate to a nested dynamic page successfully",
      "Dynamic Routing dev mode should navigate to a nested dynamic page successfully interpolated",
      "Dynamic Routing dev mode should navigate to a nested dynamic page successfully no as",
      "Dynamic Routing dev mode should navigate with hash to dynamic route with link",
      "Dynamic Routing dev mode should navigate with hash to dynamic route with router",
      "Dynamic Routing dev mode should not error when requesting dynamic page with /api",
      "Dynamic Routing dev mode should not have any console warnings on initial load",
      "Dynamic Routing dev mode should not have any console warnings when navigating to dynamic route",
      "Dynamic Routing dev mode should not have any query values when not defined",
      "Dynamic Routing dev mode should not have placeholder query values for SSS",
      "Dynamic Routing dev mode should not preload buildManifest for non-auto export dynamic pages",
      "Dynamic Routing dev mode should pass params in getInitialProps during SSR",
      "Dynamic Routing dev mode should pass params in getInitialProps during client navigation",
      "Dynamic Routing dev mode should prioritize a non-dynamic page",
      "Dynamic Routing dev mode should prioritize public files over dynamic route",
      "Dynamic Routing dev mode should render another normal route",
      "Dynamic Routing dev mode should render dynamic page",
      "Dynamic Routing dev mode should render dynamic route with query",
      "Dynamic Routing dev mode should render nested dynamic page",
      "Dynamic Routing dev mode should render nested optional dynamic page",
      "Dynamic Routing dev mode should render normal route",
      "Dynamic Routing dev mode should render optional dynamic page",
      "Dynamic Routing dev mode should respond with bad request with invalid encoding",
      "Dynamic Routing dev mode should scroll to a hash on client-side navigation",
      "Dynamic Routing dev mode should scroll to a hash on mount",
      "Dynamic Routing dev mode should serve file from public folder encoded",
      "Dynamic Routing dev mode should serve file from static folder encoded",
      "Dynamic Routing dev mode should serve file with %20 from public folder",
      "Dynamic Routing dev mode should serve file with %20 from static folder",
      "Dynamic Routing dev mode should serve file with plus from public folder",
      "Dynamic Routing dev mode should serve file with plus from static folder",
      "Dynamic Routing dev mode should serve file with space from public folder",
      "Dynamic Routing dev mode should serve file with space from static folder",
      "Dynamic Routing dev mode should show error when interpolating fails for href",
      "Dynamic Routing dev mode should support long URLs for dynamic routes",
      "Dynamic Routing dev mode should update dynamic values on mount",
      "Dynamic Routing dev mode should update with a hash in the URL",
      "Dynamic Routing dev mode should work with HMR correctly",
      "Dynamic Routing production mode [catch all] should not decode slashes (end)",
      "Dynamic Routing production mode [catch all] should not decode slashes (middle)",
      "Dynamic Routing production mode [catch all] should not decode slashes (start)",
      "Dynamic Routing production mode [catch all] should not match root on SSR",
      "Dynamic Routing production mode [catch all] should pass param in getInitialProps during SSR",
      "Dynamic Routing production mode [catch all] should pass params in getInitialProps during SSR",
      "Dynamic Routing production mode [catch all] should strip trailing slash",
      "Dynamic Routing production mode [catch-all] should pass params in getInitialProps during client navigation (encoded)",
      "Dynamic Routing production mode [catch-all] should pass params in getInitialProps during client navigation (multi)",
      "Dynamic Routing production mode [catch-all] should pass params in getInitialProps during client navigation (single)",
      "Dynamic Routing production mode [catch-all] shouldn't fail on colon followed by double digits in the path",
      "Dynamic Routing production mode [nested ssg: catch all] should pass param in getStaticProps during SSR",
      "Dynamic Routing production mode [nested ssg: catch all] should pass params in getStaticProps during SSR",
      "Dynamic Routing production mode [nested ssg: catch-all] should pass params in getStaticProps during client navigation (multi)",
      "Dynamic Routing production mode [nested ssg: catch-all] should pass params in getStaticProps during client navigation (single)",
      "Dynamic Routing production mode [predefined ssg: catch all] should pass param in getStaticProps during SSR",
      "Dynamic Routing production mode [predefined ssg: catch all] should pass params in getStaticProps during SSR",
      "Dynamic Routing production mode [predefined ssg: prerendered catch all] should pass param in getStaticProps during SSR",
      "Dynamic Routing production mode [predefined ssg: prerendered catch all] should pass params in getStaticProps during SSR",
      "Dynamic Routing production mode [ssg: catch all] should pass param in getStaticProps during SSR",
      "Dynamic Routing production mode [ssg: catch all] should pass params in getStaticProps during SSR",
      "Dynamic Routing production mode should allow calling Router.push on mount successfully",
      "Dynamic Routing production mode should handle only hash on dynamic route",
      "Dynamic Routing production mode should handle only query on dynamic route",
      "Dynamic Routing production mode should navigate optional dynamic page",
      "Dynamic Routing production mode should navigate optional dynamic page with value",
      "Dynamic Routing production mode should not error when requesting dynamic page with /api",
      "Dynamic Routing production mode should not have any query values when not defined",
      "Dynamic Routing production mode should not have placeholder query values for SSS",
      "Dynamic Routing production mode should not preload buildManifest for non-auto export dynamic pages",
      "Dynamic Routing production mode should pass params in getInitialProps during SSR",
      "Dynamic Routing production mode should pass params in getInitialProps during client navigation",
      "Dynamic Routing production mode should prioritize a non-dynamic page",
      "Dynamic Routing production mode should prioritize public files over dynamic route",
      "Dynamic Routing production mode should render another normal route",
      "Dynamic Routing production mode should render dynamic page",
      "Dynamic Routing production mode should render dynamic route with query",
      "Dynamic Routing production mode should render nested dynamic page",
      "Dynamic Routing production mode should render nested optional dynamic page",
      "Dynamic Routing production mode should render normal route",
      "Dynamic Routing production mode should render optional dynamic page",
      "Dynamic Routing production mode should respond with bad request with invalid encoding",
      "Dynamic Routing production mode should scroll to a hash on client-side navigation",
      "Dynamic Routing production mode should scroll to a hash on mount",
      "Dynamic Routing production mode should serve file from public folder encoded",
      "Dynamic Routing production mode should serve file from static folder encoded",
      "Dynamic Routing production mode should serve file with %20 from public folder",
      "Dynamic Routing production mode should serve file with %20 from static folder",
      "Dynamic Routing production mode should serve file with plus from public folder",
      "Dynamic Routing production mode should serve file with plus from static folder",
      "Dynamic Routing production mode should serve file with space from public folder",
      "Dynamic Routing production mode should serve file with space from static folder",
      "Dynamic Routing production mode should support long URLs for dynamic routes",
      "Dynamic Routing production mode should update dynamic values on mount",
      "Dynamic Routing production mode should update with a hash in the URL"
    ],
    "failed": [
      "Dynamic Routing dev mode should resolve dynamic route href for page added later",
      "Dynamic Routing production mode [ssg: catch-all] should pass params in getStaticProps during client navigation (multi interpolated)",
      "Dynamic Routing production mode [ssg: catch-all] should pass params in getStaticProps during client navigation (multi)",
      "Dynamic Routing production mode [ssg: catch-all] should pass params in getStaticProps during client navigation (multi) no as",
      "Dynamic Routing production mode [ssg: catch-all] should pass params in getStaticProps during client navigation (single interpolated)",
      "Dynamic Routing production mode [ssg: catch-all] should pass params in getStaticProps during client navigation (single)",
      "Dynamic Routing production mode should have correct cache entries on prefetch",
      "Dynamic Routing production mode should navigate to a dynamic page successfully",
      "Dynamic Routing production mode should navigate to a dynamic page successfully interpolated",
      "Dynamic Routing production mode should navigate to a dynamic page successfully interpolated with additional query values",
      "Dynamic Routing production mode should navigate to a dynamic page successfully no as",
      "Dynamic Routing production mode should navigate to a dynamic page with href with differing query and as correctly",
      "Dynamic Routing production mode should navigate to a nested dynamic page successfully",
      "Dynamic Routing production mode should navigate to a nested dynamic page successfully interpolated",
      "Dynamic Routing production mode should navigate to a nested dynamic page successfully no as",
      "Dynamic Routing production mode should navigate with hash to dynamic route with link",
      "Dynamic Routing production mode should navigate with hash to dynamic route with router",
      "Dynamic Routing production mode should output a pages-manifest correctly",
      "Dynamic Routing production mode should output a routes-manifest correctly"
    ],
    "pending": [
      "Dynamic Routing dev mode should not have error after pinging WebSocket"
    ],
    "runtimeError": false
  },
  "test/integration/edge-runtime-configurable-guards/test/index.test.js": {
    "passed": [
      "Edge runtime configurable guards Edge API with use of Function as a type does not warn in dev at runtime",
      "Edge runtime configurable guards Middleware with use of Function as a type build and does not warn at runtime",
      "Edge runtime configurable guards Middleware with use of Function as a type does not warn in dev at runtime"
    ],
    "failed": [
      "Edge runtime configurable guards Edge API using lib with allowed, unused dynamic code build and does not warn at runtime",
      "Edge runtime configurable guards Edge API using lib with allowed, used dynamic code still warns in dev at runtime",
      "Edge runtime configurable guards Edge API using lib with unallowed, used dynamic code fails to build because of dynamic code evaluation",
      "Edge runtime configurable guards Edge API using lib with unallowed, used dynamic code warns in dev at runtime",
      "Edge runtime configurable guards Edge API with allowed, unused dynamic code build and does not warn at runtime",
      "Edge runtime configurable guards Edge API with allowed, used dynamic code still warns in dev at runtime",
      "Edge runtime configurable guards Edge API with use of Function as a type build and does not warn at runtime",
      "Edge runtime configurable guards Middleware using lib with allowed, unused dynamic code build and does not warn at runtime",
      "Edge runtime configurable guards Middleware using lib with allowed, used dynamic code still warns in dev at runtime",
      "Edge runtime configurable guards Middleware using lib with unallowed, used dynamic code fails to build because of dynamic code evaluation",
      "Edge runtime configurable guards Middleware using lib with unallowed, used dynamic code warns in dev at runtime",
      "Edge runtime configurable guards Middleware with allowed, unused dynamic code build and does not warn at runtime",
      "Edge runtime configurable guards Middleware with allowed, used dynamic code still warns in dev at runtime",
      "Edge runtime configurable guards Multiple functions with different configurations fails to build because of unallowed code",
      "Edge runtime configurable guards Multiple functions with different configurations warns in dev for allowed code",
      "Edge runtime configurable guards Multiple functions with different configurations warns in dev for unallowed code"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/edge-runtime-dynamic-code/test/index.test.js": {
    "passed": [],
    "failed": [
      "Edge route usage of dynamic code evaluation dev mode does not show a warning when running WebAssembly.instantiate with a module parameter",
      "Edge route usage of dynamic code evaluation dev mode does not show warning when no code uses eval",
      "Edge route usage of dynamic code evaluation dev mode shows a warning when running WebAssembly.compile",
      "Edge route usage of dynamic code evaluation dev mode shows a warning when running WebAssembly.instantiate with a buffer parameter",
      "Edge route usage of dynamic code evaluation dev mode shows a warning when running code with eval",
      "Edge route usage of dynamic code evaluation production mode should have middleware warning during build",
      "Middleware usage of dynamic code evaluation dev mode does not show a warning when running WebAssembly.instantiate with a module parameter",
      "Middleware usage of dynamic code evaluation dev mode does not show warning when no code uses eval",
      "Middleware usage of dynamic code evaluation dev mode shows a warning when running WebAssembly.compile",
      "Middleware usage of dynamic code evaluation dev mode shows a warning when running WebAssembly.instantiate with a buffer parameter",
      "Middleware usage of dynamic code evaluation dev mode shows a warning when running code with eval",
      "Middleware usage of dynamic code evaluation production mode should have middleware warning during build",
      "Page using eval in dev mode does issue dynamic code evaluation warnings"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/edge-runtime-module-errors/test/index.test.js": {
    "passed": [
      "Edge runtime code with imports Edge API importing vanilla 3rd party module does not throw in dev at runtime",
      "Edge runtime code with imports Edge API using Buffer polyfill does not throw in dev at runtime",
      "Edge runtime code with imports Middleware importing vanilla 3rd party module does not throw in dev at runtime",
      "Edge runtime code with imports Middleware importing vanilla 3rd party module does not throw in production at runtime",
      "Edge runtime code with imports Middleware using Buffer polyfill does not throw in dev at runtime"
    ],
    "failed": [
      "Edge runtime code with imports Edge API dynamically importing node.js module in a lib throws unsupported module error in dev at runtime and highlights the faulty line",
      "Edge runtime code with imports Edge API dynamically importing node.js module in a lib throws unsupported module error in production at runtime and prints error on logs",
      "Edge runtime code with imports Edge API dynamically importing node.js module throws unsupported module error in dev at runtime and highlights the faulty line",
      "Edge runtime code with imports Edge API dynamically importing node.js module throws unsupported module error in production at runtime and prints error on logs",
      "Edge runtime code with imports Edge API importing vanilla 3rd party module does not throw in production at runtime",
      "Edge runtime code with imports Edge API statically importing 3rd party module does not build and reports",
      "Edge runtime code with imports Edge API statically importing 3rd party module throws not-found module error in dev at runtime and highlights the faulty line",
      "Edge runtime code with imports Edge API using Buffer polyfill does not throw in production at runtime",
      "Edge runtime code with imports Middleware dynamically importing node.js module in a lib throws unsupported module error in dev at runtime and highlights the faulty line",
      "Edge runtime code with imports Middleware dynamically importing node.js module in a lib throws unsupported module error in production at runtime and prints error on logs",
      "Edge runtime code with imports Middleware dynamically importing node.js module throws unsupported module error in dev at runtime and highlights the faulty line",
      "Edge runtime code with imports Middleware dynamically importing node.js module throws unsupported module error in production at runtime and prints error on logs",
      "Edge runtime code with imports Middleware statically importing 3rd party module does not build and reports",
      "Edge runtime code with imports Middleware statically importing 3rd party module throws not-found module error in dev at runtime and highlights the faulty line",
      "Edge runtime code with imports Middleware using Buffer polyfill does not throw in production at runtime"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/edge-runtime-module-errors/test/module-imports.test.js": {
    "passed": [
      "Edge runtime code with imports Middleware importing unused node.js module does not throw in dev at runtime"
    ],
    "failed": [
      "Edge runtime code with imports Edge API dynamically importing 3rd party module does not build and reports module not found error",
      "Edge runtime code with imports Edge API dynamically importing 3rd party module throws not-found module error in dev at runtime and highlights the faulty line",
      "Edge runtime code with imports Edge API importing unused 3rd party module does not build and reports module not found error",
      "Edge runtime code with imports Edge API importing unused 3rd party module throws not-found module error in dev at runtime and highlights the faulty line",
      "Edge runtime code with imports Edge API importing unused node.js module does not throw in dev at runtime",
      "Edge runtime code with imports Edge API importing unused node.js module does not throw in production at runtime",
      "Edge runtime code with imports Edge API statically importing node.js module throws unsupported module error in dev at runtime and highlights the faulty line",
      "Edge runtime code with imports Edge API statically importing node.js module throws unsupported module error in production at runtime and prints error on logs",
      "Edge runtime code with imports Middleware dynamically importing 3rd party module does not build and reports module not found error",
      "Edge runtime code with imports Middleware dynamically importing 3rd party module throws not-found module error in dev at runtime and highlights the faulty line",
      "Edge runtime code with imports Middleware importing unused 3rd party module does not build and reports module not found error",
      "Edge runtime code with imports Middleware importing unused 3rd party module throws not-found module error in dev at runtime and highlights the faulty line",
      "Edge runtime code with imports Middleware importing unused node.js module does not throw in production at runtime",
      "Edge runtime code with imports Middleware statically importing node.js module throws unsupported module error in dev at runtime and highlights the faulty line",
      "Edge runtime code with imports Middleware statically importing node.js module throws unsupported module error in production at runtime and prints error on logs"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/edge-runtime-response-error/test/index.test.js": {
    "passed": [
      "Edge runtime code with imports test error if response is not Response type Edge API dev test Response",
      "Edge runtime code with imports test error if response is not Response type Middleware dev test Response"
    ],
    "failed": [
      "Edge runtime code with imports test error if response is not Response type Edge API build test Response",
      "Edge runtime code with imports test error if response is not Response type Middleware build test Response"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/edge-runtime-streaming-error/test/index.test.ts": {
    "passed": ["dev mode logs the error correctly"],
    "failed": ["production mode logs the error correctly"],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/edge-runtime-with-node.js-apis/test/index.test.ts": {
    "passed": [
      "Edge route using Node.js API dev mode does not throw on using process.arch",
      "Edge route using Node.js API dev mode does not throw on using process.version",
      "Middleware using Node.js API dev mode does not throw on using process.arch",
      "Middleware using Node.js API dev mode does not throw on using process.version"
    ],
    "failed": [
      "Edge route using Node.js API dev mode throws error when using BroadcastChannel",
      "Edge route using Node.js API dev mode throws error when using ByteLengthQueuingStrategy",
      "Edge route using Node.js API dev mode throws error when using CompressionStream",
      "Edge route using Node.js API dev mode throws error when using CountQueuingStrategy",
      "Edge route using Node.js API dev mode throws error when using DecompressionStream",
      "Edge route using Node.js API dev mode throws error when using DomException",
      "Edge route using Node.js API dev mode throws error when using MessageChannel",
      "Edge route using Node.js API dev mode throws error when using MessageEvent",
      "Edge route using Node.js API dev mode throws error when using MessagePort",
      "Edge route using Node.js API dev mode throws error when using ReadableByteStreamController",
      "Edge route using Node.js API dev mode throws error when using ReadableStreamBYOBRequest",
      "Edge route using Node.js API dev mode throws error when using ReadableStreamDefaultController",
      "Edge route using Node.js API dev mode throws error when using TransformStreamDefaultController",
      "Edge route using Node.js API dev mode throws error when using WritableStreamDefaultController",
      "Edge route using Node.js API dev mode throws error when using clearImmediate",
      "Edge route using Node.js API dev mode throws error when using process.cpuUsage",
      "Edge route using Node.js API dev mode throws error when using process.cwd",
      "Edge route using Node.js API dev mode throws error when using process.getuid",
      "Edge route using Node.js API dev mode throws error when using setImmediate",
      "Edge route using Node.js API production mode does not warn on using process.arch",
      "Edge route using Node.js API production mode does not warn on using process.version",
      "Edge route using Node.js API production mode warns for BroadcastChannel during build",
      "Edge route using Node.js API production mode warns for ByteLengthQueuingStrategy during build",
      "Edge route using Node.js API production mode warns for CompressionStream during build",
      "Edge route using Node.js API production mode warns for CountQueuingStrategy during build",
      "Edge route using Node.js API production mode warns for DecompressionStream during build",
      "Edge route using Node.js API production mode warns for DomException during build",
      "Edge route using Node.js API production mode warns for MessageChannel during build",
      "Edge route using Node.js API production mode warns for MessageEvent during build",
      "Edge route using Node.js API production mode warns for MessagePort during build",
      "Edge route using Node.js API production mode warns for ReadableByteStreamController during build",
      "Edge route using Node.js API production mode warns for ReadableStreamBYOBRequest during build",
      "Edge route using Node.js API production mode warns for ReadableStreamDefaultController during build",
      "Edge route using Node.js API production mode warns for TransformStreamDefaultController during build",
      "Edge route using Node.js API production mode warns for WritableStreamDefaultController during build",
      "Edge route using Node.js API production mode warns for clearImmediate during build",
      "Edge route using Node.js API production mode warns for process.cpuUsage during build",
      "Edge route using Node.js API production mode warns for process.cwd during build",
      "Edge route using Node.js API production mode warns for process.getuid during build",
      "Edge route using Node.js API production mode warns for setImmediate during build",
      "Middleware using Node.js API dev mode throws error when using BroadcastChannel",
      "Middleware using Node.js API dev mode throws error when using ByteLengthQueuingStrategy",
      "Middleware using Node.js API dev mode throws error when using CompressionStream",
      "Middleware using Node.js API dev mode throws error when using CountQueuingStrategy",
      "Middleware using Node.js API dev mode throws error when using DecompressionStream",
      "Middleware using Node.js API dev mode throws error when using DomException",
      "Middleware using Node.js API dev mode throws error when using MessageChannel",
      "Middleware using Node.js API dev mode throws error when using MessageEvent",
      "Middleware using Node.js API dev mode throws error when using MessagePort",
      "Middleware using Node.js API dev mode throws error when using ReadableByteStreamController",
      "Middleware using Node.js API dev mode throws error when using ReadableStreamBYOBRequest",
      "Middleware using Node.js API dev mode throws error when using ReadableStreamDefaultController",
      "Middleware using Node.js API dev mode throws error when using TransformStreamDefaultController",
      "Middleware using Node.js API dev mode throws error when using WritableStreamDefaultController",
      "Middleware using Node.js API dev mode throws error when using clearImmediate",
      "Middleware using Node.js API dev mode throws error when using process.cpuUsage",
      "Middleware using Node.js API dev mode throws error when using process.cwd",
      "Middleware using Node.js API dev mode throws error when using process.getuid",
      "Middleware using Node.js API dev mode throws error when using setImmediate",
      "Middleware using Node.js API production mode does not warn on using process.arch",
      "Middleware using Node.js API production mode does not warn on using process.version",
      "Middleware using Node.js API production mode warns for BroadcastChannel during build",
      "Middleware using Node.js API production mode warns for ByteLengthQueuingStrategy during build",
      "Middleware using Node.js API production mode warns for CompressionStream during build",
      "Middleware using Node.js API production mode warns for CountQueuingStrategy during build",
      "Middleware using Node.js API production mode warns for DecompressionStream during build",
      "Middleware using Node.js API production mode warns for DomException during build",
      "Middleware using Node.js API production mode warns for MessageChannel during build",
      "Middleware using Node.js API production mode warns for MessageEvent during build",
      "Middleware using Node.js API production mode warns for MessagePort during build",
      "Middleware using Node.js API production mode warns for ReadableByteStreamController during build",
      "Middleware using Node.js API production mode warns for ReadableStreamBYOBRequest during build",
      "Middleware using Node.js API production mode warns for ReadableStreamDefaultController during build",
      "Middleware using Node.js API production mode warns for TransformStreamDefaultController during build",
      "Middleware using Node.js API production mode warns for WritableStreamDefaultController during build",
      "Middleware using Node.js API production mode warns for clearImmediate during build",
      "Middleware using Node.js API production mode warns for process.cpuUsage during build",
      "Middleware using Node.js API production mode warns for process.cwd during build",
      "Middleware using Node.js API production mode warns for process.getuid during build",
      "Middleware using Node.js API production mode warns for setImmediate during build"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/empty-object-getInitialProps/test/index.test.js": {
    "passed": [
      "Empty Project It should not show empty object warning for page without `getInitialProps`",
      "Empty Project It should show empty object warning on SSR",
      "Empty Project should show empty object warning during client transition"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/empty-project/test/index.test.js": {
    "passed": ["Empty Project Should not time out and return 404"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/env-config/test/index.test.js": {
    "passed": [
      "Env Config dev mode should have process environment override .env",
      "Env Config dev mode should load env from .env",
      "Env Config dev mode should provide env correctly for API routes",
      "Env Config dev mode should provide env correctly for SSR",
      "Env Config dev mode should provide env for SSG",
      "Env Config dev mode should provide global env to next.config.js",
      "Env Config dev mode with hot reload should have process environment override .env",
      "Env Config dev mode with hot reload should have updated runtime values after change",
      "Env Config dev mode with hot reload should load env from .env",
      "Env Config dev mode with hot reload should provide env correctly for API routes",
      "Env Config dev mode with hot reload should provide env correctly for SSR",
      "Env Config dev mode with hot reload should provide env for SSG",
      "Env Config dev mode with hot reload should provide global env to next.config.js",
      "Env Config server mode should have process environment override .env",
      "Env Config server mode should load env from .env",
      "Env Config server mode should provide env correctly for API routes",
      "Env Config server mode should provide env correctly for SSR",
      "Env Config server mode should provide env for SSG",
      "Env Config server mode should provide global env to next.config.js",
      "Env Config test environment should provide env correctly for API routes",
      "Env Config test environment should provide global env to next.config.js"
    ],
    "failed": [
      "Env Config dev mode should inline global values during build",
      "Env Config dev mode with hot reload should inline global values during build",
      "Env Config dev mode with hot reload should trigger HMR correctly when NEXT_PUBLIC_ env is changed",
      "Env Config server mode should inline global values during build",
      "Env Config test environment should have process environment override .env",
      "Env Config test environment should inline global values during build",
      "Env Config test environment should load env from .env",
      "Env Config test environment should provide env correctly for SSR",
      "Env Config test environment should provide env for SSG"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/error-in-error/test/index.test.js": {
    "passed": [
      "Handles an Error in _error Handles error during SSR",
      "Handles an Error in _error Handles error during client transition"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/error-load-fail/test/index.test.js": {
    "passed": [],
    "failed": [
      "Failing to load _error handles failing to load _error correctly"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/error-plugin-stack-overflow/test/index.test.js": {
    "passed": [],
    "failed": [
      "Reports stack trace when webpack plugin stack overflows shows details in next build"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/errors-on-output-to-public/test/index.test.js": {
    "passed": [
      "Errors on output to public Throws error when `distDir` is set to public",
      "Errors on output to public Throws error when export out dir is public"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/errors-on-output-to-static/test/index.test.js": {
    "passed": [
      "Errors on output to static Throws error when export out dir is static"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/eslint/test/lint-cache.test.js": {
    "passed": [
      "cache with content strategy is different from the one with default strategy",
      "eslint caching is disabled with the --no-cache flag",
      "eslint caching is enabled by default",
      "the --cache-location flag allows the user to define a separate cache location",
      "the default eslint cache lives in the user defined build directory",
      "the default eslint caching strategy is metadata"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/eslint/test/next-build.test.js": {
    "passed": [
      "Next Build base directories are linted by default during builds",
      "Next Build custom directories",
      "Next Build eslint cache lives in the user defined build directory",
      "Next Build eslint caching is enabled",
      "Next Build first time setup",
      "Next Build ignore during builds",
      "Next Build invalid older eslint version",
      "Next Build missing Next.js plugin",
      "Next Build shows warnings and errors"
    ],
    "failed": [
      "Next Build empty directories do not fail the build",
      "Next Build eslint ignored directories do not fail the build"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/eslint/test/next-lint.test.js": {
    "passed": [
      "Next Lint First Time Setup  creates .eslintrc.json file with a default configuration",
      "Next Lint First Time Setup  installs eslint and eslint-config-next as devDependencies if missing with npm",
      "Next Lint First Time Setup  installs eslint and eslint-config-next as devDependencies if missing with pnpm",
      "Next Lint First Time Setup  installs eslint and eslint-config-next as devDependencies if missing with yarn",
      "Next Lint First Time Setup  show a prompt to set up ESLint if no configuration detected",
      "Next Lint First Time Setup  shows a successful message when completed",
      "Next Lint base directories are linted by default",
      "Next Lint custom directories",
      "Next Lint don't create .eslintrc file if package.json has eslintConfig field",
      "Next Lint file flag can selectively lint only a single file",
      "Next Lint file flag can selectively lints multiple files",
      "Next Lint format flag supports additional user-defined formats",
      "Next Lint lint files with cjs and mjs file extension",
      "Next Lint max warnings flag does not error when warnings do not exceed threshold",
      "Next Lint max warnings flag errors when warnings exceed threshold",
      "Next Lint output flag create a file respecting the chosen format",
      "Next Lint quiet flag suppresses warnings and only reports errors",
      "Next Lint should add relative path for dist types in tsconfig.json when app dir exist",
      "Next Lint should generate next-env.d.ts before lint command",
      "Next Lint should not generate next-env.d.ts without typescript",
      "Next Lint show error message when the file path is a directory",
      "Next Lint shows warnings and errors",
      "Next Lint shows warnings and errors when extending plugin core-web-vitals config",
      "Next Lint shows warnings and errors when extending plugin recommended config",
      "Next Lint shows warnings and errors with next/core-web-vitals config",
      "Next Lint success message when no warnings or errors"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/export-404/test/index.test.js": {
    "passed": [
      "Export with a page named 404.js should export a custom 404.html instead of default 404.html",
      "Static 404 Export export 404.html and 404/index.html when trailingSlash: true",
      "Static 404 Export only export 404.html when trailingSlash: false"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/export-default-map/test/index.test.js": {
    "passed": [
      "Export with default map should export an amp only page to clean path",
      "Export with default map should export hybrid amp page correctly",
      "Export with default map should export hybrid index amp page correctly",
      "Export with default map should export nested hybrid amp page correctly",
      "Export with default map should export nested hybrid amp page correctly with folder",
      "Export with default map should export with folder that has dot in name"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/export-dynamic-pages/test/index.test.js": {
    "passed": [],
    "failed": [
      "Export Dyanmic Pages should hydrate with correct asPath",
      "Export Dyanmic Pages should of exported with correct asPath"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/integration/export-fallback-true-error/test/index.test.js": {
    "passed": [
      "Export error for fallback: true should build successfully",
      "Export error for fallback: true should have error during next export"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/export-getInitialProps-warn/test/index.test.js": {
    "passed": [
      "Export with getInitialProps should show warning with next export"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/export-image-default/test/index.test.js": {
    "passed": [
      "Export with default loader next/image component should build successfully",
      "Export with default loader next/image component should have error during next export"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/export-image-loader-legacy/test/index.test.js": {
    "passed": [
      "Export with cloudinary loader next/legacy/image component should build successfully",
      "Export with cloudinary loader next/legacy/image component should contain img element in html output",
      "Export with cloudinary loader next/legacy/image component should export successfully",
      "Export with custom loader config but no loader prop on next/legacy/image should fail build",
      "Export with custom loader next/legacy/image component should build successfully",
      "Export with custom loader next/legacy/image component should contain img element with same src in html output",
      "Export with custom loader next/legacy/image component should export successfully",
      "Export with unoptimized next/legacy/image component should build successfully",
      "Export with unoptimized next/legacy/image component should contain img element with same src in html output",
      "Export with unoptimized next/legacy/image component should export successfully"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/export-image-loader/test/index.test.js": {
    "passed": [
      "Export with cloudinary loader next/image component should build successfully",
      "Export with cloudinary loader next/image component should contain img element in html output",
      "Export with cloudinary loader next/image component should export successfully",
      "Export with custom loader config but no loader prop on next/image should fail build",
      "Export with custom loader next/image component should build successfully",
      "Export with custom loader next/image component should contain img element with same src in html output",
      "Export with custom loader next/image component should export successfully"
    ],
    "failed": [
      "Export with loaderFile config next/image component should build successfully",
      "Export with loaderFile config next/image component should contain img element with same src in html output",
      "Export with loaderFile config next/image component should export successfully",
      "Export with unoptimized next/image component should build successfully",
      "Export with unoptimized next/image component should contain img element with same src in html output",
      "Export with unoptimized next/image component should export successfully"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/export-index-not-found-gsp/test/index.test.ts": {
    "passed": [
      "Export index page with `notFound: true` in `getStaticProps` should build successfully",
      "Export index page with `notFound: true` in `getStaticProps` should export successfully"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/export-intent/test/index.test.js": {
    "passed": [
      "Application Export Intent Output Bad Export should build and export",
      "Application Export Intent Output Bad Export should have the expected outputs for export",
      "Application Export Intent Output Custom Out should build and export",
      "Application Export Intent Output Custom Out should have the expected outputs for export",
      "Application Export Intent Output Default Export should build and export",
      "Application Export Intent Output Default Export should have the expected outputs for export",
      "Application Export Intent Output No Export should build and clean up",
      "Application Export Intent Output No Export should build and not export",
      "Application Export Intent Output No Export should export and create file",
      "Application Export Intent Output No Export should have the expected outputs for export"
    ],
    "failed": [
      "Application Export Intent Output Custom Export should build and export",
      "Application Export Intent Output Custom Export should have the expected outputs for export"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/export-no-build/test/index.test.js": {
    "passed": [
      "next export without build should show error when there is no production build"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/export-progress-status-message/test/index.test.js": {
    "passed": [
      "Export cli prints progress info build: should log with internally passed statusMessage",
      "Export cli prints progress info export: should log with default label"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/export-subfolders/test/index.test.js": {
    "passed": [
      "Export config#exportTrailingSlash set to false should export pages as [filename].html instead of [filename]/index.html"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/externals-esm-loose/test/index.test.js": {
    "passed": [],
    "failed": [
      "Handle ESM externals with esmExternals: 'loose' should render the ssg page",
      "Handle ESM externals with esmExternals: 'loose' should render the ssr page",
      "Handle ESM externals with esmExternals: 'loose' should render the static page"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/externals-esm/test/index.test.js": {
    "passed": [],
    "failed": [
      "Handle ESM externals with esmExternals: true should render the ssg page",
      "Handle ESM externals with esmExternals: true should render the ssr page",
      "Handle ESM externals with esmExternals: true should render the static page"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/fallback-false-rewrite/test/index.test.js": {
    "passed": [
      "fallback: false rewrite dev mode should behave properly when accessing the dynamic param directly",
      "fallback: false rewrite dev mode should not rewrite for path from fallback: false SSR",
      "fallback: false rewrite dev mode should not rewrite for path from fallback: false client",
      "fallback: false rewrite dev mode should rewrite correctly for path above fallback: false SSR",
      "fallback: false rewrite dev mode should rewrite correctly for path above fallback: false client",
      "fallback: false rewrite dev mode should rewrite correctly for path at same level as fallback: false SSR",
      "fallback: false rewrite dev mode should rewrite correctly for path at same level as fallback: false client",
      "fallback: false rewrite production mode should behave properly when accessing the dynamic param directly",
      "fallback: false rewrite production mode should not rewrite for path from fallback: false SSR",
      "fallback: false rewrite production mode should not rewrite for path from fallback: false client",
      "fallback: false rewrite production mode should rewrite correctly for path above fallback: false SSR",
      "fallback: false rewrite production mode should rewrite correctly for path above fallback: false client",
      "fallback: false rewrite production mode should rewrite correctly for path at same level as fallback: false SSR",
      "fallback: false rewrite production mode should rewrite correctly for path at same level as fallback: false client"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/fallback-modules/test/index.test.js": {
    "passed": ["Build Output Crypto Application should not include crypto"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/fallback-route-params/test/index.test.js": {
    "passed": [
      "Fallback Dynamic Route Params dev mode should have correct fallback query (hydration)",
      "Fallback Dynamic Route Params dev mode should have correct fallback query (skeleton)",
      "Fallback Dynamic Route Params production mode should have correct fallback query (hydration)",
      "Fallback Dynamic Route Params production mode should have correct fallback query (skeleton)"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/fetch-polyfill-ky-universal/test/index.test.js": {
    "passed": [
      "Fetch polyfill with ky-universal Server support includes polyfilled fetch when using getStaticProps",
      "Fetch polyfill with ky-universal dev support includes polyfilled fetch when using getInitialProps",
      "Fetch polyfill with ky-universal dev support includes polyfilled fetch when using getServerSideProps",
      "Fetch polyfill with ky-universal dev support includes polyfilled fetch when using getStaticProps"
    ],
    "failed": [
      "Fetch polyfill with ky-universal Server support includes polyfilled fetch when using getInitialProps",
      "Fetch polyfill with ky-universal Server support includes polyfilled fetch when using getServerSideProps"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/fetch-polyfill/test/index.test.js": {
    "passed": [
      "Fetch polyfill Server support includes polyfilled fetch when using getStaticPaths",
      "Fetch polyfill Server support includes polyfilled fetch when using getStaticProps",
      "Fetch polyfill dev support includes polyfilled fetch when using API routes",
      "Fetch polyfill dev support includes polyfilled fetch when using getInitialProps",
      "Fetch polyfill dev support includes polyfilled fetch when using getServerSideProps",
      "Fetch polyfill dev support includes polyfilled fetch when using getStaticPaths",
      "Fetch polyfill dev support includes polyfilled fetch when using getStaticProps"
    ],
    "failed": [
      "Fetch polyfill Server support includes polyfilled fetch when using API routes",
      "Fetch polyfill Server support includes polyfilled fetch when using getInitialProps",
      "Fetch polyfill Server support includes polyfilled fetch when using getServerSideProps"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/file-serving/test/index.test.js": {
    "passed": [
      "File Serving dev mode should prevent traversing with /%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66test-file.txt",
      "File Serving dev mode should prevent traversing with /%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66test-file.txt",
      "File Serving dev mode should prevent traversing with /%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66test-file.txt",
      "File Serving dev mode should prevent traversing with /%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66test-file.txt",
      "File Serving dev mode should prevent traversing with /%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66test-file.txt",
      "File Serving dev mode should prevent traversing with /%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66test-file.txt",
      "File Serving dev mode should prevent traversing with /%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66test-file.txt",
      "File Serving dev mode should prevent traversing with /%%32%65%%32%65%%32%66test-file.txt",
      "File Serving dev mode should prevent traversing with /%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63test-file.txt",
      "File Serving dev mode should prevent traversing with /%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63test-file.txt",
      "File Serving dev mode should prevent traversing with /%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63test-file.txt",
      "File Serving dev mode should prevent traversing with /%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63test-file.txt",
      "File Serving dev mode should prevent traversing with /%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63test-file.txt",
      "File Serving dev mode should prevent traversing with /%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63test-file.txt",
      "File Serving dev mode should prevent traversing with /%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63test-file.txt",
      "File Serving dev mode should prevent traversing with /%%32%65%%32%65%%35%63test-file.txt",
      "File Serving dev mode should prevent traversing with /%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/test-file.txt",
      "File Serving dev mode should prevent traversing with /%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/test-file.txt",
      "File Serving dev mode should prevent traversing with /%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/test-file.txt",
      "File Serving dev mode should prevent traversing with /%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/test-file.txt",
      "File Serving dev mode should prevent traversing with /%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/test-file.txt",
      "File Serving dev mode should prevent traversing with /%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/test-file.txt",
      "File Serving dev mode should prevent traversing with /%%32%65%%32%65/%%32%65%%32%65/test-file.txt",
      "File Serving dev mode should prevent traversing with /%%32%65%%32%65/test-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252ftest-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252ftest-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252ftest-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252ftest-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252ftest-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e%252f%252e%252e%252f%252e%252e%252ftest-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e%252f%252e%252e%252ftest-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e%252ftest-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e%255c%252e%252e%255c%252e%252e%255ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e%255c%252e%252e%255ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e%255ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e/%252e%252e/%252e%252e/%252e%252e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e/%252e%252e/%252e%252e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e/%252e%252e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e\\%252e%252e\\%252e%252e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e\\%252e%252e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%252e%252e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/test-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/test-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/test-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/test-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/test-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/test-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/test-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae/test-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%25c0%25ae%25c0%25ae\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e%2f%2e%2e%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e%5c%2e%2e%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e/%2e%2e/%2e%2e/%2e%2e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e/%2e%2e/%2e%2e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e/%2e%2e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e\\%2e%2e\\%2e%2e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e\\%2e%2e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%2e%2e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e%c0%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e%c0%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e/%c0%2e%c0%2e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e\\%c0%2e%c0%2e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%2e%c0%2e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%aftest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%aftest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%aftest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%aftest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%aftest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%aftest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%aftest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae%c0%aftest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae%c1%9ctest-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae/%c0%ae%c0%ae/test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae/test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae\\%c0%ae%c0%ae\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%c0%ae%c0%ae\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e%u2215%uff0e%uff0e%u2215test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e%u2215test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e%u2216%uff0e%uff0e%u2216test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e%u2216test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e/%uff0e%uff0e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e/test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e\\%uff0e%uff0e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /%uff0e%uff0e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66test-file.txt",
      "File Serving dev mode should prevent traversing with /..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66test-file.txt",
      "File Serving dev mode should prevent traversing with /..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66test-file.txt",
      "File Serving dev mode should prevent traversing with /..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66test-file.txt",
      "File Serving dev mode should prevent traversing with /..%%32%66..%%32%66..%%32%66..%%32%66test-file.txt",
      "File Serving dev mode should prevent traversing with /..%%32%66..%%32%66..%%32%66test-file.txt",
      "File Serving dev mode should prevent traversing with /..%%32%66..%%32%66test-file.txt",
      "File Serving dev mode should prevent traversing with /..%%32%66test-file.txt",
      "File Serving dev mode should prevent traversing with /..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63test-file.txt",
      "File Serving dev mode should prevent traversing with /..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63test-file.txt",
      "File Serving dev mode should prevent traversing with /..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63test-file.txt",
      "File Serving dev mode should prevent traversing with /..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63test-file.txt",
      "File Serving dev mode should prevent traversing with /..%%35%63..%%35%63..%%35%63..%%35%63test-file.txt",
      "File Serving dev mode should prevent traversing with /..%%35%63..%%35%63..%%35%63test-file.txt",
      "File Serving dev mode should prevent traversing with /..%%35%63..%%35%63test-file.txt",
      "File Serving dev mode should prevent traversing with /..%%35%63test-file.txt",
      "File Serving dev mode should prevent traversing with /..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%252f..%252f..%252f..%252f..%252f..%252f..%252ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%252f..%252f..%252f..%252f..%252f..%252ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%252f..%252f..%252f..%252f..%252ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%252f..%252f..%252f..%252ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%252f..%252f..%252ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%252f..%252ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%252ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%255c..%255c..%255c..%255c..%255c..%255c..%255c..%255ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%255c..%255c..%255c..%255c..%255c..%255c..%255ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%255c..%255c..%255c..%255c..%255c..%255ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%255c..%255c..%255c..%255c..%255ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%255c..%255c..%255c..%255ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%255c..%255c..%255ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%255c..%255ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%255ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25aftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25aftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25aftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25aftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25aftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%25c0%25af..%25c0%25af..%25c0%25aftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%25c0%25af..%25c0%25aftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%25c0%25aftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%25c1%259c..%25c1%259c..%25c1%259ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%25c1%259c..%25c1%259ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%25c1%259ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%2f..%2f..%2f..%2f..%2f..%2f..%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%2f..%2f..%2f..%2f..%2f..%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%2f..%2f..%2f..%2f..%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%2f..%2f..%2f..%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%2f..%2f..%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%2f..%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%5c..%5c..%5c..%5c..%5c..%5c..%5c..%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%5c..%5c..%5c..%5c..%5c..%5c..%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%5c..%5c..%5c..%5c..%5c..%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%5c..%5c..%5c..%5c..%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%5c..%5c..%5c..%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%5c..%5c..%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%5c..%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c0%2f..%c0%2f..%c0%2f..%c0%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c0%2f..%c0%2f..%c0%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c0%2f..%c0%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c0%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c0%5c..%c0%5c..%c0%5c..%c0%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c0%5c..%c0%5c..%c0%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c0%5c..%c0%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c0%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%aftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%aftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%aftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c0%af..%c0%af..%c0%af..%c0%af..%c0%aftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c0%af..%c0%af..%c0%af..%c0%aftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c0%af..%c0%af..%c0%aftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c0%af..%c0%aftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c0%aftest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c1%9c..%c1%9c..%c1%9c..%c1%9ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c1%9c..%c1%9c..%c1%9ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c1%9c..%c1%9ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%c1%9ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..%u2215..%u2215..%u2215..%u2215..%u2215..%u2215..%u2215..%u2215test-file.txt",
      "File Serving dev mode should prevent traversing with /..%u2215..%u2215..%u2215..%u2215..%u2215..%u2215..%u2215test-file.txt",
      "File Serving dev mode should prevent traversing with /..%u2215..%u2215..%u2215..%u2215..%u2215..%u2215test-file.txt",
      "File Serving dev mode should prevent traversing with /..%u2215..%u2215..%u2215..%u2215..%u2215test-file.txt",
      "File Serving dev mode should prevent traversing with /..%u2215..%u2215..%u2215..%u2215test-file.txt",
      "File Serving dev mode should prevent traversing with /..%u2215..%u2215..%u2215test-file.txt",
      "File Serving dev mode should prevent traversing with /..%u2215..%u2215test-file.txt",
      "File Serving dev mode should prevent traversing with /..%u2215test-file.txt",
      "File Serving dev mode should prevent traversing with /..%u2216..%u2216..%u2216..%u2216..%u2216..%u2216..%u2216..%u2216test-file.txt",
      "File Serving dev mode should prevent traversing with /..%u2216..%u2216..%u2216..%u2216..%u2216..%u2216..%u2216test-file.txt",
      "File Serving dev mode should prevent traversing with /..%u2216..%u2216..%u2216..%u2216..%u2216..%u2216test-file.txt",
      "File Serving dev mode should prevent traversing with /..%u2216..%u2216..%u2216..%u2216..%u2216test-file.txt",
      "File Serving dev mode should prevent traversing with /..%u2216..%u2216..%u2216..%u2216test-file.txt",
      "File Serving dev mode should prevent traversing with /..%u2216..%u2216..%u2216test-file.txt",
      "File Serving dev mode should prevent traversing with /..%u2216..%u2216test-file.txt",
      "File Serving dev mode should prevent traversing with /..%u2216test-file.txt",
      "File Serving dev mode should prevent traversing with /..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8test-file.txt",
      "File Serving dev mode should prevent traversing with /..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8test-file.txt",
      "File Serving dev mode should prevent traversing with /..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8test-file.txt",
      "File Serving dev mode should prevent traversing with /..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8test-file.txt",
      "File Serving dev mode should prevent traversing with /..%uEFC8..%uEFC8..%uEFC8..%uEFC8test-file.txt",
      "File Serving dev mode should prevent traversing with /..%uEFC8..%uEFC8..%uEFC8test-file.txt",
      "File Serving dev mode should prevent traversing with /..%uEFC8..%uEFC8test-file.txt",
      "File Serving dev mode should prevent traversing with /..%uEFC8test-file.txt",
      "File Serving dev mode should prevent traversing with /..%uF025..%uF025..%uF025..%uF025..%uF025..%uF025..%uF025..%uF025test-file.txt",
      "File Serving dev mode should prevent traversing with /..%uF025..%uF025..%uF025..%uF025..%uF025..%uF025..%uF025test-file.txt",
      "File Serving dev mode should prevent traversing with /..%uF025..%uF025..%uF025..%uF025..%uF025..%uF025test-file.txt",
      "File Serving dev mode should prevent traversing with /..%uF025..%uF025..%uF025..%uF025..%uF025test-file.txt",
      "File Serving dev mode should prevent traversing with /..%uF025..%uF025..%uF025..%uF025test-file.txt",
      "File Serving dev mode should prevent traversing with /..%uF025..%uF025..%uF025test-file.txt",
      "File Serving dev mode should prevent traversing with /..%uF025..%uF025test-file.txt",
      "File Serving dev mode should prevent traversing with /..%uF025test-file.txt",
      "File Serving dev mode should prevent traversing with /........................................................................../../../../../../../../test-file.txt",
      "File Serving dev mode should prevent traversing with /........................................................................../../../../../../../test-file.txt",
      "File Serving dev mode should prevent traversing with /........................................................................../../../../../../test-file.txt",
      "File Serving dev mode should prevent traversing with /........................................................................../../../../../test-file.txt",
      "File Serving dev mode should prevent traversing with /........................................................................../../../../test-file.txt",
      "File Serving dev mode should prevent traversing with /........................................................................../../../test-file.txt",
      "File Serving dev mode should prevent traversing with /........................................................................../../test-file.txt",
      "File Serving dev mode should prevent traversing with /........................................................................../test-file.txt",
      "File Serving dev mode should prevent traversing with /..........................................................................\\..\\..\\..\\..\\..\\..\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..........................................................................\\..\\..\\..\\..\\..\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..........................................................................\\..\\..\\..\\..\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..........................................................................\\..\\..\\..\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..........................................................................\\..\\..\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..........................................................................\\..\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..........................................................................\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..........................................................................\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..../..../..../..../..../..../..../..../test-file.txt",
      "File Serving dev mode should prevent traversing with /..../..../..../..../..../..../..../test-file.txt",
      "File Serving dev mode should prevent traversing with /..../..../..../..../..../..../test-file.txt",
      "File Serving dev mode should prevent traversing with /..../..../..../..../..../test-file.txt",
      "File Serving dev mode should prevent traversing with /..../..../..../..../test-file.txt",
      "File Serving dev mode should prevent traversing with /..../..../..../test-file.txt",
      "File Serving dev mode should prevent traversing with /..../..../test-file.txt",
      "File Serving dev mode should prevent traversing with /..../test-file.txt",
      "File Serving dev mode should prevent traversing with /....\\....\\....\\....\\....\\....\\....\\....\\test-file.txt",
      "File Serving dev mode should prevent traversing with /....\\....\\....\\....\\....\\....\\....\\test-file.txt",
      "File Serving dev mode should prevent traversing with /....\\....\\....\\....\\....\\....\\test-file.txt",
      "File Serving dev mode should prevent traversing with /....\\....\\....\\....\\....\\test-file.txt",
      "File Serving dev mode should prevent traversing with /....\\....\\....\\....\\test-file.txt",
      "File Serving dev mode should prevent traversing with /....\\....\\....\\test-file.txt",
      "File Serving dev mode should prevent traversing with /....\\....\\test-file.txt",
      "File Serving dev mode should prevent traversing with /....\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.../.../.../.../.../.../.../.../test-file.txt",
      "File Serving dev mode should prevent traversing with /.../.../.../.../.../.../.../test-file.txt",
      "File Serving dev mode should prevent traversing with /.../.../.../.../.../.../test-file.txt",
      "File Serving dev mode should prevent traversing with /.../.../.../.../.../test-file.txt",
      "File Serving dev mode should prevent traversing with /.../.../.../.../test-file.txt",
      "File Serving dev mode should prevent traversing with /.../.../.../test-file.txt",
      "File Serving dev mode should prevent traversing with /.../.../test-file.txt",
      "File Serving dev mode should prevent traversing with /.../test-file.txt",
      "File Serving dev mode should prevent traversing with /...\\...\\...\\...\\...\\...\\...\\...\\test-file.txt",
      "File Serving dev mode should prevent traversing with /...\\...\\...\\...\\...\\...\\...\\test-file.txt",
      "File Serving dev mode should prevent traversing with /...\\...\\...\\...\\...\\...\\test-file.txt",
      "File Serving dev mode should prevent traversing with /...\\...\\...\\...\\...\\test-file.txt",
      "File Serving dev mode should prevent traversing with /...\\...\\...\\...\\test-file.txt",
      "File Serving dev mode should prevent traversing with /...\\...\\...\\test-file.txt",
      "File Serving dev mode should prevent traversing with /...\\...\\test-file.txt",
      "File Serving dev mode should prevent traversing with /...\\test-file.txt",
      "File Serving dev mode should prevent traversing with /../../../../../../../../test-file.txt",
      "File Serving dev mode should prevent traversing with /../../../../../../../test-file.txt",
      "File Serving dev mode should prevent traversing with /../../../../../../test-file.txt",
      "File Serving dev mode should prevent traversing with /../../../../../test-file.txt",
      "File Serving dev mode should prevent traversing with /../../../../test-file.txt",
      "File Serving dev mode should prevent traversing with /../../../test-file.txt",
      "File Serving dev mode should prevent traversing with /../..//../..//../..//../..///test-file.txt",
      "File Serving dev mode should prevent traversing with /../..//../..//../..//../..//test-file.txt",
      "File Serving dev mode should prevent traversing with /../..//../..//../..//..///test-file.txt",
      "File Serving dev mode should prevent traversing with /../..//../..//../..//../test-file.txt",
      "File Serving dev mode should prevent traversing with /../..//../..//../..///test-file.txt",
      "File Serving dev mode should prevent traversing with /../..//../..//../..//test-file.txt",
      "File Serving dev mode should prevent traversing with /../..//../..//..///test-file.txt",
      "File Serving dev mode should prevent traversing with /../..//../..//../test-file.txt",
      "File Serving dev mode should prevent traversing with /../..//../..///test-file.txt",
      "File Serving dev mode should prevent traversing with /../..//../..//test-file.txt",
      "File Serving dev mode should prevent traversing with /../..//..///test-file.txt",
      "File Serving dev mode should prevent traversing with /../..//../test-file.txt",
      "File Serving dev mode should prevent traversing with /../..///test-file.txt",
      "File Serving dev mode should prevent traversing with /../..//test-file.txt",
      "File Serving dev mode should prevent traversing with /../../test-file.txt",
      "File Serving dev mode should prevent traversing with /..//..//..//..//..//..//..//..//test-file.txt",
      "File Serving dev mode should prevent traversing with /..//..//..//..//..//..//..//test-file.txt",
      "File Serving dev mode should prevent traversing with /..//..//..//..//..//..//test-file.txt",
      "File Serving dev mode should prevent traversing with /..//..//..//..//..//test-file.txt",
      "File Serving dev mode should prevent traversing with /..//..//..//..//test-file.txt",
      "File Serving dev mode should prevent traversing with /..//..//..//test-file.txt",
      "File Serving dev mode should prevent traversing with /..//..//test-file.txt",
      "File Serving dev mode should prevent traversing with /..///..///..///..///..///..///..///..///test-file.txt",
      "File Serving dev mode should prevent traversing with /..///..///..///..///..///..///..///test-file.txt",
      "File Serving dev mode should prevent traversing with /..///..///..///..///..///..///test-file.txt",
      "File Serving dev mode should prevent traversing with /..///..///..///..///..///test-file.txt",
      "File Serving dev mode should prevent traversing with /..///..///..///..///test-file.txt",
      "File Serving dev mode should prevent traversing with /..///..///..///test-file.txt",
      "File Serving dev mode should prevent traversing with /..///..///test-file.txt",
      "File Serving dev mode should prevent traversing with /..///test-file.txt",
      "File Serving dev mode should prevent traversing with /..//test-file.txt",
      "File Serving dev mode should prevent traversing with /../test-file.txt",
      "File Serving dev mode should prevent traversing with /..0x2f..0x2f..0x2f..0x2f..0x2f..0x2f..0x2f..0x2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..0x2f..0x2f..0x2f..0x2f..0x2f..0x2f..0x2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..0x2f..0x2f..0x2f..0x2f..0x2f..0x2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..0x2f..0x2f..0x2f..0x2f..0x2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..0x2f..0x2f..0x2f..0x2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..0x2f..0x2f..0x2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..0x2f..0x2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..0x2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /..0x5c..0x5c..0x5c..0x5c..0x5c..0x5c..0x5c..0x5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..0x5c..0x5c..0x5c..0x5c..0x5c..0x5c..0x5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..0x5c..0x5c..0x5c..0x5c..0x5c..0x5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..0x5c..0x5c..0x5c..0x5c..0x5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..0x5c..0x5c..0x5c..0x5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..0x5c..0x5c..0x5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..0x5c..0x5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..0x5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /..\\..\\..\\..\\..\\..\\..\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\..\\..\\..\\..\\..\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\..\\..\\..\\..\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\..\\..\\..\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\..\\..\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\..\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\..\\\\..\\..\\\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\..\\\\..\\..\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\..\\\\..\\\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\..\\\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\..\\\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\..\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\..\\\\..\\..\\\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\..\\\\..\\..\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\..\\\\..\\\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\..\\\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\..\\\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\..\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\\\..\\\\..\\\\..\\\\..\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\\\..\\\\..\\\\..\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\\\..\\\\..\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\\\..\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\\\\\..\\\\\\..\\\\\\..\\\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\\\\\..\\\\\\..\\\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\\\\\..\\\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /./.././.././.././.././.././.././.././../test-file.txt",
      "File Serving dev mode should prevent traversing with /./.././.././.././.././.././.././../test-file.txt",
      "File Serving dev mode should prevent traversing with /./.././.././.././.././.././../test-file.txt",
      "File Serving dev mode should prevent traversing with /./.././.././.././.././../test-file.txt",
      "File Serving dev mode should prevent traversing with /./.././.././.././../test-file.txt",
      "File Serving dev mode should prevent traversing with /./.././.././../test-file.txt",
      "File Serving dev mode should prevent traversing with /./.././../test-file.txt",
      "File Serving dev mode should prevent traversing with /./../test-file.txt",
      "File Serving dev mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../../../../../../../../test-file.txt",
      "File Serving dev mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../../../../../../../test-file.txt",
      "File Serving dev mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../../../../../../test-file.txt",
      "File Serving dev mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../../../../../test-file.txt",
      "File Serving dev mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../../../../test-file.txt",
      "File Serving dev mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../../../test-file.txt",
      "File Serving dev mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../../test-file.txt",
      "File Serving dev mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../test-file.txt",
      "File Serving dev mode should prevent traversing with /.//..//.//..//.//..//.//..//.//..//.//..//.//..//.//..//test-file.txt",
      "File Serving dev mode should prevent traversing with /.//..//.//..//.//..//.//..//.//..//.//..//.//..//test-file.txt",
      "File Serving dev mode should prevent traversing with /.//..//.//..//.//..//.//..//.//..//.//..//test-file.txt",
      "File Serving dev mode should prevent traversing with /.//..//.//..//.//..//.//..//.//..//test-file.txt",
      "File Serving dev mode should prevent traversing with /.//..//.//..//.//..//.//..//test-file.txt",
      "File Serving dev mode should prevent traversing with /.//..//.//..//.//..//test-file.txt",
      "File Serving dev mode should prevent traversing with /.//..//.//..//test-file.txt",
      "File Serving dev mode should prevent traversing with /.//..//test-file.txt",
      "File Serving dev mode should prevent traversing with /./\\/././\\/././\\/././\\/././\\/././\\/././\\/././\\/./test-file.txt",
      "File Serving dev mode should prevent traversing with /./\\/././\\/././\\/././\\/././\\/././\\/././\\/./test-file.txt",
      "File Serving dev mode should prevent traversing with /./\\/././\\/././\\/././\\/././\\/././\\/./test-file.txt",
      "File Serving dev mode should prevent traversing with /./\\/././\\/././\\/././\\/././\\/./test-file.txt",
      "File Serving dev mode should prevent traversing with /./\\/././\\/././\\/././\\/./test-file.txt",
      "File Serving dev mode should prevent traversing with /./\\/././\\/././\\/./test-file.txt",
      "File Serving dev mode should prevent traversing with /./\\/././\\/./test-file.txt",
      "File Serving dev mode should prevent traversing with /./\\/./test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\..\\.\\..\\.\\..\\.\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\..\\.\\..\\.\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\..\\.\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\..\\..\\..\\..\\..\\..\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\..\\..\\..\\..\\..\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\..\\..\\..\\..\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\..\\..\\..\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\..\\..\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\..\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\/\\.\\.\\/\\.\\.\\/\\.\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\/\\.\\.\\/\\.\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\/\\.\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\\\..\\\\.\\\\..\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with /.\\\\..\\\\test-file.txt",
      "File Serving dev mode should prevent traversing with //..\\/..\\/..\\/..\\/..\\/..\\/..\\/..\\test-file.txt",
      "File Serving dev mode should prevent traversing with //..\\/..\\/..\\/..\\/..\\/..\\/..\\test-file.txt",
      "File Serving dev mode should prevent traversing with //..\\/..\\/..\\/..\\/..\\/..\\test-file.txt",
      "File Serving dev mode should prevent traversing with //..\\/..\\/..\\/..\\/..\\test-file.txt",
      "File Serving dev mode should prevent traversing with //..\\/..\\/..\\/..\\test-file.txt",
      "File Serving dev mode should prevent traversing with //..\\/..\\/..\\test-file.txt",
      "File Serving dev mode should prevent traversing with //..\\/..\\test-file.txt",
      "File Serving dev mode should prevent traversing with //..\\test-file.txt",
      "File Serving dev mode should prevent traversing with ////%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with ////%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with ////%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with ////%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with ////%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with ////%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with ////%2e%2e%2f%2e%2e%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with ////%2e%2e%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/test-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/test-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/test-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/test-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/test-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e/0x2e0x2e/0x2e0x2e/test-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e/0x2e0x2e/test-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e/test-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e0x2f0x2e0x2e0x2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e0x2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e0x5c0x2e0x2e0x5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e0x5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e\\0x2e0x2e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /0x2e0x2e\\test-file.txt",
      "File Serving dev mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../../../../../../../test-file.txt",
      "File Serving dev mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../../../../../../test-file.txt",
      "File Serving dev mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../../../../../test-file.txt",
      "File Serving dev mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../../../../test-file.txt",
      "File Serving dev mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../../../test-file.txt",
      "File Serving dev mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../../test-file.txt",
      "File Serving dev mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../test-file.txt",
      "File Serving dev mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../test-file.txt",
      "File Serving dev mode should prevent traversing withtest-file.txt",
      "File Serving dev mode should prevent traversing withtest-file.txt",
      "File Serving dev mode should prevent traversing withtest-file.txt",
      "File Serving dev mode should prevent traversing withtest-file.txt",
      "File Serving dev mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../../../test-file.txt",
      "File Serving dev mode should prevent traversing withtest-file.txt",
      "File Serving dev mode should prevent traversing withtest-file.txt",
      "File Serving dev mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../test-file.txt",
      "File Serving dev mode should prevent traversing withtest-file.txt",
      "File Serving dev mode should prevent traversing withtest-file.txt",
      "File Serving dev mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\..\\..\\..\\..\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing withtest-file.txt",
      "File Serving dev mode should prevent traversing withtest-file.txt",
      "File Serving dev mode should prevent traversing withtest-file.txt",
      "File Serving dev mode should prevent traversing withtest-file.txt",
      "File Serving dev mode should prevent traversing withtest-file.txt",
      "File Serving dev mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\..\\..\\..\\..\\..\\..\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\..\\..\\..\\..\\..\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\..\\..\\..\\..\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\..\\..\\..\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\..\\..\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\..\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\test-file.txt",
      "File Serving dev mode should prevent traversing with /\\..%2f",
      "File Serving dev mode should prevent traversing with /\\..%2f\\..%2f",
      "File Serving dev mode should prevent traversing with /\\..%2f\\..%2f\\..%2f",
      "File Serving dev mode should prevent traversing with /\\..%2f\\..%2f\\..%2f\\..%2f",
      "File Serving dev mode should prevent traversing with /\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f",
      "File Serving dev mode should prevent traversing with /\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f",
      "File Serving dev mode should prevent traversing with /\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f",
      "File Serving dev mode should prevent traversing with /\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f\\..%2ftest-file.txt",
      "File Serving dev mode should prevent traversing with /\\../\\../\\../\\../\\../\\../\\../\\../test-file.txt",
      "File Serving dev mode should prevent traversing with /\\../\\../\\../\\../\\../\\../\\../test-file.txt",
      "File Serving dev mode should prevent traversing with /\\../\\../\\../\\../\\../\\../test-file.txt",
      "File Serving dev mode should prevent traversing with /\\../\\../\\../\\../\\../test-file.txt",
      "File Serving dev mode should prevent traversing with /\\../\\../\\../\\../test-file.txt",
      "File Serving dev mode should prevent traversing with /\\../\\../\\../test-file.txt",
      "File Serving dev mode should prevent traversing with /\\../\\../test-file.txt",
      "File Serving dev mode should prevent traversing with /\\../test-file.txt",
      "File Serving dev mode should prevent traversing with /\\\\\\%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /\\\\\\%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /\\\\\\%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /\\\\\\%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /\\\\\\%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /\\\\\\%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /\\\\\\%2e%2e%5c%2e%2e%5ctest-file.txt",
      "File Serving dev mode should prevent traversing with /\\\\\\%2e%2e%5ctest-file.txt",
      "File Serving dev mode should serve avif image with correct content-type",
      "File Serving dev mode should serve correct error code",
      "File Serving dev mode should serve file with space correctly from public/",
      "File Serving dev mode should serve file with space correctly static/",
      "File Serving production mode should prevent traversing with /%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66test-file.txt",
      "File Serving production mode should prevent traversing with /%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66test-file.txt",
      "File Serving production mode should prevent traversing with /%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66test-file.txt",
      "File Serving production mode should prevent traversing with /%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66test-file.txt",
      "File Serving production mode should prevent traversing with /%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66test-file.txt",
      "File Serving production mode should prevent traversing with /%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66test-file.txt",
      "File Serving production mode should prevent traversing with /%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66test-file.txt",
      "File Serving production mode should prevent traversing with /%%32%65%%32%65%%32%66test-file.txt",
      "File Serving production mode should prevent traversing with /%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63test-file.txt",
      "File Serving production mode should prevent traversing with /%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63test-file.txt",
      "File Serving production mode should prevent traversing with /%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63test-file.txt",
      "File Serving production mode should prevent traversing with /%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63test-file.txt",
      "File Serving production mode should prevent traversing with /%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63test-file.txt",
      "File Serving production mode should prevent traversing with /%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63test-file.txt",
      "File Serving production mode should prevent traversing with /%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63test-file.txt",
      "File Serving production mode should prevent traversing with /%%32%65%%32%65%%35%63test-file.txt",
      "File Serving production mode should prevent traversing with /%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/test-file.txt",
      "File Serving production mode should prevent traversing with /%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/test-file.txt",
      "File Serving production mode should prevent traversing with /%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/test-file.txt",
      "File Serving production mode should prevent traversing with /%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/test-file.txt",
      "File Serving production mode should prevent traversing with /%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/test-file.txt",
      "File Serving production mode should prevent traversing with /%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/test-file.txt",
      "File Serving production mode should prevent traversing with /%%32%65%%32%65/%%32%65%%32%65/test-file.txt",
      "File Serving production mode should prevent traversing with /%%32%65%%32%65/test-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252ftest-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252ftest-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252ftest-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252ftest-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252ftest-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e%252f%252e%252e%252f%252e%252e%252ftest-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e%252f%252e%252e%252ftest-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e%252ftest-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255ctest-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255ctest-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255ctest-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255ctest-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255ctest-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e%255c%252e%252e%255c%252e%252e%255ctest-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e%255c%252e%252e%255ctest-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e%255ctest-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/test-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/test-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/test-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/test-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e/%252e%252e/%252e%252e/%252e%252e/test-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e/%252e%252e/%252e%252e/test-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e/%252e%252e/test-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e/test-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\test-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\test-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\test-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\test-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\test-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e\\%252e%252e\\%252e%252e\\test-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e\\%252e%252e\\test-file.txt",
      "File Serving production mode should prevent traversing with /%252e%252e\\test-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/test-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/test-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/test-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/test-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/test-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/test-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/test-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae/test-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\test-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\test-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\test-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\test-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\test-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\test-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\test-file.txt",
      "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae\\test-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e%2f%2e%2e%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e%5c%2e%2e%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/test-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/test-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/test-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/test-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e/%2e%2e/%2e%2e/%2e%2e/test-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e/%2e%2e/%2e%2e/test-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e/%2e%2e/test-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e/test-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\test-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\test-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\test-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\test-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\test-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e\\%2e%2e\\%2e%2e\\test-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e\\%2e%2e\\test-file.txt",
      "File Serving production mode should prevent traversing with /%2e%2e\\test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e/%c0%2e%c0%2e/test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e/test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e\\%c0%2e%c0%2e\\test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%2e%c0%2e\\test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%aftest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%aftest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%aftest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%aftest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%aftest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%aftest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%aftest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c0%aftest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9ctest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9ctest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9ctest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9ctest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9ctest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9ctest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9ctest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c1%9ctest-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae/%c0%ae%c0%ae/test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae/test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae\\%c0%ae%c0%ae\\test-file.txt",
      "File Serving production mode should prevent traversing with /%c0%ae%c0%ae\\test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2215%uff0e%uff0e%u2215test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2215test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2216%uff0e%uff0e%u2216test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2216test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e/%uff0e%uff0e/test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e/test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e\\%uff0e%uff0e\\test-file.txt",
      "File Serving production mode should prevent traversing with /%uff0e%uff0e\\test-file.txt",
      "File Serving production mode should prevent traversing with /..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66test-file.txt",
      "File Serving production mode should prevent traversing with /..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66test-file.txt",
      "File Serving production mode should prevent traversing with /..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66test-file.txt",
      "File Serving production mode should prevent traversing with /..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66test-file.txt",
      "File Serving production mode should prevent traversing with /..%%32%66..%%32%66..%%32%66..%%32%66test-file.txt",
      "File Serving production mode should prevent traversing with /..%%32%66..%%32%66..%%32%66test-file.txt",
      "File Serving production mode should prevent traversing with /..%%32%66..%%32%66test-file.txt",
      "File Serving production mode should prevent traversing with /..%%32%66test-file.txt",
      "File Serving production mode should prevent traversing with /..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63test-file.txt",
      "File Serving production mode should prevent traversing with /..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63test-file.txt",
      "File Serving production mode should prevent traversing with /..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63test-file.txt",
      "File Serving production mode should prevent traversing with /..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63test-file.txt",
      "File Serving production mode should prevent traversing with /..%%35%63..%%35%63..%%35%63..%%35%63test-file.txt",
      "File Serving production mode should prevent traversing with /..%%35%63..%%35%63..%%35%63test-file.txt",
      "File Serving production mode should prevent traversing with /..%%35%63..%%35%63test-file.txt",
      "File Serving production mode should prevent traversing with /..%%35%63test-file.txt",
      "File Serving production mode should prevent traversing with /..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252ftest-file.txt",
      "File Serving production mode should prevent traversing with /..%252f..%252f..%252f..%252f..%252f..%252f..%252ftest-file.txt",
      "File Serving production mode should prevent traversing with /..%252f..%252f..%252f..%252f..%252f..%252ftest-file.txt",
      "File Serving production mode should prevent traversing with /..%252f..%252f..%252f..%252f..%252ftest-file.txt",
      "File Serving production mode should prevent traversing with /..%252f..%252f..%252f..%252ftest-file.txt",
      "File Serving production mode should prevent traversing with /..%252f..%252f..%252ftest-file.txt",
      "File Serving production mode should prevent traversing with /..%252f..%252ftest-file.txt",
      "File Serving production mode should prevent traversing with /..%252ftest-file.txt",
      "File Serving production mode should prevent traversing with /..%255c..%255c..%255c..%255c..%255c..%255c..%255c..%255ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%255c..%255c..%255c..%255c..%255c..%255c..%255ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%255c..%255c..%255c..%255c..%255c..%255ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%255c..%255c..%255c..%255c..%255ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%255c..%255c..%255c..%255ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%255c..%255c..%255ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%255c..%255ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%255ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25aftest-file.txt",
      "File Serving production mode should prevent traversing with /..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25aftest-file.txt",
      "File Serving production mode should prevent traversing with /..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25aftest-file.txt",
      "File Serving production mode should prevent traversing with /..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25aftest-file.txt",
      "File Serving production mode should prevent traversing with /..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25aftest-file.txt",
      "File Serving production mode should prevent traversing with /..%25c0%25af..%25c0%25af..%25c0%25aftest-file.txt",
      "File Serving production mode should prevent traversing with /..%25c0%25af..%25c0%25aftest-file.txt",
      "File Serving production mode should prevent traversing with /..%25c0%25aftest-file.txt",
      "File Serving production mode should prevent traversing with /..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%25c1%259c..%25c1%259c..%25c1%259ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%25c1%259c..%25c1%259ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%25c1%259ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /..%2f..%2f..%2f..%2f..%2f..%2f..%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /..%2f..%2f..%2f..%2f..%2f..%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /..%2f..%2f..%2f..%2f..%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /..%2f..%2f..%2f..%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /..%2f..%2f..%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /..%2f..%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /..%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /..%5c..%5c..%5c..%5c..%5c..%5c..%5c..%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%5c..%5c..%5c..%5c..%5c..%5c..%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%5c..%5c..%5c..%5c..%5c..%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%5c..%5c..%5c..%5c..%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%5c..%5c..%5c..%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%5c..%5c..%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%5c..%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /..%c0%2f..%c0%2f..%c0%2f..%c0%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /..%c0%2f..%c0%2f..%c0%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /..%c0%2f..%c0%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /..%c0%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%c0%5c..%c0%5c..%c0%5c..%c0%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%c0%5c..%c0%5c..%c0%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%c0%5c..%c0%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%c0%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%aftest-file.txt",
      "File Serving production mode should prevent traversing with /..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%aftest-file.txt",
      "File Serving production mode should prevent traversing with /..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%aftest-file.txt",
      "File Serving production mode should prevent traversing with /..%c0%af..%c0%af..%c0%af..%c0%af..%c0%aftest-file.txt",
      "File Serving production mode should prevent traversing with /..%c0%af..%c0%af..%c0%af..%c0%aftest-file.txt",
      "File Serving production mode should prevent traversing with /..%c0%af..%c0%af..%c0%aftest-file.txt",
      "File Serving production mode should prevent traversing with /..%c0%af..%c0%aftest-file.txt",
      "File Serving production mode should prevent traversing with /..%c0%aftest-file.txt",
      "File Serving production mode should prevent traversing with /..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%c1%9c..%c1%9c..%c1%9c..%c1%9ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%c1%9c..%c1%9c..%c1%9ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%c1%9c..%c1%9ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%c1%9ctest-file.txt",
      "File Serving production mode should prevent traversing with /..%u2215..%u2215..%u2215..%u2215..%u2215..%u2215..%u2215..%u2215test-file.txt",
      "File Serving production mode should prevent traversing with /..%u2215..%u2215..%u2215..%u2215..%u2215..%u2215..%u2215test-file.txt",
      "File Serving production mode should prevent traversing with /..%u2215..%u2215..%u2215..%u2215..%u2215..%u2215test-file.txt",
      "File Serving production mode should prevent traversing with /..%u2215..%u2215..%u2215..%u2215..%u2215test-file.txt",
      "File Serving production mode should prevent traversing with /..%u2215..%u2215..%u2215..%u2215test-file.txt",
      "File Serving production mode should prevent traversing with /..%u2215..%u2215..%u2215test-file.txt",
      "File Serving production mode should prevent traversing with /..%u2215..%u2215test-file.txt",
      "File Serving production mode should prevent traversing with /..%u2215test-file.txt",
      "File Serving production mode should prevent traversing with /..%u2216..%u2216..%u2216..%u2216..%u2216..%u2216..%u2216..%u2216test-file.txt",
      "File Serving production mode should prevent traversing with /..%u2216..%u2216..%u2216..%u2216..%u2216..%u2216..%u2216test-file.txt",
      "File Serving production mode should prevent traversing with /..%u2216..%u2216..%u2216..%u2216..%u2216..%u2216test-file.txt",
      "File Serving production mode should prevent traversing with /..%u2216..%u2216..%u2216..%u2216..%u2216test-file.txt",
      "File Serving production mode should prevent traversing with /..%u2216..%u2216..%u2216..%u2216test-file.txt",
      "File Serving production mode should prevent traversing with /..%u2216..%u2216..%u2216test-file.txt",
      "File Serving production mode should prevent traversing with /..%u2216..%u2216test-file.txt",
      "File Serving production mode should prevent traversing with /..%u2216test-file.txt",
      "File Serving production mode should prevent traversing with /..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8test-file.txt",
      "File Serving production mode should prevent traversing with /..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8test-file.txt",
      "File Serving production mode should prevent traversing with /..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8test-file.txt",
      "File Serving production mode should prevent traversing with /..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8test-file.txt",
      "File Serving production mode should prevent traversing with /..%uEFC8..%uEFC8..%uEFC8..%uEFC8test-file.txt",
      "File Serving production mode should prevent traversing with /..%uEFC8..%uEFC8..%uEFC8test-file.txt",
      "File Serving production mode should prevent traversing with /..%uEFC8..%uEFC8test-file.txt",
      "File Serving production mode should prevent traversing with /..%uEFC8test-file.txt",
      "File Serving production mode should prevent traversing with /..%uF025..%uF025..%uF025..%uF025..%uF025..%uF025..%uF025..%uF025test-file.txt",
      "File Serving production mode should prevent traversing with /..%uF025..%uF025..%uF025..%uF025..%uF025..%uF025..%uF025test-file.txt",
      "File Serving production mode should prevent traversing with /..%uF025..%uF025..%uF025..%uF025..%uF025..%uF025test-file.txt",
      "File Serving production mode should prevent traversing with /..%uF025..%uF025..%uF025..%uF025..%uF025test-file.txt",
      "File Serving production mode should prevent traversing with /..%uF025..%uF025..%uF025..%uF025test-file.txt",
      "File Serving production mode should prevent traversing with /..%uF025..%uF025..%uF025test-file.txt",
      "File Serving production mode should prevent traversing with /..%uF025..%uF025test-file.txt",
      "File Serving production mode should prevent traversing with /..%uF025test-file.txt",
      "File Serving production mode should prevent traversing with /........................................................................../../../../../../../../test-file.txt",
      "File Serving production mode should prevent traversing with /........................................................................../../../../../../../test-file.txt",
      "File Serving production mode should prevent traversing with /........................................................................../../../../../../test-file.txt",
      "File Serving production mode should prevent traversing with /........................................................................../../../../../test-file.txt",
      "File Serving production mode should prevent traversing with /........................................................................../../../../test-file.txt",
      "File Serving production mode should prevent traversing with /........................................................................../../../test-file.txt",
      "File Serving production mode should prevent traversing with /........................................................................../../test-file.txt",
      "File Serving production mode should prevent traversing with /........................................................................../test-file.txt",
      "File Serving production mode should prevent traversing with /..........................................................................\\..\\..\\..\\..\\..\\..\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /..........................................................................\\..\\..\\..\\..\\..\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /..........................................................................\\..\\..\\..\\..\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /..........................................................................\\..\\..\\..\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /..........................................................................\\..\\..\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /..........................................................................\\..\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /..........................................................................\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /..........................................................................\\test-file.txt",
      "File Serving production mode should prevent traversing with /..../..../..../..../..../..../..../..../test-file.txt",
      "File Serving production mode should prevent traversing with /..../..../..../..../..../..../..../test-file.txt",
      "File Serving production mode should prevent traversing with /..../..../..../..../..../..../test-file.txt",
      "File Serving production mode should prevent traversing with /..../..../..../..../..../test-file.txt",
      "File Serving production mode should prevent traversing with /..../..../..../..../test-file.txt",
      "File Serving production mode should prevent traversing with /..../..../..../test-file.txt",
      "File Serving production mode should prevent traversing with /..../..../test-file.txt",
      "File Serving production mode should prevent traversing with /..../test-file.txt",
      "File Serving production mode should prevent traversing with /....\\....\\....\\....\\....\\....\\....\\....\\test-file.txt",
      "File Serving production mode should prevent traversing with /....\\....\\....\\....\\....\\....\\....\\test-file.txt",
      "File Serving production mode should prevent traversing with /....\\....\\....\\....\\....\\....\\test-file.txt",
      "File Serving production mode should prevent traversing with /....\\....\\....\\....\\....\\test-file.txt",
      "File Serving production mode should prevent traversing with /....\\....\\....\\....\\test-file.txt",
      "File Serving production mode should prevent traversing with /....\\....\\....\\test-file.txt",
      "File Serving production mode should prevent traversing with /....\\....\\test-file.txt",
      "File Serving production mode should prevent traversing with /....\\test-file.txt",
      "File Serving production mode should prevent traversing with /.../.../.../.../.../.../.../.../test-file.txt",
      "File Serving production mode should prevent traversing with /.../.../.../.../.../.../.../test-file.txt",
      "File Serving production mode should prevent traversing with /.../.../.../.../.../.../test-file.txt",
      "File Serving production mode should prevent traversing with /.../.../.../.../.../test-file.txt",
      "File Serving production mode should prevent traversing with /.../.../.../.../test-file.txt",
      "File Serving production mode should prevent traversing with /.../.../.../test-file.txt",
      "File Serving production mode should prevent traversing with /.../.../test-file.txt",
      "File Serving production mode should prevent traversing with /.../test-file.txt",
      "File Serving production mode should prevent traversing with /...\\...\\...\\...\\...\\...\\...\\...\\test-file.txt",
      "File Serving production mode should prevent traversing with /...\\...\\...\\...\\...\\...\\...\\test-file.txt",
      "File Serving production mode should prevent traversing with /...\\...\\...\\...\\...\\...\\test-file.txt",
      "File Serving production mode should prevent traversing with /...\\...\\...\\...\\...\\test-file.txt",
      "File Serving production mode should prevent traversing with /...\\...\\...\\...\\test-file.txt",
      "File Serving production mode should prevent traversing with /...\\...\\...\\test-file.txt",
      "File Serving production mode should prevent traversing with /...\\...\\test-file.txt",
      "File Serving production mode should prevent traversing with /...\\test-file.txt",
      "File Serving production mode should prevent traversing with /../../../../../../../../test-file.txt",
      "File Serving production mode should prevent traversing with /../../../../../../../test-file.txt",
      "File Serving production mode should prevent traversing with /../../../../../../test-file.txt",
      "File Serving production mode should prevent traversing with /../../../../../test-file.txt",
      "File Serving production mode should prevent traversing with /../../../../test-file.txt",
      "File Serving production mode should prevent traversing with /../../../test-file.txt",
      "File Serving production mode should prevent traversing with /../..//../..//../..//../..///test-file.txt",
      "File Serving production mode should prevent traversing with /../..//../..//../..//../..//test-file.txt",
      "File Serving production mode should prevent traversing with /../..//../..//../..//..///test-file.txt",
      "File Serving production mode should prevent traversing with /../..//../..//../..//../test-file.txt",
      "File Serving production mode should prevent traversing with /../..//../..//../..///test-file.txt",
      "File Serving production mode should prevent traversing with /../..//../..//../..//test-file.txt",
      "File Serving production mode should prevent traversing with /../..//../..//..///test-file.txt",
      "File Serving production mode should prevent traversing with /../..//../..//../test-file.txt",
      "File Serving production mode should prevent traversing with /../..//../..///test-file.txt",
      "File Serving production mode should prevent traversing with /../..//../..//test-file.txt",
      "File Serving production mode should prevent traversing with /../..//..///test-file.txt",
      "File Serving production mode should prevent traversing with /../..//../test-file.txt",
      "File Serving production mode should prevent traversing with /../..///test-file.txt",
      "File Serving production mode should prevent traversing with /../..//test-file.txt",
      "File Serving production mode should prevent traversing with /../../test-file.txt",
      "File Serving production mode should prevent traversing with /..//..//..//..//..//..//..//..//test-file.txt",
      "File Serving production mode should prevent traversing with /..//..//..//..//..//..//..//test-file.txt",
      "File Serving production mode should prevent traversing with /..//..//..//..//..//..//test-file.txt",
      "File Serving production mode should prevent traversing with /..//..//..//..//..//test-file.txt",
      "File Serving production mode should prevent traversing with /..//..//..//..//test-file.txt",
      "File Serving production mode should prevent traversing with /..//..//..//test-file.txt",
      "File Serving production mode should prevent traversing with /..//..//test-file.txt",
      "File Serving production mode should prevent traversing with /..///..///..///..///..///..///..///..///test-file.txt",
      "File Serving production mode should prevent traversing with /..///..///..///..///..///..///..///test-file.txt",
      "File Serving production mode should prevent traversing with /..///..///..///..///..///..///test-file.txt",
      "File Serving production mode should prevent traversing with /..///..///..///..///..///test-file.txt",
      "File Serving production mode should prevent traversing with /..///..///..///..///test-file.txt",
      "File Serving production mode should prevent traversing with /..///..///..///test-file.txt",
      "File Serving production mode should prevent traversing with /..///..///test-file.txt",
      "File Serving production mode should prevent traversing with /..///test-file.txt",
      "File Serving production mode should prevent traversing with /..//test-file.txt",
      "File Serving production mode should prevent traversing with /../test-file.txt",
      "File Serving production mode should prevent traversing with /..0x2f..0x2f..0x2f..0x2f..0x2f..0x2f..0x2f..0x2ftest-file.txt",
      "File Serving production mode should prevent traversing with /..0x2f..0x2f..0x2f..0x2f..0x2f..0x2f..0x2ftest-file.txt",
      "File Serving production mode should prevent traversing with /..0x2f..0x2f..0x2f..0x2f..0x2f..0x2ftest-file.txt",
      "File Serving production mode should prevent traversing with /..0x2f..0x2f..0x2f..0x2f..0x2ftest-file.txt",
      "File Serving production mode should prevent traversing with /..0x2f..0x2f..0x2f..0x2ftest-file.txt",
      "File Serving production mode should prevent traversing with /..0x2f..0x2f..0x2ftest-file.txt",
      "File Serving production mode should prevent traversing with /..0x2f..0x2ftest-file.txt",
      "File Serving production mode should prevent traversing with /..0x2ftest-file.txt",
      "File Serving production mode should prevent traversing with /..0x5c..0x5c..0x5c..0x5c..0x5c..0x5c..0x5c..0x5ctest-file.txt",
      "File Serving production mode should prevent traversing with /..0x5c..0x5c..0x5c..0x5c..0x5c..0x5c..0x5ctest-file.txt",
      "File Serving production mode should prevent traversing with /..0x5c..0x5c..0x5c..0x5c..0x5c..0x5ctest-file.txt",
      "File Serving production mode should prevent traversing with /..0x5c..0x5c..0x5c..0x5c..0x5ctest-file.txt",
      "File Serving production mode should prevent traversing with /..0x5c..0x5c..0x5c..0x5ctest-file.txt",
      "File Serving production mode should prevent traversing with /..0x5c..0x5c..0x5ctest-file.txt",
      "File Serving production mode should prevent traversing with /..0x5c..0x5ctest-file.txt",
      "File Serving production mode should prevent traversing with /..0x5ctest-file.txt",
      "File Serving production mode should prevent traversing with /..\\..\\..\\..\\..\\..\\..\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\..\\..\\..\\..\\..\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\..\\..\\..\\..\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\..\\..\\..\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\..\\..\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\..\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\..\\\\..\\..\\\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\..\\\\..\\..\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\..\\\\..\\\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\..\\\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\..\\\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\..\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\..\\\\..\\..\\\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\..\\\\..\\..\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\..\\\\..\\\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\..\\\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\..\\\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\..\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\\\..\\\\..\\\\..\\\\..\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\\\..\\\\..\\\\..\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\\\..\\\\..\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\\\..\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\\\\\..\\\\\\..\\\\\\..\\\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\\\\\..\\\\\\..\\\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\\\\\..\\\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /..\\test-file.txt",
      "File Serving production mode should prevent traversing with /./.././.././.././.././.././.././.././../test-file.txt",
      "File Serving production mode should prevent traversing with /./.././.././.././.././.././.././../test-file.txt",
      "File Serving production mode should prevent traversing with /./.././.././.././.././.././../test-file.txt",
      "File Serving production mode should prevent traversing with /./.././.././.././.././../test-file.txt",
      "File Serving production mode should prevent traversing with /./.././.././.././../test-file.txt",
      "File Serving production mode should prevent traversing with /./.././.././../test-file.txt",
      "File Serving production mode should prevent traversing with /./.././../test-file.txt",
      "File Serving production mode should prevent traversing with /./../test-file.txt",
      "File Serving production mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../../../../../../../../test-file.txt",
      "File Serving production mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../../../../../../../test-file.txt",
      "File Serving production mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../../../../../../test-file.txt",
      "File Serving production mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../../../../../test-file.txt",
      "File Serving production mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../../../../test-file.txt",
      "File Serving production mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../../../test-file.txt",
      "File Serving production mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../../test-file.txt",
      "File Serving production mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../test-file.txt",
      "File Serving production mode should prevent traversing with /.//..//.//..//.//..//.//..//.//..//.//..//.//..//.//..//test-file.txt",
      "File Serving production mode should prevent traversing with /.//..//.//..//.//..//.//..//.//..//.//..//.//..//test-file.txt",
      "File Serving production mode should prevent traversing with /.//..//.//..//.//..//.//..//.//..//.//..//test-file.txt",
      "File Serving production mode should prevent traversing with /.//..//.//..//.//..//.//..//.//..//test-file.txt",
      "File Serving production mode should prevent traversing with /.//..//.//..//.//..//.//..//test-file.txt",
      "File Serving production mode should prevent traversing with /.//..//.//..//.//..//test-file.txt",
      "File Serving production mode should prevent traversing with /.//..//.//..//test-file.txt",
      "File Serving production mode should prevent traversing with /.//..//test-file.txt",
      "File Serving production mode should prevent traversing with /./\\/././\\/././\\/././\\/././\\/././\\/././\\/././\\/./test-file.txt",
      "File Serving production mode should prevent traversing with /./\\/././\\/././\\/././\\/././\\/././\\/././\\/./test-file.txt",
      "File Serving production mode should prevent traversing with /./\\/././\\/././\\/././\\/././\\/././\\/./test-file.txt",
      "File Serving production mode should prevent traversing with /./\\/././\\/././\\/././\\/././\\/./test-file.txt",
      "File Serving production mode should prevent traversing with /./\\/././\\/././\\/././\\/./test-file.txt",
      "File Serving production mode should prevent traversing with /./\\/././\\/././\\/./test-file.txt",
      "File Serving production mode should prevent traversing with /./\\/././\\/./test-file.txt",
      "File Serving production mode should prevent traversing with /./\\/./test-file.txt",
      "File Serving production mode should prevent traversing with /.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /.\\..\\.\\..\\.\\..\\.\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /.\\..\\.\\..\\.\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /.\\..\\.\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /.\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\..\\..\\..\\..\\..\\..\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\..\\..\\..\\..\\..\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\..\\..\\..\\..\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\..\\..\\..\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\..\\..\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\..\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\test-file.txt",
      "File Serving production mode should prevent traversing with /.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\test-file.txt",
      "File Serving production mode should prevent traversing with /.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\test-file.txt",
      "File Serving production mode should prevent traversing with /.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\test-file.txt",
      "File Serving production mode should prevent traversing with /.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\test-file.txt",
      "File Serving production mode should prevent traversing with /.\\/\\.\\.\\/\\.\\.\\/\\.\\test-file.txt",
      "File Serving production mode should prevent traversing with /.\\/\\.\\.\\/\\.\\test-file.txt",
      "File Serving production mode should prevent traversing with /.\\/\\.\\test-file.txt",
      "File Serving production mode should prevent traversing with /.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /.\\\\..\\\\.\\\\..\\\\test-file.txt",
      "File Serving production mode should prevent traversing with /.\\\\..\\\\test-file.txt",
      "File Serving production mode should prevent traversing with //..\\/..\\/..\\/..\\/..\\/..\\/..\\/..\\test-file.txt",
      "File Serving production mode should prevent traversing with //..\\/..\\/..\\/..\\/..\\/..\\/..\\test-file.txt",
      "File Serving production mode should prevent traversing with //..\\/..\\/..\\/..\\/..\\/..\\test-file.txt",
      "File Serving production mode should prevent traversing with //..\\/..\\/..\\/..\\/..\\test-file.txt",
      "File Serving production mode should prevent traversing with //..\\/..\\/..\\/..\\test-file.txt",
      "File Serving production mode should prevent traversing with //..\\/..\\/..\\test-file.txt",
      "File Serving production mode should prevent traversing with //..\\/..\\test-file.txt",
      "File Serving production mode should prevent traversing with //..\\test-file.txt",
      "File Serving production mode should prevent traversing with ////%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
      "File Serving production mode should prevent traversing with ////%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
      "File Serving production mode should prevent traversing with ////%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
      "File Serving production mode should prevent traversing with ////%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
      "File Serving production mode should prevent traversing with ////%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
      "File Serving production mode should prevent traversing with ////%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
      "File Serving production mode should prevent traversing with ////%2e%2e%2f%2e%2e%2ftest-file.txt",
      "File Serving production mode should prevent traversing with ////%2e%2e%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/test-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/test-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/test-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/test-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/test-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e/0x2e0x2e/0x2e0x2e/test-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e/0x2e0x2e/test-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e/test-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2ftest-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2ftest-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2ftest-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2ftest-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2ftest-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2ftest-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e0x2f0x2e0x2e0x2ftest-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e0x2ftest-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5ctest-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5ctest-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5ctest-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5ctest-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5ctest-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5ctest-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e0x5c0x2e0x2e0x5ctest-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e0x5ctest-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\test-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\test-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\test-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\test-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\test-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\test-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e\\0x2e0x2e\\test-file.txt",
      "File Serving production mode should prevent traversing with /0x2e0x2e\\test-file.txt",
      "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../../../../../../../test-file.txt",
      "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../../../../../../test-file.txt",
      "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../../../../../test-file.txt",
      "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../../../../test-file.txt",
      "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../../../test-file.txt",
      "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../../test-file.txt",
      "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../test-file.txt",
      "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../test-file.txt",
      "File Serving production mode should prevent traversing withtest-file.txt",
      "File Serving production mode should prevent traversing withtest-file.txt",
      "File Serving production mode should prevent traversing withtest-file.txt",
      "File Serving production mode should prevent traversing withtest-file.txt",
      "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../../../test-file.txt",
      "File Serving production mode should prevent traversing withtest-file.txt",
      "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../test-file.txt",
      "File Serving production mode should prevent traversing withtest-file.txt",
      "File Serving production mode should prevent traversing withtest-file.txt",
      "File Serving production mode should prevent traversing withtest-file.txt",
      "File Serving production mode should prevent traversing withtest-file.txt",
      "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\..\\..\\..\\..\\test-file.txt",
      "File Serving production mode should prevent traversing withtest-file.txt",
      "File Serving production mode should prevent traversing withtest-file.txt",
      "File Serving production mode should prevent traversing withtest-file.txt",
      "File Serving production mode should prevent traversing withtest-file.txt",
      "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\..\\..\\..\\..\\..\\..\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\..\\..\\..\\..\\..\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\..\\..\\..\\..\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\..\\..\\..\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\..\\..\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\..\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\test-file.txt",
      "File Serving production mode should prevent traversing with /\\..%2f",
      "File Serving production mode should prevent traversing with /\\..%2f\\..%2f",
      "File Serving production mode should prevent traversing with /\\..%2f\\..%2f\\..%2f",
      "File Serving production mode should prevent traversing with /\\..%2f\\..%2f\\..%2f\\..%2f",
      "File Serving production mode should prevent traversing with /\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f",
      "File Serving production mode should prevent traversing with /\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f",
      "File Serving production mode should prevent traversing with /\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f",
      "File Serving production mode should prevent traversing with /\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f\\..%2ftest-file.txt",
      "File Serving production mode should prevent traversing with /\\../\\../\\../\\../\\../\\../\\../\\../test-file.txt",
      "File Serving production mode should prevent traversing with /\\../\\../\\../\\../\\../\\../\\../test-file.txt",
      "File Serving production mode should prevent traversing with /\\../\\../\\../\\../\\../\\../test-file.txt",
      "File Serving production mode should prevent traversing with /\\../\\../\\../\\../\\../test-file.txt",
      "File Serving production mode should prevent traversing with /\\../\\../\\../\\../test-file.txt",
      "File Serving production mode should prevent traversing with /\\../\\../\\../test-file.txt",
      "File Serving production mode should prevent traversing with /\\../\\../test-file.txt",
      "File Serving production mode should prevent traversing with /\\../test-file.txt",
      "File Serving production mode should prevent traversing with /\\\\\\%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /\\\\\\%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /\\\\\\%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /\\\\\\%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /\\\\\\%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /\\\\\\%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /\\\\\\%2e%2e%5c%2e%2e%5ctest-file.txt",
      "File Serving production mode should prevent traversing with /\\\\\\%2e%2e%5ctest-file.txt",
      "File Serving production mode should serve avif image with correct content-type",
      "File Serving production mode should serve correct error code",
      "File Serving production mode should serve file with space correctly from public/",
      "File Serving production mode should serve file with space correctly static/"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/filesystempublicroutes/test/index.test.js": {
    "passed": ["FileSystemPublicRoutes should route to public folder files"],
    "failed": [
      "FileSystemPublicRoutes should not route to the index page",
      "FileSystemPublicRoutes should route to exportPathMap defined routes in development",
      "FileSystemPublicRoutes should still handle /_next routes"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/firebase-grpc/test/index.test.js": {
    "passed": [
      "Building Firebase Throws no error when building with firebase dependency without worker_threads"
    ],
    "failed": [],
    "pending": [
      "Building Firebase Throws an error when building with firebase dependency with worker_threads"
    ],
    "runtimeError": false
  },
  "test/integration/font-optimization/test/index.test.js": {
    "passed": [
      "Font Optimization Spread operator regression on <link>",
      "Font Optimization makeStylesheetInert regression",
      "Font Optimization with-google Font optimization for SSR apps should skip this optimization for AMP pages",
      "Font Optimization with-google Font optimization for unreachable font definitions. should fallback to normal stylesheet if the contents of the fonts are unreachable",
      "Font Optimization with-google Font optimization for unreachable font definitions. should not inline multiple fallback link tag",
      "Font Optimization with-typekit Font optimization for SSR apps should skip this optimization for AMP pages",
      "Font Optimization with-typekit Font optimization for unreachable font definitions. should fallback to normal stylesheet if the contents of the fonts are unreachable",
      "Font Optimization with-typekit Font optimization for unreachable font definitions. should not inline multiple fallback link tag"
    ],
    "failed": [
      "Font Optimization font override should inline font-override values",
      "Font Optimization font override with size adjust should inline font-override values",
      "Font Optimization invalid configuration should show a proper error if assetPrefix starts with .",
      "Font Optimization with-google Font optimization for SSR apps should add preconnect tag",
      "Font Optimization with-google Font optimization for SSR apps should inline the google fonts for SSR pages",
      "Font Optimization with-google Font optimization for SSR apps should inline the google fonts for static pages",
      "Font Optimization with-google Font optimization for SSR apps should inline the google fonts for static pages with Next/Head",
      "Font Optimization with-google Font optimization for SSR apps should only inline included fonts per page",
      "Font Optimization with-google Font optimization for SSR apps should pass nonce to the inlined font definition",
      "Font Optimization with-google Font optimization for SSR apps should work for fonts loaded on navigation",
      "Font Optimization with-google Font optimization for SSR apps should work when build is cached",
      "Font Optimization with-typekit Font optimization for SSR apps should add preconnect tag",
      "Font Optimization with-typekit Font optimization for SSR apps should inline the typekit fonts for SSR pages",
      "Font Optimization with-typekit Font optimization for SSR apps should inline the typekit fonts for static pages",
      "Font Optimization with-typekit Font optimization for SSR apps should inline the typekit fonts for static pages with Next/Head",
      "Font Optimization with-typekit Font optimization for SSR apps should only inline included fonts per page",
      "Font Optimization with-typekit Font optimization for SSR apps should pass nonce to the inlined font definition",
      "Font Optimization with-typekit Font optimization for SSR apps should work for fonts loaded on navigation",
      "Font Optimization with-typekit Font optimization for SSR apps should work when build is cached"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/future/test/index.test.js": {
    "passed": ["excludeDefaultMomentLocales should load momentjs"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/getinitialprops/test/index.test.js": {
    "passed": [
      "getInitialProps dev mode should have correct router.asPath for direct visit dynamic page",
      "getInitialProps dev mode should have correct router.asPath for direct visit dynamic page rewrite direct",
      "getInitialProps dev mode should have gip in __NEXT_DATA__",
      "getInitialProps dev mode should not have gip in __NEXT_DATA__ for non-GIP page",
      "getInitialProps production mode should have correct router.asPath for direct visit dynamic page",
      "getInitialProps production mode should have correct router.asPath for direct visit dynamic page rewrite direct",
      "getInitialProps production mode should have gip in __NEXT_DATA__",
      "getInitialProps production mode should not have gip in __NEXT_DATA__ for non-GIP page"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/getserversideprops-export-error/test/index.test.js": {
    "passed": [],
    "failed": [
      "getServerSideProps production mode should build successfully",
      "getServerSideProps production mode should show error for GSSP during export"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/getserversideprops-preview/test/index.test.js": {
    "passed": [
      "ServerSide Props Preview Mode Development Mode should enable preview mode",
      "ServerSide Props Preview Mode Development Mode should fetch prerendered data",
      "ServerSide Props Preview Mode Development Mode should fetch preview data on CST",
      "ServerSide Props Preview Mode Development Mode should fetch preview data on SSR",
      "ServerSide Props Preview Mode Development Mode should return cookies to be expired after dev server reboot",
      "ServerSide Props Preview Mode Development Mode should start development application",
      "ServerSide Props Preview Mode Development Mode should start the client-side browser"
    ],
    "failed": [
      "ServerSide Props Preview Mode Server Mode should compile successfully",
      "ServerSide Props Preview Mode Server Mode should enable preview mode",
      "ServerSide Props Preview Mode Server Mode should not return fallback page on preview request",
      "ServerSide Props Preview Mode Server Mode should return cookies to be expired on reset request",
      "ServerSide Props Preview Mode Server Mode should return correct caching headers for data preview request",
      "ServerSide Props Preview Mode Server Mode should return page on first request",
      "ServerSide Props Preview Mode Server Mode should return page on second request",
      "ServerSide Props Preview Mode Server Mode should start production application",
      "ServerSide Props Preview Mode Server Mode should throw error when setting too large of preview data"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/gip-identifier/test/index.test.js": {
    "passed": [
      "gip identifiers dev mode should have gip and appGip in NEXT_DATA for page with getInitialProps and _app with getInitialProps",
      "gip identifiers dev mode should have gip in NEXT_DATA for page with getInitialProps",
      "gip identifiers dev mode should not have gip or appGip in NEXT_DATA for page without getInitialProps",
      "gip identifiers dev mode should only have appGip in NEXT_DATA for page without getInitialProps and _app with getInitialProps",
      "gip identifiers production mode should have gip and appGip in NEXT_DATA for page with getInitialProps and _app with getInitialProps",
      "gip identifiers production mode should have gip in NEXT_DATA for page with getInitialProps",
      "gip identifiers production mode should not have gip or appGip in NEXT_DATA for page without getInitialProps",
      "gip identifiers production mode should only have appGip in NEXT_DATA for page without getInitialProps and _app with getInitialProps"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/gsp-build-errors/test/index.test.js": {
    "passed": [
      "GSP build errors should fail build from ENOENT in getStaticProps",
      "GSP build errors should fail build from string error in getStaticProps",
      "GSP build errors should fail build from undefined error in getStaticProps",
      "GSP build errors should fail build on normal error in getStaticProps",
      "GSP build errors should handle non-serializable error in getStaticPaths",
      "GSP build errors should handle non-serializable error in getStaticProps"
    ],
    "failed": ["GSP build errors should fail build from module not found"],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/gsp-extension/test/index.test.js": {
    "passed": [
      "GS(S)P with file extension should contain extension in name of json files in _next/data",
      "GS(S)P with file extension should render properly for routes with extension",
      "GS(S)P with file extension should support slug with different extensions"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/gssp-pageProps-merge/test/index.test.js": {
    "passed": [
      "pageProps GSSP conflict dev mode should merge _app pageProps and getServerSideProps props",
      "pageProps GSSP conflict dev mode should merge _app pageProps and getStaticProps props",
      "pageProps GSSP conflict production mode should merge _app pageProps and getServerSideProps props",
      "pageProps GSSP conflict production mode should merge _app pageProps and getStaticProps props"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/gssp-redirect-base-path/test/index.test.js": {
    "passed": [
      "GS(S)P Redirect Support dev mode should apply permanent redirect when visited directly for GSSP page",
      "GS(S)P Redirect Support dev mode should apply redirect when GSSP page is navigated to client-side (internal dynamic)",
      "GS(S)P Redirect Support dev mode should apply redirect when fallback GSSP page is visited directly (external domain)",
      "GS(S)P Redirect Support dev mode should apply statusCode 301 redirect when visited directly for GSSP page",
      "GS(S)P Redirect Support dev mode should apply statusCode 303 redirect when visited directly for GSSP page",
      "GS(S)P Redirect Support dev mode should apply temporary redirect when visited directly for GSSP page",
      "GS(S)P Redirect Support production mode should apply permanent redirect when visited directly for GSSP page",
      "GS(S)P Redirect Support production mode should apply redirect when GSSP page is navigated to client-side (internal dynamic)",
      "GS(S)P Redirect Support production mode should apply redirect when fallback GSSP page is visited directly (external domain)",
      "GS(S)P Redirect Support production mode should apply statusCode 301 redirect when visited directly for GSSP page",
      "GS(S)P Redirect Support production mode should apply statusCode 303 redirect when visited directly for GSSP page",
      "GS(S)P Redirect Support production mode should apply temporary redirect when visited directly for GSSP page",
      "GS(S)P Redirect Support should error for redirect during prerendering"
    ],
    "failed": [
      "GS(S)P Redirect Support dev mode should apply redirect when GSP page is navigated to client-side (external)",
      "GS(S)P Redirect Support dev mode should apply redirect when GSP page is navigated to client-side (internal)",
      "GS(S)P Redirect Support dev mode should apply redirect when GSSP page is navigated to client-side (external)",
      "GS(S)P Redirect Support dev mode should apply redirect when GSSP page is navigated to client-side (internal normal)",
      "GS(S)P Redirect Support dev mode should apply redirect when fallback GSP page is visited directly (external domain)",
      "GS(S)P Redirect Support dev mode should apply redirect when fallback GSP page is visited directly (external)",
      "GS(S)P Redirect Support dev mode should apply redirect when fallback GSP page is visited directly (internal dynamic)",
      "GS(S)P Redirect Support dev mode should apply redirect when fallback GSP page is visited directly (internal normal)",
      "GS(S)P Redirect Support dev mode should apply temporary redirect when visited directly basePath false for GSSP page",
      "GS(S)P Redirect Support dev mode should not replace history of the origin page when GSP page is navigated to client-side (external)",
      "GS(S)P Redirect Support dev mode should not replace history of the origin page when GSP page is navigated to client-side (internal)",
      "GS(S)P Redirect Support dev mode should not replace history of the origin page when GSSP page is navigated to client-side (external)",
      "GS(S)P Redirect Support dev mode should not replace history of the origin page when GSSP page is navigated to client-side (internal normal)",
      "GS(S)P Redirect Support production mode should apply redirect when GSP page is navigated to client-side (external)",
      "GS(S)P Redirect Support production mode should apply redirect when GSP page is navigated to client-side (internal)",
      "GS(S)P Redirect Support production mode should apply redirect when GSSP page is navigated to client-side (external)",
      "GS(S)P Redirect Support production mode should apply redirect when GSSP page is navigated to client-side (internal normal)",
      "GS(S)P Redirect Support production mode should apply redirect when fallback GSP page is visited directly (external domain)",
      "GS(S)P Redirect Support production mode should apply redirect when fallback GSP page is visited directly (external)",
      "GS(S)P Redirect Support production mode should apply redirect when fallback GSP page is visited directly (internal dynamic)",
      "GS(S)P Redirect Support production mode should apply redirect when fallback GSP page is visited directly (internal dynamic) 2nd visit",
      "GS(S)P Redirect Support production mode should apply redirect when fallback GSP page is visited directly (internal normal)",
      "GS(S)P Redirect Support production mode should apply redirect when fallback GSP page is visited directly (internal normal) 2nd visit",
      "GS(S)P Redirect Support production mode should apply temporary redirect when visited directly basePath false for GSSP page",
      "GS(S)P Redirect Support production mode should not replace history of the origin page when GSP page is navigated to client-side (external)",
      "GS(S)P Redirect Support production mode should not replace history of the origin page when GSP page is navigated to client-side (internal)",
      "GS(S)P Redirect Support production mode should not replace history of the origin page when GSSP page is navigated to client-side (external)",
      "GS(S)P Redirect Support production mode should not replace history of the origin page when GSSP page is navigated to client-side (internal normal)"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/gssp-redirect-with-rewrites/test/index.test.js": {
    "passed": [
      "getServerSideProps redirects should fallback to browser navigation for an unknown URL"
    ],
    "failed": [
      "getServerSideProps redirects should use a client-side navigation for a rewritten URL"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/gssp-redirect/test/index.test.js": {
    "passed": [
      "GS(S)P Redirect Support dev mode should apply permanent redirect when visited directly for GSSP page",
      "GS(S)P Redirect Support dev mode should apply redirect when GSP page is navigated to client-side (external)",
      "GS(S)P Redirect Support dev mode should apply redirect when GSP page is navigated to client-side (internal)",
      "GS(S)P Redirect Support dev mode should apply redirect when GSSP page is navigated to client-side (external)",
      "GS(S)P Redirect Support dev mode should apply redirect when GSSP page is navigated to client-side (internal dynamic)",
      "GS(S)P Redirect Support dev mode should apply redirect when GSSP page is navigated to client-side (internal normal)",
      "GS(S)P Redirect Support dev mode should apply redirect when fallback GSP page is visited directly (external domain)",
      "GS(S)P Redirect Support dev mode should apply redirect when fallback GSP page is visited directly (external)",
      "GS(S)P Redirect Support dev mode should apply redirect when fallback GSP page is visited directly (internal dynamic)",
      "GS(S)P Redirect Support dev mode should apply redirect when fallback GSSP page is visited directly (external domain)",
      "GS(S)P Redirect Support dev mode should apply redirect when fallback blocking GSP page is visited directly (internal dynamic)",
      "GS(S)P Redirect Support dev mode should apply redirect when fallback blocking GSP page is visited directly (internal dynamic) second visit",
      "GS(S)P Redirect Support dev mode should apply redirect when fallback blocking GSP page is visited directly (internal dynamic) with revalidate",
      "GS(S)P Redirect Support dev mode should apply redirect when fallback blocking GSP page is visited directly (internal dynamic) with revalidate second visit",
      "GS(S)P Redirect Support dev mode should apply statusCode 301 redirect when visited directly for GSSP page",
      "GS(S)P Redirect Support dev mode should apply statusCode 303 redirect when visited directly for GSSP page",
      "GS(S)P Redirect Support dev mode should apply temporary redirect when visited directly for GSSP page",
      "GS(S)P Redirect Support dev mode should not replace history of the origin page when GSP page is navigated to client-side (external)",
      "GS(S)P Redirect Support dev mode should not replace history of the origin page when GSP page is navigated to client-side (internal)",
      "GS(S)P Redirect Support dev mode should not replace history of the origin page when GSSP page is navigated to client-side (external)",
      "GS(S)P Redirect Support dev mode should not replace history of the origin page when GSSP page is navigated to client-side (internal normal)",
      "GS(S)P Redirect Support production mode should apply permanent redirect when visited directly for GSSP page",
      "GS(S)P Redirect Support production mode should apply redirect when GSP page is navigated to client-side (external)",
      "GS(S)P Redirect Support production mode should apply redirect when GSP page is navigated to client-side (internal)",
      "GS(S)P Redirect Support production mode should apply redirect when GSSP page is navigated to client-side (external)",
      "GS(S)P Redirect Support production mode should apply redirect when GSSP page is navigated to client-side (internal dynamic)",
      "GS(S)P Redirect Support production mode should apply redirect when GSSP page is navigated to client-side (internal normal)",
      "GS(S)P Redirect Support production mode should apply redirect when fallback GSP page is visited directly (external domain)",
      "GS(S)P Redirect Support production mode should apply redirect when fallback GSP page is visited directly (external)",
      "GS(S)P Redirect Support production mode should apply redirect when fallback GSP page is visited directly (internal dynamic)",
      "GS(S)P Redirect Support production mode should apply redirect when fallback GSP page is visited directly (internal dynamic) 2nd visit",
      "GS(S)P Redirect Support production mode should apply redirect when fallback GSP page is visited directly (internal normal) 2nd visit",
      "GS(S)P Redirect Support production mode should apply redirect when fallback GSSP page is visited directly (external domain)",
      "GS(S)P Redirect Support production mode should apply redirect when fallback blocking GSP page is visited directly (internal dynamic)",
      "GS(S)P Redirect Support production mode should apply redirect when fallback blocking GSP page is visited directly (internal dynamic) second visit",
      "GS(S)P Redirect Support production mode should apply redirect when fallback blocking GSP page is visited directly (internal dynamic) with revalidate",
      "GS(S)P Redirect Support production mode should apply redirect when fallback blocking GSP page is visited directly (internal dynamic) with revalidate second visit",
      "GS(S)P Redirect Support production mode should apply statusCode 301 redirect when visited directly for GSSP page",
      "GS(S)P Redirect Support production mode should apply statusCode 303 redirect when visited directly for GSSP page",
      "GS(S)P Redirect Support production mode should apply temporary redirect when visited directly for GSSP page",
      "GS(S)P Redirect Support production mode should not have errors in output",
      "GS(S)P Redirect Support should error for redirect during prerendering"
    ],
    "failed": [
      "GS(S)P Redirect Support dev mode should apply redirect when fallback GSP page is visited directly (internal normal)",
      "GS(S)P Redirect Support production mode should apply redirect when fallback GSP page is visited directly (internal normal)",
      "GS(S)P Redirect Support production mode should not replace history of the origin page when GSP page is navigated to client-side (external)",
      "GS(S)P Redirect Support production mode should not replace history of the origin page when GSP page is navigated to client-side (internal)",
      "GS(S)P Redirect Support production mode should not replace history of the origin page when GSSP page is navigated to client-side (external)",
      "GS(S)P Redirect Support production mode should not replace history of the origin page when GSSP page is navigated to client-side (internal normal)"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/handles-export-errors/test/index.test.js": {
    "passed": ["Handles Errors During Export Does not crash workers"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/hashbang/test/index.test.js": {
    "passed": [
      "Hashbang dev mode first-line hashbang (#!) parse should work for .cjs files",
      "Hashbang dev mode first-line hashbang (#!) parse should work for .js files",
      "Hashbang dev mode first-line hashbang (#!) parse should work for .mjs files",
      "Hashbang production mode first-line hashbang (#!) parse should work for .cjs files",
      "Hashbang production mode first-line hashbang (#!) parse should work for .js files",
      "Hashbang production mode first-line hashbang (#!) parse should work for .mjs files"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/hydrate-then-render/test/index.test.js": {
    "passed": [],
    "failed": [
      "hydrate/render ordering correctly measures hydrate followed by render"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/hydration/test/index.test.js": {
    "passed": [
      "Hydration dev mode hydrates correctly for //",
      "Hydration dev mode hydrates correctly for normal page",
      "Hydration dev mode should be able to navigate after loading //",
      "Hydration production mode hydrates correctly for //",
      "Hydration production mode hydrates correctly for normal page"
    ],
    "failed": [
      "Hydration production mode should be able to navigate after loading //"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/i18n-support-base-path/test/index.test.js": {
    "passed": [
      "i18n Support basePath dev mode should 404 for locale prefixed static assets correctly",
      "i18n Support basePath production mode should 404 for locale prefixed public folder files",
      "i18n Support basePath production mode should 404 for locale prefixed static assets correctly",
      "i18n Support basePath production mode should add i18n config to routes-manifest",
      "i18n Support basePath production mode should apply headers correctly",
      "i18n Support basePath production mode should apply redirects correctly",
      "i18n Support basePath production mode should apply rewrites correctly",
      "i18n Support basePath production mode should apply trailingSlash redirect correctly",
      "i18n Support basePath production mode should generate AMP pages with all locales",
      "i18n Support basePath production mode should generate auto-export page with all locales",
      "i18n Support basePath production mode should generate fallbacks with all locales",
      "i18n Support basePath production mode should generate non-dynamic GSP page with all locales",
      "i18n Support basePath production mode should handle basePath like pathname",
      "i18n Support basePath production mode should handle locales with domain for domain example.com should handle locale do-BE",
      "i18n Support basePath production mode should handle locales with domain for domain example.com should handle locale go-BE",
      "i18n Support basePath production mode should handle locales with domain for domain example.do should handle locale do-BE",
      "i18n Support basePath production mode should handle locales with domain for domain example.do should handle locale go-BE",
      "i18n Support basePath production mode should have correct initial query values for fallback",
      "i18n Support basePath production mode should have correct values for non-prefixed path",
      "i18n Support basePath production mode should load dynamic getServerSideProps page correctly SSR",
      "i18n Support basePath production mode should load getServerSideProps page correctly SSR",
      "i18n Support basePath production mode should load getServerSideProps page correctly SSR (default locale no prefix)",
      "i18n Support basePath production mode should load getStaticProps fallback prerender page correctly SSR",
      "i18n Support basePath production mode should load getStaticProps fallback prerender page correctly SSR (default locale no prefix)",
      "i18n Support basePath production mode should load getStaticProps non-fallback correctly another locale via cookie",
      "i18n Support basePath production mode should load getStaticProps page correctly SSR",
      "i18n Support basePath production mode should load getStaticProps page correctly SSR (default locale no prefix)",
      "i18n Support basePath production mode should not contain backslashes in pages-manifest",
      "i18n Support basePath production mode should not error with similar named cookie to locale cookie",
      "i18n Support basePath production mode should not output GSP pages that returned notFound",
      "i18n Support basePath production mode should not redirect to accept-lang preferred locale with locale cookie",
      "i18n Support basePath production mode should not remove locale prefix for default locale",
      "i18n Support basePath production mode should not strip locale prefix for default locale with locale domains",
      "i18n Support basePath production mode should output correct prerender-manifest",
      "i18n Support basePath production mode should provide defaultLocale correctly for locale domain",
      "i18n Support basePath production mode should redirect external domain correctly",
      "i18n Support basePath production mode should redirect to correct locale domain",
      "i18n Support basePath production mode should redirect to locale prefixed route for /",
      "i18n Support basePath production mode should render 404 for blocking fallback page that returned 404",
      "i18n Support basePath production mode should resolve auto-export dynamic route correctly",
      "i18n Support basePath production mode should rewrite to API route correctly for do locale",
      "i18n Support basePath production mode should rewrite to API route correctly for do-BE locale",
      "i18n Support basePath production mode should rewrite to API route correctly for en locale",
      "i18n Support basePath production mode should rewrite to API route correctly for en-US locale",
      "i18n Support basePath production mode should rewrite to API route correctly for fr locale",
      "i18n Support basePath production mode should rewrite to API route correctly for fr-BE locale",
      "i18n Support basePath production mode should rewrite to API route correctly for go locale",
      "i18n Support basePath production mode should rewrite to API route correctly for go-BE locale",
      "i18n Support basePath production mode should rewrite to API route correctly for nl locale",
      "i18n Support basePath production mode should rewrite to API route correctly for nl-BE locale",
      "i18n Support basePath production mode should rewrite to API route correctly for nl-NL locale",
      "i18n Support basePath production mode should use correct default locale for locale domains",
      "i18n Support basePath production mode should use default locale for / without accept-language",
      "i18n Support basePath production mode should visit API route directly correctly",
      "i18n Support basePath production mode should visit dynamic API route directly correctly",
      "i18n Support basePath production mode should work with AMP first page with all locales",
      "i18n Support basePath with localeDetection disabled should have localeDetection in routes-manifest",
      "i18n Support basePath with localeDetection disabled should not detect locale from accept-language",
      "i18n Support basePath with localeDetection disabled should set locale from detected path"
    ],
    "failed": [
      "i18n Support basePath dev mode should 404 for GSP pages that returned notFound",
      "i18n Support basePath dev mode should 404 for GSP that returned notFound on client-transition",
      "i18n Support basePath dev mode should 404 for locale prefixed public folder files",
      "i18n Support basePath dev mode should apply headers correctly",
      "i18n Support basePath dev mode should apply redirects correctly",
      "i18n Support basePath dev mode should apply rewrites correctly",
      "i18n Support basePath dev mode should apply trailingSlash redirect correctly",
      "i18n Support basePath dev mode should generate AMP pages with all locales",
      "i18n Support basePath dev mode should generate auto-export page with all locales",
      "i18n Support basePath dev mode should generate fallbacks with all locales",
      "i18n Support basePath dev mode should generate non-dynamic GSP page with all locales",
      "i18n Support basePath dev mode should handle basePath like pathname",
      "i18n Support basePath dev mode should handle locales with domain for domain example.com should handle locale do-BE",
      "i18n Support basePath dev mode should handle locales with domain for domain example.com should handle locale go-BE",
      "i18n Support basePath dev mode should handle locales with domain for domain example.do should handle locale do-BE",
      "i18n Support basePath dev mode should handle locales with domain for domain example.do should handle locale go-BE",
      "i18n Support basePath dev mode should handle navigating back to different casing of locale",
      "i18n Support basePath dev mode should have correct initial query values for fallback",
      "i18n Support basePath dev mode should have correct values for non-prefixed path",
      "i18n Support basePath dev mode should have domainLocales available on useRouter",
      "i18n Support basePath dev mode should load dynamic getServerSideProps page correctly SSR",
      "i18n Support basePath dev mode should load getServerSideProps page correctly SSR",
      "i18n Support basePath dev mode should load getServerSideProps page correctly SSR (default locale no prefix)",
      "i18n Support basePath dev mode should load getStaticProps fallback non-prerender page another locale correctly",
      "i18n Support basePath dev mode should load getStaticProps fallback non-prerender page correctly",
      "i18n Support basePath dev mode should load getStaticProps fallback non-prerender page correctly (default locale no prefix",
      "i18n Support basePath dev mode should load getStaticProps fallback prerender page correctly SSR",
      "i18n Support basePath dev mode should load getStaticProps fallback prerender page correctly SSR (default locale no prefix)",
      "i18n Support basePath dev mode should load getStaticProps non-fallback correctly",
      "i18n Support basePath dev mode should load getStaticProps non-fallback correctly another locale",
      "i18n Support basePath dev mode should load getStaticProps non-fallback correctly another locale via cookie",
      "i18n Support basePath dev mode should load getStaticProps page correctly SSR",
      "i18n Support basePath dev mode should load getStaticProps page correctly SSR (default locale no prefix)",
      "i18n Support basePath dev mode should navigate client side for default locale with no prefix",
      "i18n Support basePath dev mode should navigate through history with query correctly",
      "i18n Support basePath dev mode should navigate to another page and back correctly with locale",
      "i18n Support basePath dev mode should navigate to auto-export dynamic page",
      "i18n Support basePath dev mode should navigate to getStaticProps page and back correctly with locale",
      "i18n Support basePath dev mode should navigate to page with same name as development buildId",
      "i18n Support basePath dev mode should navigate with locale false correctly",
      "i18n Support basePath dev mode should navigate with locale false correctly GSP",
      "i18n Support basePath dev mode should navigate with locale prop correctly",
      "i18n Support basePath dev mode should navigate with locale prop correctly GSP",
      "i18n Support basePath dev mode should not add duplicate locale key when navigating back to root path with hash",
      "i18n Support basePath dev mode should not add duplicate locale key when navigating back to root path with query params",
      "i18n Support basePath dev mode should not error with similar named cookie to locale cookie",
      "i18n Support basePath dev mode should not have hydration mis-match from hash",
      "i18n Support basePath dev mode should not redirect to accept-lang preferred locale with locale cookie",
      "i18n Support basePath dev mode should not remove locale prefix for default locale",
      "i18n Support basePath dev mode should not strip locale prefix for default locale with locale domains",
      "i18n Support basePath dev mode should prerender with the correct href for locale domain",
      "i18n Support basePath dev mode should provide defaultLocale correctly for locale domain",
      "i18n Support basePath dev mode should redirect external domain correctly",
      "i18n Support basePath dev mode should redirect to correct locale domain",
      "i18n Support basePath dev mode should redirect to locale prefixed route for /",
      "i18n Support basePath dev mode should render 404 for blocking fallback page that returned 404",
      "i18n Support basePath dev mode should render 404 for blocking fallback page that returned 404 on client transition",
      "i18n Support basePath dev mode should render 404 for fallback page that returned 404",
      "i18n Support basePath dev mode should render 404 for fallback page that returned 404 on client transition",
      "i18n Support basePath dev mode should render the correct href with locale domains but not on a locale domain",
      "i18n Support basePath dev mode should resolve auto-export dynamic route correctly",
      "i18n Support basePath dev mode should resolve href correctly when dynamic route matches locale prefixed",
      "i18n Support basePath dev mode should rewrite to API route correctly for do locale",
      "i18n Support basePath dev mode should rewrite to API route correctly for do-BE locale",
      "i18n Support basePath dev mode should rewrite to API route correctly for en locale",
      "i18n Support basePath dev mode should rewrite to API route correctly for en-US locale",
      "i18n Support basePath dev mode should rewrite to API route correctly for fr locale",
      "i18n Support basePath dev mode should rewrite to API route correctly for fr-BE locale",
      "i18n Support basePath dev mode should rewrite to API route correctly for go locale",
      "i18n Support basePath dev mode should rewrite to API route correctly for go-BE locale",
      "i18n Support basePath dev mode should rewrite to API route correctly for nl locale",
      "i18n Support basePath dev mode should rewrite to API route correctly for nl-BE locale",
      "i18n Support basePath dev mode should rewrite to API route correctly for nl-NL locale",
      "i18n Support basePath dev mode should show error for redirect and notFound returned at same time",
      "i18n Support basePath dev mode should transition on client properly for page that starts with locale",
      "i18n Support basePath dev mode should update asPath on the client correctly",
      "i18n Support basePath dev mode should use correct default locale for locale domains",
      "i18n Support basePath dev mode should use default locale for / without accept-language",
      "i18n Support basePath dev mode should use default locale when no locale is in href with locale false",
      "i18n Support basePath dev mode should visit API route directly correctly",
      "i18n Support basePath dev mode should visit dynamic API route directly correctly",
      "i18n Support basePath dev mode should work with AMP first page with all locales",
      "i18n Support basePath production mode should 404 for GSP pages that returned notFound",
      "i18n Support basePath production mode should 404 for GSP that returned notFound on client-transition",
      "i18n Support basePath production mode should handle fallback correctly after generating",
      "i18n Support basePath production mode should handle navigating back to different casing of locale",
      "i18n Support basePath production mode should have domainLocales available on useRouter",
      "i18n Support basePath production mode should load getStaticProps fallback non-prerender page another locale correctly",
      "i18n Support basePath production mode should load getStaticProps fallback non-prerender page correctly",
      "i18n Support basePath production mode should load getStaticProps fallback non-prerender page correctly (default locale no prefix",
      "i18n Support basePath production mode should load getStaticProps non-fallback correctly",
      "i18n Support basePath production mode should load getStaticProps non-fallback correctly another locale",
      "i18n Support basePath production mode should navigate client side for default locale with no prefix",
      "i18n Support basePath production mode should navigate through history with query correctly",
      "i18n Support basePath production mode should navigate to another page and back correctly with locale",
      "i18n Support basePath production mode should navigate to auto-export dynamic page",
      "i18n Support basePath production mode should navigate to getStaticProps page and back correctly with locale",
      "i18n Support basePath production mode should navigate to page with same name as development buildId",
      "i18n Support basePath production mode should navigate with locale false correctly",
      "i18n Support basePath production mode should navigate with locale false correctly GSP",
      "i18n Support basePath production mode should navigate with locale prop correctly",
      "i18n Support basePath production mode should navigate with locale prop correctly GSP",
      "i18n Support basePath production mode should not add duplicate locale key when navigating back to root path with hash",
      "i18n Support basePath production mode should not add duplicate locale key when navigating back to root path with query params",
      "i18n Support basePath production mode should not have hydration mis-match from hash",
      "i18n Support basePath production mode should preload all locales data correctly",
      "i18n Support basePath production mode should prerender with the correct href for locale domain",
      "i18n Support basePath production mode should render 404 for blocking fallback page that returned 404 on client transition",
      "i18n Support basePath production mode should render 404 for fallback page that returned 404",
      "i18n Support basePath production mode should render 404 for fallback page that returned 404 on client transition",
      "i18n Support basePath production mode should render the correct href with locale domains but not on a locale domain",
      "i18n Support basePath production mode should resolve href correctly when dynamic route matches locale prefixed",
      "i18n Support basePath production mode should transition on client properly for page that starts with locale",
      "i18n Support basePath production mode should update asPath on the client correctly",
      "i18n Support basePath production mode should use default locale when no locale is in href with locale false"
    ],
    "pending": [
      "i18n Support basePath dev mode should redirect to locale domain correctly client-side",
      "i18n Support basePath dev mode should render the correct href for locale domain",
      "i18n Support basePath production mode should redirect to locale domain correctly client-side",
      "i18n Support basePath production mode should render the correct href for locale domain"
    ],
    "runtimeError": false
  },
  "test/integration/i18n-support-catchall/test/index.test.js": {
    "passed": [
      "i18n Support Root Catch-all dev mode should load the index route correctly SSR",
      "i18n Support Root Catch-all production mode should load the index route correctly SSR",
      "i18n Support Root Catch-all production mode should output prerendered index routes correctly"
    ],
    "failed": [
      "i18n Support Root Catch-all dev mode should load the index route correctly CSR",
      "i18n Support Root Catch-all dev mode should navigate to other locale index and back",
      "i18n Support Root Catch-all dev mode should navigate to other locale page and back",
      "i18n Support Root Catch-all production mode should load the index route correctly CSR",
      "i18n Support Root Catch-all production mode should navigate to other locale index and back",
      "i18n Support Root Catch-all production mode should navigate to other locale page and back",
      "i18n Support Root Catch-all production mode should preload data correctly"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/i18n-support-custom-error/test/index.test.js": {
    "passed": [
      "Custom routes i18n dev mode handle custom http status maintaining locale props in custom _error page",
      "Custom routes i18n dev mode handle default http status maintaining locale props in custom _error page",
      "Custom routes i18n dev mode should localized [slug] routes render correctly",
      "Custom routes i18n production mode handle custom http status maintaining locale props in custom _error page",
      "Custom routes i18n production mode handle default http status maintaining locale props in custom _error page",
      "Custom routes i18n production mode should localized [slug] routes render correctly"
    ],
    "failed": [
      "Custom routes i18n dev mode should work also on client side routing",
      "Custom routes i18n production mode should work also on client side routing"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/i18n-support-fallback-rewrite-legacy/test/index.test.js": {
    "passed": [],
    "failed": [
      "i18n Support dev mode should not rewrite for dynamic page",
      "i18n Support dev mode should not rewrite for index page",
      "i18n Support production mode should not rewrite for dynamic page",
      "i18n Support production mode should not rewrite for index page"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/i18n-support-fallback-rewrite/test/index.test.js": {
    "passed": [],
    "failed": [
      "i18n Support dev mode should not rewrite for dynamic page",
      "i18n Support dev mode should not rewrite for index page",
      "i18n Support production mode should not rewrite for dynamic page",
      "i18n Support production mode should not rewrite for index page"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/i18n-support-index-rewrite/test/index.test.js": {
    "passed": [
      "Custom routes i18n dev mode should rewrite index route correctly",
      "Custom routes i18n production mode should rewrite index route correctly"
    ],
    "failed": [
      "Custom routes i18n dev mode should handle index rewrite on client correctly",
      "Custom routes i18n production mode should handle index rewrite on client correctly"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/i18n-support-same-page-hash-change/test/index.test.js": {
    "passed": [
      "Hash changes i18n production mode should trigger hash change events"
    ],
    "failed": [
      "Hash changes i18n dev mode should trigger hash change events",
      "Hash changes i18n dev mode should update props on locale change with same hash",
      "Hash changes i18n dev mode should update props on locale change with same hash (dynamic page)",
      "Hash changes i18n production mode should update props on locale change with same hash",
      "Hash changes i18n production mode should update props on locale change with same hash (dynamic page)"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/i18n-support/test/index.test.js": {
    "passed": [
      "i18n Support dev mode should 404 for locale prefixed static assets correctly",
      "i18n Support production mode should 404 for locale prefixed public folder files",
      "i18n Support production mode should 404 for locale prefixed static assets correctly",
      "i18n Support production mode should add i18n config to routes-manifest",
      "i18n Support production mode should apply headers correctly",
      "i18n Support production mode should apply redirects correctly",
      "i18n Support production mode should apply rewrites correctly",
      "i18n Support production mode should apply trailingSlash redirect correctly",
      "i18n Support production mode should generate AMP pages with all locales",
      "i18n Support production mode should generate auto-export page with all locales",
      "i18n Support production mode should generate fallbacks with all locales",
      "i18n Support production mode should generate non-dynamic GSP page with all locales",
      "i18n Support production mode should handle locales with domain for domain example.com should handle locale do-BE",
      "i18n Support production mode should handle locales with domain for domain example.com should handle locale go-BE",
      "i18n Support production mode should handle locales with domain for domain example.do should handle locale do-BE",
      "i18n Support production mode should handle locales with domain for domain example.do should handle locale go-BE",
      "i18n Support production mode should have correct initial query values for fallback",
      "i18n Support production mode should have correct values for non-prefixed path",
      "i18n Support production mode should have pre-rendered /500 correctly",
      "i18n Support production mode should load dynamic getServerSideProps page correctly SSR",
      "i18n Support production mode should load getServerSideProps page correctly SSR",
      "i18n Support production mode should load getServerSideProps page correctly SSR (default locale no prefix)",
      "i18n Support production mode should load getStaticProps fallback prerender page correctly SSR",
      "i18n Support production mode should load getStaticProps fallback prerender page correctly SSR (default locale no prefix)",
      "i18n Support production mode should load getStaticProps non-fallback correctly another locale via cookie",
      "i18n Support production mode should load getStaticProps page correctly SSR",
      "i18n Support production mode should load getStaticProps page correctly SSR (default locale no prefix)",
      "i18n Support production mode should not contain backslashes in pages-manifest",
      "i18n Support production mode should not error with similar named cookie to locale cookie",
      "i18n Support production mode should not output GSP pages that returned notFound",
      "i18n Support production mode should not redirect to accept-lang preferred locale with locale cookie",
      "i18n Support production mode should not remove locale prefix for default locale",
      "i18n Support production mode should not strip locale prefix for default locale with locale domains",
      "i18n Support production mode should output correct prerender-manifest",
      "i18n Support production mode should provide defaultLocale correctly for locale domain",
      "i18n Support production mode should redirect external domain correctly",
      "i18n Support production mode should redirect to correct locale domain",
      "i18n Support production mode should redirect to locale prefixed route for /",
      "i18n Support production mode should render 404 for blocking fallback page that returned 404",
      "i18n Support production mode should resolve auto-export dynamic route correctly",
      "i18n Support production mode should rewrite to API route correctly for do locale",
      "i18n Support production mode should rewrite to API route correctly for do-BE locale",
      "i18n Support production mode should rewrite to API route correctly for en locale",
      "i18n Support production mode should rewrite to API route correctly for en-US locale",
      "i18n Support production mode should rewrite to API route correctly for fr locale",
      "i18n Support production mode should rewrite to API route correctly for fr-BE locale",
      "i18n Support production mode should rewrite to API route correctly for go locale",
      "i18n Support production mode should rewrite to API route correctly for go-BE locale",
      "i18n Support production mode should rewrite to API route correctly for nl locale",
      "i18n Support production mode should rewrite to API route correctly for nl-BE locale",
      "i18n Support production mode should rewrite to API route correctly for nl-NL locale",
      "i18n Support production mode should use correct default locale for locale domains",
      "i18n Support production mode should use default locale for / without accept-language",
      "i18n Support production mode should visit API route directly correctly",
      "i18n Support production mode should visit dynamic API route directly correctly",
      "i18n Support production mode should work with AMP first page with all locales",
      "i18n Support should show proper error for duplicate defaultLocales",
      "i18n Support should show proper error for duplicate locales",
      "i18n Support should show proper error for invalid locale domain",
      "i18n Support with localeDetection disabled should have localeDetection in routes-manifest",
      "i18n Support with localeDetection disabled should ignore the invalid accept-language header",
      "i18n Support with localeDetection disabled should not detect locale from accept-language",
      "i18n Support with localeDetection disabled should set locale from detected path",
      "i18n Support with trailingSlash: false production mode should redirect correctly",
      "i18n Support with trailingSlash: true production mode should redirect correctly",
      "i18n Support with trailingSlash: true production mode should return 404 error for repeating locales",
      "i18n Support with trailingSlash: true production mode should serve pages correctly with locale prefix"
    ],
    "failed": [
      "i18n Support dev mode should 404 for GSP pages that returned notFound",
      "i18n Support dev mode should 404 for GSP that returned notFound on client-transition",
      "i18n Support dev mode should 404 for locale prefixed public folder files",
      "i18n Support dev mode should apply headers correctly",
      "i18n Support dev mode should apply redirects correctly",
      "i18n Support dev mode should apply rewrites correctly",
      "i18n Support dev mode should apply trailingSlash redirect correctly",
      "i18n Support dev mode should generate AMP pages with all locales",
      "i18n Support dev mode should generate auto-export page with all locales",
      "i18n Support dev mode should generate fallbacks with all locales",
      "i18n Support dev mode should generate non-dynamic GSP page with all locales",
      "i18n Support dev mode should handle locales with domain for domain example.com should handle locale do-BE",
      "i18n Support dev mode should handle locales with domain for domain example.com should handle locale go-BE",
      "i18n Support dev mode should handle locales with domain for domain example.do should handle locale do-BE",
      "i18n Support dev mode should handle locales with domain for domain example.do should handle locale go-BE",
      "i18n Support dev mode should handle navigating back to different casing of locale",
      "i18n Support dev mode should have correct initial query values for fallback",
      "i18n Support dev mode should have correct values for non-prefixed path",
      "i18n Support dev mode should have domainLocales available on useRouter",
      "i18n Support dev mode should load dynamic getServerSideProps page correctly SSR",
      "i18n Support dev mode should load getServerSideProps page correctly SSR",
      "i18n Support dev mode should load getServerSideProps page correctly SSR (default locale no prefix)",
      "i18n Support dev mode should load getStaticProps fallback non-prerender page another locale correctly",
      "i18n Support dev mode should load getStaticProps fallback non-prerender page correctly",
      "i18n Support dev mode should load getStaticProps fallback non-prerender page correctly (default locale no prefix",
      "i18n Support dev mode should load getStaticProps fallback prerender page correctly SSR",
      "i18n Support dev mode should load getStaticProps fallback prerender page correctly SSR (default locale no prefix)",
      "i18n Support dev mode should load getStaticProps non-fallback correctly",
      "i18n Support dev mode should load getStaticProps non-fallback correctly another locale",
      "i18n Support dev mode should load getStaticProps non-fallback correctly another locale via cookie",
      "i18n Support dev mode should load getStaticProps page correctly SSR",
      "i18n Support dev mode should load getStaticProps page correctly SSR (default locale no prefix)",
      "i18n Support dev mode should navigate client side for default locale with no prefix",
      "i18n Support dev mode should navigate through history with query correctly",
      "i18n Support dev mode should navigate to another page and back correctly with locale",
      "i18n Support dev mode should navigate to auto-export dynamic page",
      "i18n Support dev mode should navigate to getStaticProps page and back correctly with locale",
      "i18n Support dev mode should navigate to page with same name as development buildId",
      "i18n Support dev mode should navigate with locale false correctly",
      "i18n Support dev mode should navigate with locale false correctly GSP",
      "i18n Support dev mode should navigate with locale prop correctly",
      "i18n Support dev mode should navigate with locale prop correctly GSP",
      "i18n Support dev mode should not add duplicate locale key when navigating back to root path with hash",
      "i18n Support dev mode should not add duplicate locale key when navigating back to root path with query params",
      "i18n Support dev mode should not error with similar named cookie to locale cookie",
      "i18n Support dev mode should not have hydration mis-match from hash",
      "i18n Support dev mode should not redirect to accept-lang preferred locale with locale cookie",
      "i18n Support dev mode should not remove locale prefix for default locale",
      "i18n Support dev mode should not strip locale prefix for default locale with locale domains",
      "i18n Support dev mode should prerender with the correct href for locale domain",
      "i18n Support dev mode should provide defaultLocale correctly for locale domain",
      "i18n Support dev mode should redirect external domain correctly",
      "i18n Support dev mode should redirect to correct locale domain",
      "i18n Support dev mode should redirect to locale prefixed route for /",
      "i18n Support dev mode should render 404 for blocking fallback page that returned 404",
      "i18n Support dev mode should render 404 for blocking fallback page that returned 404 on client transition",
      "i18n Support dev mode should render 404 for fallback page that returned 404",
      "i18n Support dev mode should render 404 for fallback page that returned 404 on client transition",
      "i18n Support dev mode should render the correct href with locale domains but not on a locale domain",
      "i18n Support dev mode should resolve auto-export dynamic route correctly",
      "i18n Support dev mode should resolve href correctly when dynamic route matches locale prefixed",
      "i18n Support dev mode should rewrite to API route correctly for do locale",
      "i18n Support dev mode should rewrite to API route correctly for do-BE locale",
      "i18n Support dev mode should rewrite to API route correctly for en locale",
      "i18n Support dev mode should rewrite to API route correctly for en-US locale",
      "i18n Support dev mode should rewrite to API route correctly for fr locale",
      "i18n Support dev mode should rewrite to API route correctly for fr-BE locale",
      "i18n Support dev mode should rewrite to API route correctly for go locale",
      "i18n Support dev mode should rewrite to API route correctly for go-BE locale",
      "i18n Support dev mode should rewrite to API route correctly for nl locale",
      "i18n Support dev mode should rewrite to API route correctly for nl-BE locale",
      "i18n Support dev mode should rewrite to API route correctly for nl-NL locale",
      "i18n Support dev mode should show error for redirect and notFound returned at same time",
      "i18n Support dev mode should transition on client properly for page that starts with locale",
      "i18n Support dev mode should update asPath on the client correctly",
      "i18n Support dev mode should use correct default locale for locale domains",
      "i18n Support dev mode should use default locale for / without accept-language",
      "i18n Support dev mode should use default locale when no locale is in href with locale false",
      "i18n Support dev mode should visit API route directly correctly",
      "i18n Support dev mode should visit dynamic API route directly correctly",
      "i18n Support dev mode should work with AMP first page with all locales",
      "i18n Support production mode should 404 for GSP pages that returned notFound",
      "i18n Support production mode should 404 for GSP that returned notFound on client-transition",
      "i18n Support production mode should handle fallback correctly after generating",
      "i18n Support production mode should handle navigating back to different casing of locale",
      "i18n Support production mode should have domainLocales available on useRouter",
      "i18n Support production mode should load getStaticProps fallback non-prerender page another locale correctly",
      "i18n Support production mode should load getStaticProps fallback non-prerender page correctly",
      "i18n Support production mode should load getStaticProps fallback non-prerender page correctly (default locale no prefix",
      "i18n Support production mode should load getStaticProps non-fallback correctly",
      "i18n Support production mode should load getStaticProps non-fallback correctly another locale",
      "i18n Support production mode should navigate client side for default locale with no prefix",
      "i18n Support production mode should navigate through history with query correctly",
      "i18n Support production mode should navigate to another page and back correctly with locale",
      "i18n Support production mode should navigate to auto-export dynamic page",
      "i18n Support production mode should navigate to getStaticProps page and back correctly with locale",
      "i18n Support production mode should navigate to page with same name as development buildId",
      "i18n Support production mode should navigate with locale false correctly",
      "i18n Support production mode should navigate with locale false correctly GSP",
      "i18n Support production mode should navigate with locale prop correctly",
      "i18n Support production mode should navigate with locale prop correctly GSP",
      "i18n Support production mode should not add duplicate locale key when navigating back to root path with hash",
      "i18n Support production mode should not add duplicate locale key when navigating back to root path with query params",
      "i18n Support production mode should not have hydration mis-match from hash",
      "i18n Support production mode should preload all locales data correctly",
      "i18n Support production mode should prerender with the correct href for locale domain",
      "i18n Support production mode should render 404 for blocking fallback page that returned 404 on client transition",
      "i18n Support production mode should render 404 for fallback page that returned 404",
      "i18n Support production mode should render 404 for fallback page that returned 404 on client transition",
      "i18n Support production mode should render the correct href with locale domains but not on a locale domain",
      "i18n Support production mode should resolve href correctly when dynamic route matches locale prefixed",
      "i18n Support production mode should transition on client properly for page that starts with locale",
      "i18n Support production mode should update asPath on the client correctly",
      "i18n Support production mode should use default locale when no locale is in href with locale false",
      "i18n Support with trailingSlash: false dev mode should redirect correctly",
      "i18n Support with trailingSlash: true dev mode should navigate between pages correctly",
      "i18n Support with trailingSlash: true dev mode should redirect correctly",
      "i18n Support with trailingSlash: true dev mode should return 404 error for repeating locales",
      "i18n Support with trailingSlash: true dev mode should serve pages correctly with locale prefix",
      "i18n Support with trailingSlash: true production mode should have correct locale domain hrefs",
      "i18n Support with trailingSlash: true production mode should navigate between pages correctly",
      "i18n Support with trailingSlash: true production mode should preload all locales data correctly"
    ],
    "pending": [
      "i18n Support dev mode should redirect to locale domain correctly client-side",
      "i18n Support dev mode should render the correct href for locale domain",
      "i18n Support production mode should redirect to locale domain correctly client-side",
      "i18n Support production mode should render the correct href for locale domain"
    ],
    "runtimeError": false
  },
  "test/integration/image-generation/test/index.test.ts": {
    "passed": [],
    "failed": [
      "Image Generation Prod should generate the image without errors"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/image-optimizer/test/content-disposition-type.test.ts": {
    "passed": [
      "with contentDispositionType attachment dev support with next.config.js should automatically detect image type when content-type is octet-stream",
      "with contentDispositionType attachment dev support with next.config.js should compress avif smaller than webp at q=100",
      "with contentDispositionType attachment dev support with next.config.js should compress avif smaller than webp at q=50",
      "with contentDispositionType attachment dev support with next.config.js should compress avif smaller than webp at q=75",
      "with contentDispositionType attachment dev support with next.config.js should downlevel avif format to jpeg for old Safari",
      "with contentDispositionType attachment dev support with next.config.js should downlevel webp format to jpeg for old Safari",
      "with contentDispositionType attachment dev support with next.config.js should emit blur svg when width is 8 in dev but not prod",
      "with contentDispositionType attachment dev support with next.config.js should emit blur svg when width is less than 8 in dev but not prod",
      "with contentDispositionType attachment dev support with next.config.js should error if the image file does not exist",
      "with contentDispositionType attachment dev support with next.config.js should error if the resource isn't a valid image",
      "with contentDispositionType attachment dev support with next.config.js should fail when domain is not defined in next.config.js",
      "with contentDispositionType attachment dev support with next.config.js should fail when internal url is not an image",
      "with contentDispositionType attachment dev support with next.config.js should fail when q is greater than 100",
      "with contentDispositionType attachment dev support with next.config.js should fail when q is less than 1",
      "with contentDispositionType attachment dev support with next.config.js should fail when q is missing",
      "with contentDispositionType attachment dev support with next.config.js should fail when q is not a number",
      "with contentDispositionType attachment dev support with next.config.js should fail when url fails to load an image",
      "with contentDispositionType attachment dev support with next.config.js should fail when url has file protocol",
      "with contentDispositionType attachment dev support with next.config.js should fail when url has ftp protocol",
      "with contentDispositionType attachment dev support with next.config.js should fail when url is missing",
      "with contentDispositionType attachment dev support with next.config.js should fail when w is 0",
      "with contentDispositionType attachment dev support with next.config.js should fail when w is less than 0",
      "with contentDispositionType attachment dev support with next.config.js should fail when w is missing",
      "with contentDispositionType attachment dev support with next.config.js should fail when w is not a number",
      "with contentDispositionType attachment dev support with next.config.js should fail when width is not in next.config.js",
      "with contentDispositionType attachment dev support with next.config.js should handle concurrent requests",
      "with contentDispositionType attachment dev support with next.config.js should handle non-ascii characters in image url",
      "with contentDispositionType attachment dev support with next.config.js should maintain animated gif",
      "with contentDispositionType attachment dev support with next.config.js should maintain animated png",
      "with contentDispositionType attachment dev support with next.config.js should maintain animated png 2",
      "with contentDispositionType attachment dev support with next.config.js should maintain animated webp",
      "with contentDispositionType attachment dev support with next.config.js should maintain bmp",
      "with contentDispositionType attachment dev support with next.config.js should maintain ico format",
      "with contentDispositionType attachment dev support with next.config.js should maintain jpg format for old Safari",
      "with contentDispositionType attachment dev support with next.config.js should maintain png format for old Safari",
      "with contentDispositionType attachment dev support with next.config.js should normalize invalid status codes",
      "with contentDispositionType attachment dev support with next.config.js should not allow svg with application header",
      "with contentDispositionType attachment dev support with next.config.js should not allow svg with comma header",
      "with contentDispositionType attachment dev support with next.config.js should not allow svg with uppercase header",
      "with contentDispositionType attachment dev support with next.config.js should not allow vector svg",
      "with contentDispositionType attachment dev support with next.config.js should not change the color type of a png",
      "with contentDispositionType attachment dev support with next.config.js should not have sharp missing warning",
      "with contentDispositionType attachment dev support with next.config.js should not have sharp outdated warning",
      "with contentDispositionType attachment dev support with next.config.js should not resize if requested width is larger than original source image",
      "with contentDispositionType attachment dev support with next.config.js should resize absolute url from localhost",
      "with contentDispositionType attachment dev support with next.config.js should resize relative url and new Chrome accept header as avif",
      "with contentDispositionType attachment dev support with next.config.js should resize relative url and old Chrome accept header as webp",
      "with contentDispositionType attachment dev support with next.config.js should resize relative url and png accept header",
      "with contentDispositionType attachment dev support with next.config.js should resize relative url and webp Firefox accept header",
      "with contentDispositionType attachment dev support with next.config.js should resize relative url with invalid accept header as gif",
      "with contentDispositionType attachment dev support with next.config.js should resize relative url with invalid accept header as png",
      "with contentDispositionType attachment dev support with next.config.js should resize relative url with invalid accept header as tiff",
      "with contentDispositionType attachment dev support with next.config.js should set 304 status without body when etag matches if-none-match",
      "with contentDispositionType attachment dev support with next.config.js should set cache-control to immutable for static images",
      "with contentDispositionType attachment dev support with next.config.js should use cache and stale-while-revalidate when query is the same for external image",
      "with contentDispositionType attachment dev support with next.config.js should use cache and stale-while-revalidate when query is the same for internal image",
      "with contentDispositionType attachment dev support with next.config.js should use cached image file when parameters are the same for animated gif"
    ],
    "failed": [
      "with contentDispositionType attachment Server support with next.config.js should automatically detect image type when content-type is octet-stream",
      "with contentDispositionType attachment Server support with next.config.js should compress avif smaller than webp at q=100",
      "with contentDispositionType attachment Server support with next.config.js should compress avif smaller than webp at q=50",
      "with contentDispositionType attachment Server support with next.config.js should compress avif smaller than webp at q=75",
      "with contentDispositionType attachment Server support with next.config.js should downlevel avif format to jpeg for old Safari",
      "with contentDispositionType attachment Server support with next.config.js should downlevel webp format to jpeg for old Safari",
      "with contentDispositionType attachment Server support with next.config.js should emit blur svg when width is 8 in dev but not prod",
      "with contentDispositionType attachment Server support with next.config.js should emit blur svg when width is less than 8 in dev but not prod",
      "with contentDispositionType attachment Server support with next.config.js should error if the image file does not exist",
      "with contentDispositionType attachment Server support with next.config.js should error if the resource isn't a valid image",
      "with contentDispositionType attachment Server support with next.config.js should fail when domain is not defined in next.config.js",
      "with contentDispositionType attachment Server support with next.config.js should fail when internal url is not an image",
      "with contentDispositionType attachment Server support with next.config.js should fail when q is greater than 100",
      "with contentDispositionType attachment Server support with next.config.js should fail when q is less than 1",
      "with contentDispositionType attachment Server support with next.config.js should fail when q is missing",
      "with contentDispositionType attachment Server support with next.config.js should fail when q is not a number",
      "with contentDispositionType attachment Server support with next.config.js should fail when url fails to load an image",
      "with contentDispositionType attachment Server support with next.config.js should fail when url has file protocol",
      "with contentDispositionType attachment Server support with next.config.js should fail when url has ftp protocol",
      "with contentDispositionType attachment Server support with next.config.js should fail when url is missing",
      "with contentDispositionType attachment Server support with next.config.js should fail when w is 0",
      "with contentDispositionType attachment Server support with next.config.js should fail when w is less than 0",
      "with contentDispositionType attachment Server support with next.config.js should fail when w is missing",
      "with contentDispositionType attachment Server support with next.config.js should fail when w is not a number",
      "with contentDispositionType attachment Server support with next.config.js should fail when width is not in next.config.js",
      "with contentDispositionType attachment Server support with next.config.js should handle concurrent requests",
      "with contentDispositionType attachment Server support with next.config.js should handle non-ascii characters in image url",
      "with contentDispositionType attachment Server support with next.config.js should have sharp missing warning",
      "with contentDispositionType attachment Server support with next.config.js should maintain animated gif",
      "with contentDispositionType attachment Server support with next.config.js should maintain animated png",
      "with contentDispositionType attachment Server support with next.config.js should maintain animated png 2",
      "with contentDispositionType attachment Server support with next.config.js should maintain animated webp",
      "with contentDispositionType attachment Server support with next.config.js should maintain bmp",
      "with contentDispositionType attachment Server support with next.config.js should maintain ico format",
      "with contentDispositionType attachment Server support with next.config.js should maintain jpg format for old Safari",
      "with contentDispositionType attachment Server support with next.config.js should maintain png format for old Safari",
      "with contentDispositionType attachment Server support with next.config.js should normalize invalid status codes",
      "with contentDispositionType attachment Server support with next.config.js should not allow svg with application header",
      "with contentDispositionType attachment Server support with next.config.js should not allow svg with comma header",
      "with contentDispositionType attachment Server support with next.config.js should not allow svg with uppercase header",
      "with contentDispositionType attachment Server support with next.config.js should not allow vector svg",
      "with contentDispositionType attachment Server support with next.config.js should not change the color type of a png",
      "with contentDispositionType attachment Server support with next.config.js should not have sharp outdated warning",
      "with contentDispositionType attachment Server support with next.config.js should not resize if requested width is larger than original source image",
      "with contentDispositionType attachment Server support with next.config.js should resize absolute url from localhost",
      "with contentDispositionType attachment Server support with next.config.js should resize relative url and new Chrome accept header as avif",
      "with contentDispositionType attachment Server support with next.config.js should resize relative url and old Chrome accept header as webp",
      "with contentDispositionType attachment Server support with next.config.js should resize relative url and png accept header",
      "with contentDispositionType attachment Server support with next.config.js should resize relative url and webp Firefox accept header",
      "with contentDispositionType attachment Server support with next.config.js should resize relative url with invalid accept header as gif",
      "with contentDispositionType attachment Server support with next.config.js should resize relative url with invalid accept header as png",
      "with contentDispositionType attachment Server support with next.config.js should resize relative url with invalid accept header as tiff",
      "with contentDispositionType attachment Server support with next.config.js should return home page",
      "with contentDispositionType attachment Server support with next.config.js should set 304 status without body when etag matches if-none-match",
      "with contentDispositionType attachment Server support with next.config.js should set cache-control to immutable for static images",
      "with contentDispositionType attachment Server support with next.config.js should use cache and stale-while-revalidate when query is the same for external image",
      "with contentDispositionType attachment Server support with next.config.js should use cache and stale-while-revalidate when query is the same for internal image",
      "with contentDispositionType attachment Server support with next.config.js should use cached image file when parameters are the same for animated gif",
      "with contentDispositionType attachment dev support with next.config.js should return home page"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/image-optimizer/test/index.test.ts": {
    "passed": [
      "Image Optimizer Server support for trailingSlash in next.config.js should return successful response for original loader",
      "Image Optimizer config checks should error when deviceSizes contains invalid widths",
      "Image Optimizer config checks should error when domains length exceeds 50",
      "Image Optimizer config checks should error when imageSizes contains invalid widths",
      "Image Optimizer config checks should error when images.contentDispositionType is not valid",
      "Image Optimizer config checks should error when images.contentSecurityPolicy is not a string",
      "Image Optimizer config checks should error when images.dangerouslyAllowSVG is not a boolean",
      "Image Optimizer config checks should error when images.formats contains invalid values",
      "Image Optimizer config checks should error when images.loader and images.loaderFile are both assigned",
      "Image Optimizer config checks should error when images.loader is assigned but images.path is not",
      "Image Optimizer config checks should error when images.loaderFile does not exist",
      "Image Optimizer config checks should error when images.minimumCacheTTL is not valid",
      "Image Optimizer config checks should error when images.unoptimized is not a boolean",
      "Image Optimizer config checks should error when loader contains invalid value",
      "Image Optimizer config checks should error when remotePatterns has invalid prop",
      "Image Optimizer config checks should error when remotePatterns is missing hostname",
      "Image Optimizer config checks should error when remotePatterns length exceeds 50",
      "Image Optimizer config checks should error when sizes length exceeds 25",
      "Image Optimizer dev support for dynamic blur placeholder should support width 8 per BLUR_IMG_SIZE with next dev",
      "Image Optimizer dev support next.config.js cloudinary loader should 404 when loader is not default",
      "Image Optimizer images.unoptimized in next.config.js should 404 when unoptimized"
    ],
    "failed": [
      "Image Optimizer External rewrite support with for serving static content in images should return response when image is served from an external rewrite",
      "Image Optimizer Server support for headers in next.config.js should not set max-age header when not matching next.config.js",
      "Image Optimizer Server support for headers in next.config.js should set max-age header"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/image-optimizer/test/minimum-cache-ttl.test.ts": {
    "passed": [
      "with minimumCacheTTL of 5 sec dev support with next.config.js should automatically detect image type when content-type is octet-stream",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should compress avif smaller than webp at q=100",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should compress avif smaller than webp at q=50",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should compress avif smaller than webp at q=75",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should downlevel avif format to jpeg for old Safari",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should downlevel webp format to jpeg for old Safari",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should emit blur svg when width is 8 in dev but not prod",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should emit blur svg when width is less than 8 in dev but not prod",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should error if the image file does not exist",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should error if the resource isn't a valid image",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when domain is not defined in next.config.js",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when internal url is not an image",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when q is greater than 100",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when q is less than 1",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when q is missing",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when q is not a number",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when url fails to load an image",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when url has file protocol",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when url has ftp protocol",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when url is missing",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when w is 0",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when w is less than 0",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when w is missing",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when w is not a number",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when width is not in next.config.js",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should handle concurrent requests",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should handle non-ascii characters in image url",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should maintain animated gif",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should maintain animated png",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should maintain animated png 2",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should maintain animated webp",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should maintain bmp",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should maintain ico format",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should maintain jpg format for old Safari",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should maintain png format for old Safari",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should normalize invalid status codes",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should not allow svg with application header",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should not allow svg with comma header",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should not allow svg with uppercase header",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should not allow vector svg",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should not change the color type of a png",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should not have sharp missing warning",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should not have sharp outdated warning",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should not resize if requested width is larger than original source image",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should resize absolute url from localhost",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should resize relative url and new Chrome accept header as avif",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should resize relative url and old Chrome accept header as webp",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should resize relative url and png accept header",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should resize relative url and webp Firefox accept header",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should resize relative url with invalid accept header as gif",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should resize relative url with invalid accept header as png",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should resize relative url with invalid accept header as tiff",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should set 304 status without body when etag matches if-none-match",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should set cache-control to immutable for static images",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should use cache and stale-while-revalidate when query is the same for external image",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should use cache and stale-while-revalidate when query is the same for internal image",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should use cached image file when parameters are the same for animated gif"
    ],
    "failed": [
      "with minimumCacheTTL of 5 sec Server support with next.config.js should automatically detect image type when content-type is octet-stream",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should compress avif smaller than webp at q=100",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should compress avif smaller than webp at q=50",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should compress avif smaller than webp at q=75",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should downlevel avif format to jpeg for old Safari",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should downlevel webp format to jpeg for old Safari",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should emit blur svg when width is 8 in dev but not prod",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should emit blur svg when width is less than 8 in dev but not prod",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should error if the image file does not exist",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should error if the resource isn't a valid image",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should fail when domain is not defined in next.config.js",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should fail when internal url is not an image",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should fail when q is greater than 100",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should fail when q is less than 1",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should fail when q is missing",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should fail when q is not a number",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should fail when url fails to load an image",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should fail when url has file protocol",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should fail when url has ftp protocol",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should fail when url is missing",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should fail when w is 0",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should fail when w is less than 0",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should fail when w is missing",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should fail when w is not a number",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should fail when width is not in next.config.js",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should handle concurrent requests",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should handle non-ascii characters in image url",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should have sharp missing warning",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should maintain animated gif",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should maintain animated png",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should maintain animated png 2",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should maintain animated webp",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should maintain bmp",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should maintain ico format",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should maintain jpg format for old Safari",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should maintain png format for old Safari",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should normalize invalid status codes",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should not allow svg with application header",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should not allow svg with comma header",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should not allow svg with uppercase header",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should not allow vector svg",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should not change the color type of a png",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should not have sharp outdated warning",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should not resize if requested width is larger than original source image",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should resize absolute url from localhost",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should resize relative url and new Chrome accept header as avif",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should resize relative url and old Chrome accept header as webp",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should resize relative url and png accept header",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should resize relative url and webp Firefox accept header",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should resize relative url with invalid accept header as gif",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should resize relative url with invalid accept header as png",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should resize relative url with invalid accept header as tiff",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should return home page",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should set 304 status without body when etag matches if-none-match",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should set cache-control to immutable for static images",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should use cache and stale-while-revalidate when query is the same for external image",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should use cache and stale-while-revalidate when query is the same for internal image",
      "with minimumCacheTTL of 5 sec Server support with next.config.js should use cached image file when parameters are the same for animated gif",
      "with minimumCacheTTL of 5 sec dev support with next.config.js should return home page"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/image-optimizer/test/old-sharp.test.ts": {
    "passed": [],
    "failed": [
      "with outdated sharp Server support with next.config.js should automatically detect image type when content-type is octet-stream",
      "with outdated sharp Server support with next.config.js should compress avif smaller than webp at q=100",
      "with outdated sharp Server support with next.config.js should compress avif smaller than webp at q=50",
      "with outdated sharp Server support with next.config.js should compress avif smaller than webp at q=75",
      "with outdated sharp Server support with next.config.js should downlevel webp format to jpeg for old Safari",
      "with outdated sharp Server support with next.config.js should emit blur svg when width is 8 in dev but not prod",
      "with outdated sharp Server support with next.config.js should emit blur svg when width is less than 8 in dev but not prod",
      "with outdated sharp Server support with next.config.js should error if the image file does not exist",
      "with outdated sharp Server support with next.config.js should error if the resource isn't a valid image",
      "with outdated sharp Server support with next.config.js should fail when domain is not defined in next.config.js",
      "with outdated sharp Server support with next.config.js should fail when internal url is not an image",
      "with outdated sharp Server support with next.config.js should fail when q is greater than 100",
      "with outdated sharp Server support with next.config.js should fail when q is less than 1",
      "with outdated sharp Server support with next.config.js should fail when q is missing",
      "with outdated sharp Server support with next.config.js should fail when q is not a number",
      "with outdated sharp Server support with next.config.js should fail when url fails to load an image",
      "with outdated sharp Server support with next.config.js should fail when url has file protocol",
      "with outdated sharp Server support with next.config.js should fail when url has ftp protocol",
      "with outdated sharp Server support with next.config.js should fail when url is missing",
      "with outdated sharp Server support with next.config.js should fail when w is 0",
      "with outdated sharp Server support with next.config.js should fail when w is less than 0",
      "with outdated sharp Server support with next.config.js should fail when w is missing",
      "with outdated sharp Server support with next.config.js should fail when w is not a number",
      "with outdated sharp Server support with next.config.js should fail when width is not in next.config.js",
      "with outdated sharp Server support with next.config.js should handle concurrent requests",
      "with outdated sharp Server support with next.config.js should handle non-ascii characters in image url",
      "with outdated sharp Server support with next.config.js should have sharp outdated warning",
      "with outdated sharp Server support with next.config.js should maintain animated gif",
      "with outdated sharp Server support with next.config.js should maintain animated png",
      "with outdated sharp Server support with next.config.js should maintain animated png 2",
      "with outdated sharp Server support with next.config.js should maintain animated webp",
      "with outdated sharp Server support with next.config.js should maintain bmp",
      "with outdated sharp Server support with next.config.js should maintain ico format",
      "with outdated sharp Server support with next.config.js should maintain jpg format for old Safari",
      "with outdated sharp Server support with next.config.js should maintain png format for old Safari",
      "with outdated sharp Server support with next.config.js should normalize invalid status codes",
      "with outdated sharp Server support with next.config.js should not allow svg with application header",
      "with outdated sharp Server support with next.config.js should not allow svg with comma header",
      "with outdated sharp Server support with next.config.js should not allow svg with uppercase header",
      "with outdated sharp Server support with next.config.js should not allow vector svg",
      "with outdated sharp Server support with next.config.js should not have sharp missing warning",
      "with outdated sharp Server support with next.config.js should not resize if requested width is larger than original source image",
      "with outdated sharp Server support with next.config.js should resize absolute url from localhost",
      "with outdated sharp Server support with next.config.js should resize relative url and new Chrome accept header as avif",
      "with outdated sharp Server support with next.config.js should resize relative url and old Chrome accept header as webp",
      "with outdated sharp Server support with next.config.js should resize relative url and png accept header",
      "with outdated sharp Server support with next.config.js should resize relative url and webp Firefox accept header",
      "with outdated sharp Server support with next.config.js should resize relative url with invalid accept header as gif",
      "with outdated sharp Server support with next.config.js should resize relative url with invalid accept header as png",
      "with outdated sharp Server support with next.config.js should resize relative url with invalid accept header as tiff",
      "with outdated sharp Server support with next.config.js should return home page",
      "with outdated sharp Server support with next.config.js should set 304 status without body when etag matches if-none-match",
      "with outdated sharp Server support with next.config.js should set cache-control to immutable for static images",
      "with outdated sharp Server support with next.config.js should use cache and stale-while-revalidate when query is the same for external image",
      "with outdated sharp Server support with next.config.js should use cache and stale-while-revalidate when query is the same for internal image",
      "with outdated sharp Server support with next.config.js should use cached image file when parameters are the same for animated gif"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/image-optimizer/test/sharp.test.ts": {
    "passed": [
      "with latest sharp dev support w/o next.config.js should downlevel avif format to jpeg for old Safari",
      "with latest sharp dev support w/o next.config.js should downlevel webp format to jpeg for old Safari",
      "with latest sharp dev support w/o next.config.js should emit blur svg when width is 8 in dev but not prod",
      "with latest sharp dev support w/o next.config.js should emit blur svg when width is less than 8 in dev but not prod",
      "with latest sharp dev support w/o next.config.js should fail when domain is not defined in next.config.js",
      "with latest sharp dev support w/o next.config.js should fail when internal url is not an image",
      "with latest sharp dev support w/o next.config.js should fail when q is greater than 100",
      "with latest sharp dev support w/o next.config.js should fail when q is less than 1",
      "with latest sharp dev support w/o next.config.js should fail when q is missing",
      "with latest sharp dev support w/o next.config.js should fail when q is not a number",
      "with latest sharp dev support w/o next.config.js should fail when url has file protocol",
      "with latest sharp dev support w/o next.config.js should fail when url has ftp protocol",
      "with latest sharp dev support w/o next.config.js should fail when url is missing",
      "with latest sharp dev support w/o next.config.js should fail when w is 0",
      "with latest sharp dev support w/o next.config.js should fail when w is less than 0",
      "with latest sharp dev support w/o next.config.js should fail when w is missing",
      "with latest sharp dev support w/o next.config.js should fail when w is not a number",
      "with latest sharp dev support w/o next.config.js should fail when width is not in next.config.js",
      "with latest sharp dev support w/o next.config.js should handle non-ascii characters in image url",
      "with latest sharp dev support w/o next.config.js should maintain animated gif",
      "with latest sharp dev support w/o next.config.js should maintain animated png",
      "with latest sharp dev support w/o next.config.js should maintain animated png 2",
      "with latest sharp dev support w/o next.config.js should maintain animated webp",
      "with latest sharp dev support w/o next.config.js should maintain bmp",
      "with latest sharp dev support w/o next.config.js should maintain ico format",
      "with latest sharp dev support w/o next.config.js should maintain jpg format for old Safari",
      "with latest sharp dev support w/o next.config.js should maintain png format for old Safari",
      "with latest sharp dev support w/o next.config.js should not allow vector svg",
      "with latest sharp dev support w/o next.config.js should not have sharp missing warning",
      "with latest sharp dev support w/o next.config.js should not have sharp outdated warning",
      "with latest sharp dev support w/o next.config.js should not resize if requested width is larger than original source image",
      "with latest sharp dev support w/o next.config.js should resize relative url and old Chrome accept header as webp",
      "with latest sharp dev support w/o next.config.js should resize relative url and png accept header",
      "with latest sharp dev support w/o next.config.js should resize relative url and webp Firefox accept header",
      "with latest sharp dev support w/o next.config.js should resize relative url with invalid accept header as gif",
      "with latest sharp dev support w/o next.config.js should resize relative url with invalid accept header as png",
      "with latest sharp dev support w/o next.config.js should resize relative url with invalid accept header as tiff",
      "with latest sharp dev support w/o next.config.js should set 304 status without body when etag matches if-none-match",
      "with latest sharp dev support w/o next.config.js should set cache-control to immutable for static images",
      "with latest sharp dev support w/o next.config.js should use cache and stale-while-revalidate when query is the same for internal image",
      "with latest sharp dev support w/o next.config.js should use cached image file when parameters are the same for animated gif",
      "with latest sharp dev support with next.config.js should automatically detect image type when content-type is octet-stream",
      "with latest sharp dev support with next.config.js should compress avif smaller than webp at q=100",
      "with latest sharp dev support with next.config.js should compress avif smaller than webp at q=50",
      "with latest sharp dev support with next.config.js should compress avif smaller than webp at q=75",
      "with latest sharp dev support with next.config.js should downlevel avif format to jpeg for old Safari",
      "with latest sharp dev support with next.config.js should downlevel webp format to jpeg for old Safari",
      "with latest sharp dev support with next.config.js should emit blur svg when width is 8 in dev but not prod",
      "with latest sharp dev support with next.config.js should emit blur svg when width is less than 8 in dev but not prod",
      "with latest sharp dev support with next.config.js should fail when domain is not defined in next.config.js",
      "with latest sharp dev support with next.config.js should fail when internal url is not an image",
      "with latest sharp dev support with next.config.js should fail when q is greater than 100",
      "with latest sharp dev support with next.config.js should fail when q is less than 1",
      "with latest sharp dev support with next.config.js should fail when q is missing",
      "with latest sharp dev support with next.config.js should fail when q is not a number",
      "with latest sharp dev support with next.config.js should fail when url has file protocol",
      "with latest sharp dev support with next.config.js should fail when url has ftp protocol",
      "with latest sharp dev support with next.config.js should fail when url is missing",
      "with latest sharp dev support with next.config.js should fail when w is 0",
      "with latest sharp dev support with next.config.js should fail when w is less than 0",
      "with latest sharp dev support with next.config.js should fail when w is missing",
      "with latest sharp dev support with next.config.js should fail when w is not a number",
      "with latest sharp dev support with next.config.js should fail when width is not in next.config.js",
      "with latest sharp dev support with next.config.js should handle concurrent requests",
      "with latest sharp dev support with next.config.js should handle non-ascii characters in image url",
      "with latest sharp dev support with next.config.js should maintain animated gif",
      "with latest sharp dev support with next.config.js should maintain animated png",
      "with latest sharp dev support with next.config.js should maintain animated png 2",
      "with latest sharp dev support with next.config.js should maintain animated webp",
      "with latest sharp dev support with next.config.js should maintain bmp",
      "with latest sharp dev support with next.config.js should maintain ico format",
      "with latest sharp dev support with next.config.js should maintain jpg format for old Safari",
      "with latest sharp dev support with next.config.js should maintain png format for old Safari",
      "with latest sharp dev support with next.config.js should normalize invalid status codes",
      "with latest sharp dev support with next.config.js should not allow vector svg",
      "with latest sharp dev support with next.config.js should not have sharp missing warning",
      "with latest sharp dev support with next.config.js should not have sharp outdated warning",
      "with latest sharp dev support with next.config.js should not resize if requested width is larger than original source image",
      "with latest sharp dev support with next.config.js should resize absolute url from localhost",
      "with latest sharp dev support with next.config.js should resize relative url and new Chrome accept header as avif",
      "with latest sharp dev support with next.config.js should resize relative url and old Chrome accept header as webp",
      "with latest sharp dev support with next.config.js should resize relative url and png accept header",
      "with latest sharp dev support with next.config.js should resize relative url and webp Firefox accept header",
      "with latest sharp dev support with next.config.js should resize relative url with invalid accept header as gif",
      "with latest sharp dev support with next.config.js should resize relative url with invalid accept header as png",
      "with latest sharp dev support with next.config.js should resize relative url with invalid accept header as tiff",
      "with latest sharp dev support with next.config.js should set 304 status without body when etag matches if-none-match",
      "with latest sharp dev support with next.config.js should set cache-control to immutable for static images",
      "with latest sharp dev support with next.config.js should use cache and stale-while-revalidate when query is the same for external image",
      "with latest sharp dev support with next.config.js should use cache and stale-while-revalidate when query is the same for internal image",
      "with latest sharp dev support with next.config.js should use cached image file when parameters are the same for animated gif"
    ],
    "failed": [
      "with latest sharp Server support w/o next.config.js should downlevel avif format to jpeg for old Safari",
      "with latest sharp Server support w/o next.config.js should downlevel webp format to jpeg for old Safari",
      "with latest sharp Server support w/o next.config.js should emit blur svg when width is 8 in dev but not prod",
      "with latest sharp Server support w/o next.config.js should emit blur svg when width is less than 8 in dev but not prod",
      "with latest sharp Server support w/o next.config.js should error if the image file does not exist",
      "with latest sharp Server support w/o next.config.js should error if the resource isn't a valid image",
      "with latest sharp Server support w/o next.config.js should fail when domain is not defined in next.config.js",
      "with latest sharp Server support w/o next.config.js should fail when internal url is not an image",
      "with latest sharp Server support w/o next.config.js should fail when q is greater than 100",
      "with latest sharp Server support w/o next.config.js should fail when q is less than 1",
      "with latest sharp Server support w/o next.config.js should fail when q is missing",
      "with latest sharp Server support w/o next.config.js should fail when q is not a number",
      "with latest sharp Server support w/o next.config.js should fail when url has file protocol",
      "with latest sharp Server support w/o next.config.js should fail when url has ftp protocol",
      "with latest sharp Server support w/o next.config.js should fail when url is missing",
      "with latest sharp Server support w/o next.config.js should fail when w is 0",
      "with latest sharp Server support w/o next.config.js should fail when w is less than 0",
      "with latest sharp Server support w/o next.config.js should fail when w is missing",
      "with latest sharp Server support w/o next.config.js should fail when w is not a number",
      "with latest sharp Server support w/o next.config.js should fail when width is not in next.config.js",
      "with latest sharp Server support w/o next.config.js should handle non-ascii characters in image url",
      "with latest sharp Server support w/o next.config.js should maintain animated gif",
      "with latest sharp Server support w/o next.config.js should maintain animated png",
      "with latest sharp Server support w/o next.config.js should maintain animated png 2",
      "with latest sharp Server support w/o next.config.js should maintain animated webp",
      "with latest sharp Server support w/o next.config.js should maintain bmp",
      "with latest sharp Server support w/o next.config.js should maintain ico format",
      "with latest sharp Server support w/o next.config.js should maintain jpg format for old Safari",
      "with latest sharp Server support w/o next.config.js should maintain png format for old Safari",
      "with latest sharp Server support w/o next.config.js should not allow svg with application header",
      "with latest sharp Server support w/o next.config.js should not allow svg with comma header",
      "with latest sharp Server support w/o next.config.js should not allow svg with uppercase header",
      "with latest sharp Server support w/o next.config.js should not allow vector svg",
      "with latest sharp Server support w/o next.config.js should not have sharp missing warning",
      "with latest sharp Server support w/o next.config.js should not have sharp outdated warning",
      "with latest sharp Server support w/o next.config.js should not resize if requested width is larger than original source image",
      "with latest sharp Server support w/o next.config.js should resize relative url and old Chrome accept header as webp",
      "with latest sharp Server support w/o next.config.js should resize relative url and png accept header",
      "with latest sharp Server support w/o next.config.js should resize relative url and webp Firefox accept header",
      "with latest sharp Server support w/o next.config.js should resize relative url with invalid accept header as gif",
      "with latest sharp Server support w/o next.config.js should resize relative url with invalid accept header as png",
      "with latest sharp Server support w/o next.config.js should resize relative url with invalid accept header as tiff",
      "with latest sharp Server support w/o next.config.js should return home page",
      "with latest sharp Server support w/o next.config.js should set 304 status without body when etag matches if-none-match",
      "with latest sharp Server support w/o next.config.js should set cache-control to immutable for static images",
      "with latest sharp Server support w/o next.config.js should use cache and stale-while-revalidate when query is the same for internal image",
      "with latest sharp Server support w/o next.config.js should use cached image file when parameters are the same for animated gif",
      "with latest sharp Server support with next.config.js should automatically detect image type when content-type is octet-stream",
      "with latest sharp Server support with next.config.js should compress avif smaller than webp at q=100",
      "with latest sharp Server support with next.config.js should compress avif smaller than webp at q=50",
      "with latest sharp Server support with next.config.js should compress avif smaller than webp at q=75",
      "with latest sharp Server support with next.config.js should downlevel avif format to jpeg for old Safari",
      "with latest sharp Server support with next.config.js should downlevel webp format to jpeg for old Safari",
      "with latest sharp Server support with next.config.js should emit blur svg when width is 8 in dev but not prod",
      "with latest sharp Server support with next.config.js should emit blur svg when width is less than 8 in dev but not prod",
      "with latest sharp Server support with next.config.js should error if the image file does not exist",
      "with latest sharp Server support with next.config.js should error if the resource isn't a valid image",
      "with latest sharp Server support with next.config.js should fail when domain is not defined in next.config.js",
      "with latest sharp Server support with next.config.js should fail when internal url is not an image",
      "with latest sharp Server support with next.config.js should fail when q is greater than 100",
      "with latest sharp Server support with next.config.js should fail when q is less than 1",
      "with latest sharp Server support with next.config.js should fail when q is missing",
      "with latest sharp Server support with next.config.js should fail when q is not a number",
      "with latest sharp Server support with next.config.js should fail when url fails to load an image",
      "with latest sharp Server support with next.config.js should fail when url has file protocol",
      "with latest sharp Server support with next.config.js should fail when url has ftp protocol",
      "with latest sharp Server support with next.config.js should fail when url is missing",
      "with latest sharp Server support with next.config.js should fail when w is 0",
      "with latest sharp Server support with next.config.js should fail when w is less than 0",
      "with latest sharp Server support with next.config.js should fail when w is missing",
      "with latest sharp Server support with next.config.js should fail when w is not a number",
      "with latest sharp Server support with next.config.js should fail when width is not in next.config.js",
      "with latest sharp Server support with next.config.js should handle concurrent requests",
      "with latest sharp Server support with next.config.js should handle non-ascii characters in image url",
      "with latest sharp Server support with next.config.js should maintain animated gif",
      "with latest sharp Server support with next.config.js should maintain animated png",
      "with latest sharp Server support with next.config.js should maintain animated png 2",
      "with latest sharp Server support with next.config.js should maintain animated webp",
      "with latest sharp Server support with next.config.js should maintain bmp",
      "with latest sharp Server support with next.config.js should maintain ico format",
      "with latest sharp Server support with next.config.js should maintain jpg format for old Safari",
      "with latest sharp Server support with next.config.js should maintain png format for old Safari",
      "with latest sharp Server support with next.config.js should normalize invalid status codes",
      "with latest sharp Server support with next.config.js should not allow svg with application header",
      "with latest sharp Server support with next.config.js should not allow svg with comma header",
      "with latest sharp Server support with next.config.js should not allow svg with uppercase header",
      "with latest sharp Server support with next.config.js should not allow vector svg",
      "with latest sharp Server support with next.config.js should not have sharp missing warning",
      "with latest sharp Server support with next.config.js should not have sharp outdated warning",
      "with latest sharp Server support with next.config.js should not resize if requested width is larger than original source image",
      "with latest sharp Server support with next.config.js should resize absolute url from localhost",
      "with latest sharp Server support with next.config.js should resize relative url and new Chrome accept header as avif",
      "with latest sharp Server support with next.config.js should resize relative url and old Chrome accept header as webp",
      "with latest sharp Server support with next.config.js should resize relative url and png accept header",
      "with latest sharp Server support with next.config.js should resize relative url and webp Firefox accept header",
      "with latest sharp Server support with next.config.js should resize relative url with invalid accept header as gif",
      "with latest sharp Server support with next.config.js should resize relative url with invalid accept header as png",
      "with latest sharp Server support with next.config.js should resize relative url with invalid accept header as tiff",
      "with latest sharp Server support with next.config.js should return home page",
      "with latest sharp Server support with next.config.js should set 304 status without body when etag matches if-none-match",
      "with latest sharp Server support with next.config.js should set cache-control to immutable for static images",
      "with latest sharp Server support with next.config.js should use cache and stale-while-revalidate when query is the same for external image",
      "with latest sharp Server support with next.config.js should use cache and stale-while-revalidate when query is the same for internal image",
      "with latest sharp Server support with next.config.js should use cached image file when parameters are the same for animated gif",
      "with latest sharp dev support w/o next.config.js should error if the image file does not exist",
      "with latest sharp dev support w/o next.config.js should error if the resource isn't a valid image",
      "with latest sharp dev support w/o next.config.js should not allow svg with application header",
      "with latest sharp dev support w/o next.config.js should not allow svg with comma header",
      "with latest sharp dev support w/o next.config.js should not allow svg with uppercase header",
      "with latest sharp dev support w/o next.config.js should return home page",
      "with latest sharp dev support with next.config.js should error if the image file does not exist",
      "with latest sharp dev support with next.config.js should error if the resource isn't a valid image",
      "with latest sharp dev support with next.config.js should fail when url fails to load an image",
      "with latest sharp dev support with next.config.js should not allow svg with application header",
      "with latest sharp dev support with next.config.js should not allow svg with comma header",
      "with latest sharp dev support with next.config.js should not allow svg with uppercase header",
      "with latest sharp dev support with next.config.js should return home page"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/image-optimizer/test/squoosh.test.ts": {
    "passed": [
      "with squoosh dev support w/o next.config.js should downlevel avif format to jpeg for old Safari",
      "with squoosh dev support w/o next.config.js should downlevel webp format to jpeg for old Safari",
      "with squoosh dev support w/o next.config.js should emit blur svg when width is 8 in dev but not prod",
      "with squoosh dev support w/o next.config.js should emit blur svg when width is less than 8 in dev but not prod",
      "with squoosh dev support w/o next.config.js should error if the image file does not exist",
      "with squoosh dev support w/o next.config.js should error if the resource isn't a valid image",
      "with squoosh dev support w/o next.config.js should fail when domain is not defined in next.config.js",
      "with squoosh dev support w/o next.config.js should fail when internal url is not an image",
      "with squoosh dev support w/o next.config.js should fail when q is greater than 100",
      "with squoosh dev support w/o next.config.js should fail when q is less than 1",
      "with squoosh dev support w/o next.config.js should fail when q is missing",
      "with squoosh dev support w/o next.config.js should fail when q is not a number",
      "with squoosh dev support w/o next.config.js should fail when url has file protocol",
      "with squoosh dev support w/o next.config.js should fail when url has ftp protocol",
      "with squoosh dev support w/o next.config.js should fail when url is missing",
      "with squoosh dev support w/o next.config.js should fail when w is 0",
      "with squoosh dev support w/o next.config.js should fail when w is less than 0",
      "with squoosh dev support w/o next.config.js should fail when w is missing",
      "with squoosh dev support w/o next.config.js should fail when w is not a number",
      "with squoosh dev support w/o next.config.js should fail when width is not in next.config.js",
      "with squoosh dev support w/o next.config.js should handle non-ascii characters in image url",
      "with squoosh dev support w/o next.config.js should maintain animated gif",
      "with squoosh dev support w/o next.config.js should maintain animated png",
      "with squoosh dev support w/o next.config.js should maintain animated png 2",
      "with squoosh dev support w/o next.config.js should maintain animated webp",
      "with squoosh dev support w/o next.config.js should maintain bmp",
      "with squoosh dev support w/o next.config.js should maintain ico format",
      "with squoosh dev support w/o next.config.js should maintain jpg format for old Safari",
      "with squoosh dev support w/o next.config.js should maintain png format for old Safari",
      "with squoosh dev support w/o next.config.js should not allow svg with application header",
      "with squoosh dev support w/o next.config.js should not allow svg with comma header",
      "with squoosh dev support w/o next.config.js should not allow svg with uppercase header",
      "with squoosh dev support w/o next.config.js should not allow vector svg",
      "with squoosh dev support w/o next.config.js should not change the color type of a png",
      "with squoosh dev support w/o next.config.js should not have sharp missing warning",
      "with squoosh dev support w/o next.config.js should not have sharp outdated warning",
      "with squoosh dev support w/o next.config.js should not resize if requested width is larger than original source image",
      "with squoosh dev support w/o next.config.js should resize relative url and old Chrome accept header as webp",
      "with squoosh dev support w/o next.config.js should resize relative url and png accept header",
      "with squoosh dev support w/o next.config.js should resize relative url and webp Firefox accept header",
      "with squoosh dev support w/o next.config.js should resize relative url with invalid accept header as gif",
      "with squoosh dev support w/o next.config.js should resize relative url with invalid accept header as png",
      "with squoosh dev support w/o next.config.js should resize relative url with invalid accept header as tiff",
      "with squoosh dev support w/o next.config.js should set 304 status without body when etag matches if-none-match",
      "with squoosh dev support w/o next.config.js should set cache-control to immutable for static images",
      "with squoosh dev support w/o next.config.js should use cache and stale-while-revalidate when query is the same for internal image",
      "with squoosh dev support w/o next.config.js should use cached image file when parameters are the same for animated gif",
      "with squoosh dev support with next.config.js should automatically detect image type when content-type is octet-stream",
      "with squoosh dev support with next.config.js should compress avif smaller than webp at q=100",
      "with squoosh dev support with next.config.js should compress avif smaller than webp at q=50",
      "with squoosh dev support with next.config.js should compress avif smaller than webp at q=75",
      "with squoosh dev support with next.config.js should downlevel avif format to jpeg for old Safari",
      "with squoosh dev support with next.config.js should downlevel webp format to jpeg for old Safari",
      "with squoosh dev support with next.config.js should emit blur svg when width is 8 in dev but not prod",
      "with squoosh dev support with next.config.js should emit blur svg when width is less than 8 in dev but not prod",
      "with squoosh dev support with next.config.js should error if the image file does not exist",
      "with squoosh dev support with next.config.js should error if the resource isn't a valid image",
      "with squoosh dev support with next.config.js should fail when domain is not defined in next.config.js",
      "with squoosh dev support with next.config.js should fail when internal url is not an image",
      "with squoosh dev support with next.config.js should fail when q is greater than 100",
      "with squoosh dev support with next.config.js should fail when q is less than 1",
      "with squoosh dev support with next.config.js should fail when q is missing",
      "with squoosh dev support with next.config.js should fail when q is not a number",
      "with squoosh dev support with next.config.js should fail when url fails to load an image",
      "with squoosh dev support with next.config.js should fail when url has file protocol",
      "with squoosh dev support with next.config.js should fail when url has ftp protocol",
      "with squoosh dev support with next.config.js should fail when url is missing",
      "with squoosh dev support with next.config.js should fail when w is 0",
      "with squoosh dev support with next.config.js should fail when w is less than 0",
      "with squoosh dev support with next.config.js should fail when w is missing",
      "with squoosh dev support with next.config.js should fail when w is not a number",
      "with squoosh dev support with next.config.js should fail when width is not in next.config.js",
      "with squoosh dev support with next.config.js should handle concurrent requests",
      "with squoosh dev support with next.config.js should handle non-ascii characters in image url",
      "with squoosh dev support with next.config.js should maintain animated gif",
      "with squoosh dev support with next.config.js should maintain animated png",
      "with squoosh dev support with next.config.js should maintain animated png 2",
      "with squoosh dev support with next.config.js should maintain animated webp",
      "with squoosh dev support with next.config.js should maintain bmp",
      "with squoosh dev support with next.config.js should maintain ico format",
      "with squoosh dev support with next.config.js should maintain jpg format for old Safari",
      "with squoosh dev support with next.config.js should maintain png format for old Safari",
      "with squoosh dev support with next.config.js should normalize invalid status codes",
      "with squoosh dev support with next.config.js should not allow svg with application header",
      "with squoosh dev support with next.config.js should not allow svg with comma header",
      "with squoosh dev support with next.config.js should not allow svg with uppercase header",
      "with squoosh dev support with next.config.js should not allow vector svg",
      "with squoosh dev support with next.config.js should not change the color type of a png",
      "with squoosh dev support with next.config.js should not have sharp missing warning",
      "with squoosh dev support with next.config.js should not have sharp outdated warning",
      "with squoosh dev support with next.config.js should not resize if requested width is larger than original source image",
      "with squoosh dev support with next.config.js should resize absolute url from localhost",
      "with squoosh dev support with next.config.js should resize relative url and new Chrome accept header as avif",
      "with squoosh dev support with next.config.js should resize relative url and old Chrome accept header as webp",
      "with squoosh dev support with next.config.js should resize relative url and png accept header",
      "with squoosh dev support with next.config.js should resize relative url and webp Firefox accept header",
      "with squoosh dev support with next.config.js should resize relative url with invalid accept header as gif",
      "with squoosh dev support with next.config.js should resize relative url with invalid accept header as png",
      "with squoosh dev support with next.config.js should resize relative url with invalid accept header as tiff",
      "with squoosh dev support with next.config.js should set 304 status without body when etag matches if-none-match",
      "with squoosh dev support with next.config.js should set cache-control to immutable for static images",
      "with squoosh dev support with next.config.js should use cache and stale-while-revalidate when query is the same for external image",
      "with squoosh dev support with next.config.js should use cache and stale-while-revalidate when query is the same for internal image",
      "with squoosh dev support with next.config.js should use cached image file when parameters are the same for animated gif"
    ],
    "failed": [
      "with squoosh Server support w/o next.config.js should downlevel avif format to jpeg for old Safari",
      "with squoosh Server support w/o next.config.js should downlevel webp format to jpeg for old Safari",
      "with squoosh Server support w/o next.config.js should emit blur svg when width is 8 in dev but not prod",
      "with squoosh Server support w/o next.config.js should emit blur svg when width is less than 8 in dev but not prod",
      "with squoosh Server support w/o next.config.js should error if the image file does not exist",
      "with squoosh Server support w/o next.config.js should error if the resource isn't a valid image",
      "with squoosh Server support w/o next.config.js should fail when domain is not defined in next.config.js",
      "with squoosh Server support w/o next.config.js should fail when internal url is not an image",
      "with squoosh Server support w/o next.config.js should fail when q is greater than 100",
      "with squoosh Server support w/o next.config.js should fail when q is less than 1",
      "with squoosh Server support w/o next.config.js should fail when q is missing",
      "with squoosh Server support w/o next.config.js should fail when q is not a number",
      "with squoosh Server support w/o next.config.js should fail when url has file protocol",
      "with squoosh Server support w/o next.config.js should fail when url has ftp protocol",
      "with squoosh Server support w/o next.config.js should fail when url is missing",
      "with squoosh Server support w/o next.config.js should fail when w is 0",
      "with squoosh Server support w/o next.config.js should fail when w is less than 0",
      "with squoosh Server support w/o next.config.js should fail when w is missing",
      "with squoosh Server support w/o next.config.js should fail when w is not a number",
      "with squoosh Server support w/o next.config.js should fail when width is not in next.config.js",
      "with squoosh Server support w/o next.config.js should handle non-ascii characters in image url",
      "with squoosh Server support w/o next.config.js should have sharp missing warning",
      "with squoosh Server support w/o next.config.js should maintain animated gif",
      "with squoosh Server support w/o next.config.js should maintain animated png",
      "with squoosh Server support w/o next.config.js should maintain animated png 2",
      "with squoosh Server support w/o next.config.js should maintain animated webp",
      "with squoosh Server support w/o next.config.js should maintain bmp",
      "with squoosh Server support w/o next.config.js should maintain ico format",
      "with squoosh Server support w/o next.config.js should maintain jpg format for old Safari",
      "with squoosh Server support w/o next.config.js should maintain png format for old Safari",
      "with squoosh Server support w/o next.config.js should not allow svg with application header",
      "with squoosh Server support w/o next.config.js should not allow svg with comma header",
      "with squoosh Server support w/o next.config.js should not allow svg with uppercase header",
      "with squoosh Server support w/o next.config.js should not allow vector svg",
      "with squoosh Server support w/o next.config.js should not change the color type of a png",
      "with squoosh Server support w/o next.config.js should not have sharp outdated warning",
      "with squoosh Server support w/o next.config.js should not resize if requested width is larger than original source image",
      "with squoosh Server support w/o next.config.js should resize relative url and old Chrome accept header as webp",
      "with squoosh Server support w/o next.config.js should resize relative url and png accept header",
      "with squoosh Server support w/o next.config.js should resize relative url and webp Firefox accept header",
      "with squoosh Server support w/o next.config.js should resize relative url with invalid accept header as gif",
      "with squoosh Server support w/o next.config.js should resize relative url with invalid accept header as png",
      "with squoosh Server support w/o next.config.js should resize relative url with invalid accept header as tiff",
      "with squoosh Server support w/o next.config.js should return home page",
      "with squoosh Server support w/o next.config.js should set 304 status without body when etag matches if-none-match",
      "with squoosh Server support w/o next.config.js should set cache-control to immutable for static images",
      "with squoosh Server support w/o next.config.js should use cache and stale-while-revalidate when query is the same for internal image",
      "with squoosh Server support w/o next.config.js should use cached image file when parameters are the same for animated gif",
      "with squoosh Server support with next.config.js should automatically detect image type when content-type is octet-stream",
      "with squoosh Server support with next.config.js should compress avif smaller than webp at q=100",
      "with squoosh Server support with next.config.js should compress avif smaller than webp at q=50",
      "with squoosh Server support with next.config.js should compress avif smaller than webp at q=75",
      "with squoosh Server support with next.config.js should downlevel avif format to jpeg for old Safari",
      "with squoosh Server support with next.config.js should downlevel webp format to jpeg for old Safari",
      "with squoosh Server support with next.config.js should emit blur svg when width is 8 in dev but not prod",
      "with squoosh Server support with next.config.js should emit blur svg when width is less than 8 in dev but not prod",
      "with squoosh Server support with next.config.js should error if the image file does not exist",
      "with squoosh Server support with next.config.js should error if the resource isn't a valid image",
      "with squoosh Server support with next.config.js should fail when domain is not defined in next.config.js",
      "with squoosh Server support with next.config.js should fail when internal url is not an image",
      "with squoosh Server support with next.config.js should fail when q is greater than 100",
      "with squoosh Server support with next.config.js should fail when q is less than 1",
      "with squoosh Server support with next.config.js should fail when q is missing",
      "with squoosh Server support with next.config.js should fail when q is not a number",
      "with squoosh Server support with next.config.js should fail when url fails to load an image",
      "with squoosh Server support with next.config.js should fail when url has file protocol",
      "with squoosh Server support with next.config.js should fail when url has ftp protocol",
      "with squoosh Server support with next.config.js should fail when url is missing",
      "with squoosh Server support with next.config.js should fail when w is 0",
      "with squoosh Server support with next.config.js should fail when w is less than 0",
      "with squoosh Server support with next.config.js should fail when w is missing",
      "with squoosh Server support with next.config.js should fail when w is not a number",
      "with squoosh Server support with next.config.js should fail when width is not in next.config.js",
      "with squoosh Server support with next.config.js should handle concurrent requests",
      "with squoosh Server support with next.config.js should handle non-ascii characters in image url",
      "with squoosh Server support with next.config.js should have sharp missing warning",
      "with squoosh Server support with next.config.js should maintain animated gif",
      "with squoosh Server support with next.config.js should maintain animated png",
      "with squoosh Server support with next.config.js should maintain animated png 2",
      "with squoosh Server support with next.config.js should maintain animated webp",
      "with squoosh Server support with next.config.js should maintain bmp",
      "with squoosh Server support with next.config.js should maintain ico format",
      "with squoosh Server support with next.config.js should maintain jpg format for old Safari",
      "with squoosh Server support with next.config.js should maintain png format for old Safari",
      "with squoosh Server support with next.config.js should normalize invalid status codes",
      "with squoosh Server support with next.config.js should not allow svg with application header",
      "with squoosh Server support with next.config.js should not allow svg with comma header",
      "with squoosh Server support with next.config.js should not allow svg with uppercase header",
      "with squoosh Server support with next.config.js should not allow vector svg",
      "with squoosh Server support with next.config.js should not change the color type of a png",
      "with squoosh Server support with next.config.js should not have sharp outdated warning",
      "with squoosh Server support with next.config.js should not resize if requested width is larger than original source image",
      "with squoosh Server support with next.config.js should resize absolute url from localhost",
      "with squoosh Server support with next.config.js should resize relative url and new Chrome accept header as avif",
      "with squoosh Server support with next.config.js should resize relative url and old Chrome accept header as webp",
      "with squoosh Server support with next.config.js should resize relative url and png accept header",
      "with squoosh Server support with next.config.js should resize relative url and webp Firefox accept header",
      "with squoosh Server support with next.config.js should resize relative url with invalid accept header as gif",
      "with squoosh Server support with next.config.js should resize relative url with invalid accept header as png",
      "with squoosh Server support with next.config.js should resize relative url with invalid accept header as tiff",
      "with squoosh Server support with next.config.js should return home page",
      "with squoosh Server support with next.config.js should set 304 status without body when etag matches if-none-match",
      "with squoosh Server support with next.config.js should set cache-control to immutable for static images",
      "with squoosh Server support with next.config.js should use cache and stale-while-revalidate when query is the same for external image",
      "with squoosh Server support with next.config.js should use cache and stale-while-revalidate when query is the same for internal image",
      "with squoosh Server support with next.config.js should use cached image file when parameters are the same for animated gif",
      "with squoosh dev support w/o next.config.js should return home page",
      "with squoosh dev support with next.config.js should return home page"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/import-assertion/test/index.test.js": {
    "passed": ["import-assertion dev should handle json assertions"],
    "failed": ["import-assertion prod should handle json assertions"],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/index-index/test/index.test.js": {
    "passed": [
      "nested index.js dev mode should 404 on /index/index/index",
      "nested index.js dev mode should client render page /",
      "nested index.js dev mode should client render page /index",
      "nested index.js dev mode should client render page /index/index",
      "nested index.js dev mode should client render page /index/project",
      "nested index.js dev mode should client render page /index/user",
      "nested index.js dev mode should follow link to /",
      "nested index.js dev mode should follow link to /index",
      "nested index.js dev mode should follow link to /index/index",
      "nested index.js dev mode should follow link to /index/project",
      "nested index.js dev mode should follow link to /index/user",
      "nested index.js dev mode should not find a link to /index/index/index",
      "nested index.js dev mode should ssr page /",
      "nested index.js dev mode should ssr page /index",
      "nested index.js dev mode should ssr page /index/index",
      "nested index.js dev mode should ssr page /index/project",
      "nested index.js dev mode should ssr page /index/user",
      "nested index.js production mode should 404 on /index/index/index",
      "nested index.js production mode should client render page /",
      "nested index.js production mode should client render page /index",
      "nested index.js production mode should client render page /index/index",
      "nested index.js production mode should client render page /index/project",
      "nested index.js production mode should client render page /index/user",
      "nested index.js production mode should follow link to /",
      "nested index.js production mode should follow link to /index",
      "nested index.js production mode should follow link to /index/index",
      "nested index.js production mode should follow link to /index/project",
      "nested index.js production mode should follow link to /index/user",
      "nested index.js production mode should not find a link to /index/index/index",
      "nested index.js production mode should ssr page /",
      "nested index.js production mode should ssr page /index",
      "nested index.js production mode should ssr page /index/index",
      "nested index.js production mode should ssr page /index/project",
      "nested index.js production mode should ssr page /index/user"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/initial-ref/test/index.test.js": {
    "passed": [
      "Initial Refs dev mode Has correct initial ref values",
      "Initial Refs production mode Has correct initial ref values"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/invalid-config-values/test/index.test.js": {
    "passed": [
      "Handles valid/invalid assetPrefix should not error when assetPrefix is a string",
      "Handles valid/invalid assetPrefix should not error without usage of assetPrefix"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/invalid-custom-routes/test/index.test.js": {
    "passed": [
      "Errors on invalid custom routes dev mode should error during next build for invalid headers",
      "Errors on invalid custom routes dev mode should error during next build for invalid redirects",
      "Errors on invalid custom routes dev mode should error during next build for invalid rewrites",
      "Errors on invalid custom routes dev mode should error when empty headers array is present on header item",
      "Errors on invalid custom routes dev mode should error when source and destination length is exceeded",
      "Errors on invalid custom routes dev mode should show formatted error for redirect source parse fail",
      "Errors on invalid custom routes dev mode should show valid error when non-array is returned from headers",
      "Errors on invalid custom routes dev mode should show valid error when non-array is returned from redirects",
      "Errors on invalid custom routes dev mode should show valid error when non-array is returned from rewrites",
      "Errors on invalid custom routes dev mode should show valid error when segments not in source are used in destination",
      "Errors on invalid custom routes production mode should error during next build for invalid headers",
      "Errors on invalid custom routes production mode should error during next build for invalid redirects",
      "Errors on invalid custom routes production mode should error during next build for invalid rewrites",
      "Errors on invalid custom routes production mode should error when empty headers array is present on header item",
      "Errors on invalid custom routes production mode should error when source and destination length is exceeded",
      "Errors on invalid custom routes production mode should show formatted error for redirect source parse fail",
      "Errors on invalid custom routes production mode should show valid error when non-array is returned from headers",
      "Errors on invalid custom routes production mode should show valid error when non-array is returned from redirects",
      "Errors on invalid custom routes production mode should show valid error when non-array is returned from rewrites",
      "Errors on invalid custom routes production mode should show valid error when segments not in source are used in destination"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/invalid-document-image-import/test/index.test.js": {
    "passed": [],
    "failed": [
      "Invalid static image import in _document Should fail to build when disableStaticImages in next.config.js",
      "Invalid static image import in _document Should fail to build when no next.config.js"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/invalid-href/test/index.test.js": {
    "passed": [
      "Invalid hrefs dev mode does not show error when https://google.com is used as href on Link",
      "Invalid hrefs dev mode does not show error when mailto: is used as href on Link",
      "Invalid hrefs dev mode does not throw error when dynamic route mismatch is used on Link and params are manually provided",
      "Invalid hrefs dev mode doesn't fail on invalid url",
      "Invalid hrefs dev mode shows error when dynamic route mismatch is used on Link",
      "Invalid hrefs dev mode shows error when internal href is used with external as",
      "Invalid hrefs dev mode shows warning when dynamic route mismatch is used on Link",
      "Invalid hrefs production mode renders a link with invalid href",
      "Invalid hrefs production mode renders a link with mailto: href",
      "Invalid hrefs production mode shows error when dynamic route mismatch is used on Link"
    ],
    "failed": [
      "Invalid hrefs production mode does not show error in production when https://google.com is used as href on Link",
      "Invalid hrefs production mode does not show error in production when mailto: is used as href on Link",
      "Invalid hrefs production mode does not show error when internal href is used with external as",
      "Invalid hrefs production mode doesn't fail on invalid url"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/invalid-middleware-matchers/test/index.test.js": {
    "passed": [
      "Errors on invalid custom middleware matchers dev mode should error during next build for invalid matchers",
      "Errors on invalid custom middleware matchers dev mode should error when source length is exceeded"
    ],
    "failed": [
      "Errors on invalid custom middleware matchers production mode should error during next build for invalid matchers",
      "Errors on invalid custom middleware matchers production mode should error when source length is exceeded"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/invalid-multi-match/test/index.test.js": {
    "passed": [
      "Custom routes invalid multi-match dev mode should show error for invalid mulit-match",
      "Custom routes invalid multi-match production mode should show error for invalid mulit-match"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/invalid-page-automatic-static-optimization/test/index.test.js": {
    "passed": [
      "Invalid Page automatic static optimization Fails softly with descriptive error",
      "Invalid Page automatic static optimization handles non-error correctly"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/invalid-revalidate-values/test/index.test.js": {
    "passed": [
      "Invalid revalidate values should not show error for false revalidate value",
      "Invalid revalidate values should not show error for true revalidate value",
      "Invalid revalidate values should not show error initially",
      "Invalid revalidate values should show error for float revalidate value",
      "Invalid revalidate values should show error for null revalidate value",
      "Invalid revalidate values should show error for string revalidate value"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/invalid-server-options/test/index.test.js": {
    "passed": [
      "Invalid server options next() called with dev as array should send warning",
      "Invalid server options next() called with dev as function should send warning",
      "Invalid server options next() called with dev as number should send warning",
      "Invalid server options next() called with dev as object should send warning",
      "Invalid server options next() called with dev as string should send warning",
      "Invalid server options next() called with no parameters should throw error",
      "Invalid server options next() called with null parameter should throw error",
      "Invalid server options next() called with undefined parameter should throw error"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/jsconfig-baseurl/test/index.test.js": {
    "passed": ["TypeScript Features default behavior should render the page"],
    "failed": [
      "TypeScript Features default behavior should have correct module not found error",
      "TypeScript Features should build should trace correctly"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/jsconfig-empty/test/index.test.js": {
    "passed": [],
    "failed": ["Empty JSConfig Support should compile successfully"],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/jsconfig/test/index.test.js": {
    "passed": [],
    "failed": [
      "jsconfig.json should build normally",
      "jsconfig.json should fail on invalid jsconfig.json"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/json-serialize-original-error/test/index.test.js": {
    "passed": ["JSON Serialization should fail with original error"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/link-ref/test/index.test.js": {
    "passed": [
      "Invalid hrefs dev mode should handle child ref that is a function",
      "Invalid hrefs dev mode should handle child ref with React.createRef",
      "Invalid hrefs dev mode should not have a race condition with a click handler",
      "Invalid hrefs dev mode should not show error for class component as child of next/link",
      "Invalid hrefs dev mode should not show error for function component with forwardRef",
      "Invalid hrefs production mode should not have a race condition with a click handler",
      "Invalid hrefs production mode should preload with child ref with React.createRef",
      "Invalid hrefs production mode should preload with child ref with function",
      "Invalid hrefs production mode should preload with forwardRef"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/link-with-encoding/test/index.test.js": {
    "passed": [
      "Link Component with Encoding colon should have correct parsing of url query params",
      "Link Component with Encoding colon should have correct query on Router#push",
      "Link Component with Encoding colon should have correct query on SSR",
      "Link Component with Encoding colon should have correct query on simple client-side <Link>",
      "Link Component with Encoding double quote should have correct query on Router#push",
      "Link Component with Encoding double quote should have correct query on SSR",
      "Link Component with Encoding double quote should have correct query on simple client-side <Link>",
      "Link Component with Encoding forward slash should have correct query on Router#push",
      "Link Component with Encoding forward slash should have correct query on SSR",
      "Link Component with Encoding forward slash should have correct query on simple client-side <Link>",
      "Link Component with Encoding percent should have correct query on Router#push",
      "Link Component with Encoding percent should have correct query on SSR",
      "Link Component with Encoding percent should have correct query on simple client-side <Link>",
      "Link Component with Encoding spaces should have correct query on Router#push",
      "Link Component with Encoding spaces should have correct query on SSR",
      "Link Component with Encoding spaces should have correct query on simple client-side <Link>"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/link-with-multiple-child/test/index.test.js": {
    "passed": [
      "multiple child with default legacyBehavior",
      "multiple child with forced legacyBehavior=false",
      "single child"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/link-without-router/test/index.test.js": {
    "passed": [
      "Link without a router dev mode should not throw when rendered",
      "Link without a router production mode should not throw when rendered"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/middleware-basic/test/index.test.js": {
    "passed": ["dev mode loads a middleware"],
    "failed": [],
    "pending": ["production mode loads a middleware"],
    "runtimeError": false
  },
  "test/integration/middleware-build-errors/test/index.test.js": {
    "passed": [
      "Middleware validation during build given a middleware building body with JSON.stringify does not throw an error",
      "Middleware validation during build given a middleware building response body with a variable does not throw an error",
      "Middleware validation during build given a middleware building response body with custom code does not throw an error",
      "Middleware validation during build given a middleware returning a null body builds successfully",
      "Middleware validation during build given a middleware returning a text body does not throw an error",
      "Middleware validation during build given a middleware returning a text body with NextResponse does not throw an error",
      "Middleware validation during build given a middleware returning an undefined body builds successfully"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/middleware-dev-update/test/index.test.js": {
    "passed": [
      "Middleware development errors when matcher is added sends response correctly",
      "Middleware development errors when middleware is added sends response correctly",
      "Middleware development errors when middleware is removed and re-added sends response correctly",
      "Middleware development errors when middleware is removed sends response correctly"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/middleware-overrides-node.js-api/test/index.test.ts": {
    "passed": [
      "Middleware overriding a Node.js API dev mode does not show a warning and allows overriding"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/middleware-prefetch/tests/index.test.js": {
    "passed": [],
    "failed": [
      "Middleware Production Prefetch does not prefetch provided path if it will be rewritten",
      "Middleware Production Prefetch prefetch correctly for unexistent routes"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/middleware-src/test/index.test.js": {
    "passed": [
      "Middleware in src/ and / folders dev mode loads and runs only root middleware"
    ],
    "failed": [
      "Middleware in src/ and / folders production mode loads and runs only root middleware",
      "Middleware in src/ and / folders production mode should warn about middleware on export",
      "Middleware in src/ folder dev mode loads an runs src middleware",
      "Middleware in src/ folder production mode loads an runs src middleware",
      "Middleware in src/ folder production mode should warn about middleware on export"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/missing-document-component-error/test/index.test.js": {
    "passed": [
      "Missing _document components error should detect missing Head component",
      "Missing _document components error should detect missing Html component",
      "Missing _document components error should detect missing Main component",
      "Missing _document components error should detect missing NextScript component",
      "Missing _document components error should detect multiple missing document components"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/mixed-ssg-serverprops-error/test/index.test.js": {
    "passed": [
      "Mixed getStaticProps and getServerSideProps error should error when exporting getStaticPaths on a non-dynamic page"
    ],
    "failed": [
      "Mixed getStaticProps and getServerSideProps error should error when exporting both getStaticPaths and getServerSideProps",
      "Mixed getStaticProps and getServerSideProps error should error when exporting both getStaticProps and getServerSideProps",
      "Mixed getStaticProps and getServerSideProps error should error with getStaticProps but no default export"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-dynamic-css/test/index.test.js": {
    "passed": [
      "next/dynamic dev mode should load page correctly",
      "next/dynamic production mode should load page correctly"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-dynamic-lazy-compilation/test/index.test.js": {
    "passed": [],
    "failed": [
      "next/dynamic dev mode should render dynamic server rendered values before hydration",
      "next/dynamic dev mode should render dynamic server rendered values on client mount",
      "next/dynamic dev mode should render server value",
      "next/dynamic production mode should render dynamic server rendered values before hydration",
      "next/dynamic production mode should render dynamic server rendered values on client mount",
      "next/dynamic production mode should render server value"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/integration/next-dynamic/test/index.test.js": {
    "passed": [
      "next/dynamic dev mode should render server value",
      "next/dynamic production mode should render server value"
    ],
    "failed": [
      "next/dynamic dev mode should render dynamic server rendered values on client mount",
      "next/dynamic production mode should render dynamic server rendered values on client mount"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-legacy/asset-prefix/test/index.test.ts": {
    "passed": [
      "Image Component assetPrefix Tests server mode should use base64 data url with placeholder=blur during next start"
    ],
    "failed": [
      "Image Component assetPrefix Tests dev mode should include assetPrefix when placeholder=blur during next dev"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-legacy/base-path/test/index.test.ts": {
    "passed": [
      "Image Component basePath Tests dev mode should correctly ignore prose styles",
      "Image Component basePath Tests dev mode should load the images",
      "Image Component basePath Tests dev mode should show invalid src error",
      "Image Component basePath Tests dev mode should show invalid src error when protocol-relative",
      "Image Component basePath Tests dev mode should show missing src error",
      "Image Component basePath Tests dev mode should update the image on src change",
      "Image Component basePath Tests dev mode should work when using flexbox",
      "Image Component basePath Tests dev mode should work with layout-fill to fill the parent and stretch with viewport",
      "Image Component basePath Tests dev mode should work with layout-fill to fill the parent but NOT stretch with viewport",
      "Image Component basePath Tests dev mode should work with layout-fixed so resizing window does not resize image",
      "Image Component basePath Tests dev mode should work with layout-intrinsic so resizing window maintains image aspect ratio",
      "Image Component basePath Tests dev mode should work with layout-responsive so resizing window maintains image aspect ratio",
      "Image Component basePath Tests dev mode should work with sizes and automatically use layout-responsive",
      "Image Component basePath Tests server mode should correctly ignore prose styles",
      "Image Component basePath Tests server mode should correctly rotate image",
      "Image Component basePath Tests server mode should load the images",
      "Image Component basePath Tests server mode should update the image on src change",
      "Image Component basePath Tests server mode should work when using flexbox",
      "Image Component basePath Tests server mode should work with layout-fill to fill the parent and stretch with viewport",
      "Image Component basePath Tests server mode should work with layout-fill to fill the parent but NOT stretch with viewport",
      "Image Component basePath Tests server mode should work with layout-fixed so resizing window does not resize image",
      "Image Component basePath Tests server mode should work with layout-intrinsic so resizing window maintains image aspect ratio",
      "Image Component basePath Tests server mode should work with layout-responsive so resizing window maintains image aspect ratio",
      "Image Component basePath Tests server mode should work with sizes and automatically use layout-responsive"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-legacy/base-path/test/static.test.ts": {
    "passed": [
      "Static Image Component Tests for basePath dev mode Should allow an image with a static src to omit height and width",
      "Static Image Component Tests for basePath dev mode Should allow provided width and height to override intrinsic",
      "Static Image Component Tests for basePath dev mode Should automatically provide an image height and width",
      "Static Image Component Tests for basePath production mode Should allow an image with a static src to omit height and width",
      "Static Image Component Tests for basePath production mode Should allow provided width and height to override intrinsic",
      "Static Image Component Tests for basePath production mode Should automatically provide an image height and width"
    ],
    "failed": [
      "Build Error Tests for basePath should throw build error when import statement is used with missing file",
      "Static Image Component Tests for basePath dev mode Should add a blur placeholder to statically imported jpg",
      "Static Image Component Tests for basePath dev mode Should add a blur placeholder to statically imported png",
      "Static Image Component Tests for basePath dev mode Should use immutable cache-control header for static import",
      "Static Image Component Tests for basePath production mode Should add a blur placeholder to statically imported jpg",
      "Static Image Component Tests for basePath production mode Should add a blur placeholder to statically imported png",
      "Static Image Component Tests for basePath production mode Should use immutable cache-control header even when unoptimized",
      "Static Image Component Tests for basePath production mode Should use immutable cache-control header for static import"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-legacy/basic/test/index.test.ts": {
    "passed": [
      "Image Component Tests Client-side Image Component Tests Client-side Errors Should not log an error when an unregistered host is used in production",
      "Image Component Tests Client-side Image Component Tests should add a srcset based on the loader",
      "Image Component Tests Client-side Image Component Tests should add a srcset even with preceding slash in prop",
      "Image Component Tests Client-side Image Component Tests should correctly generate src even if preceding slash is included in prop",
      "Image Component Tests Client-side Image Component Tests should keep auto parameter if already set",
      "Image Component Tests Client-side Image Component Tests should keep fit parameter if already set",
      "Image Component Tests Client-side Image Component Tests should keep width parameter if already set",
      "Image Component Tests Client-side Image Component Tests should modify src with the loader",
      "Image Component Tests Client-side Image Component Tests should not add a srcset if unoptimized attribute present",
      "Image Component Tests Client-side Image Component Tests should render an image tag",
      "Image Component Tests Client-side Image Component Tests should support passing through arbitrary attributes",
      "Image Component Tests Client-side Image Component Tests should support the unoptimized attribute",
      "Image Component Tests Client-side Image Component Tests should use imageSizes when width matches, not deviceSizes from next.config.js",
      "Image Component Tests Client-side Lazy Loading Tests should have loaded the first image immediately",
      "Image Component Tests Client-side Lazy Loading Tests should load the fifth image eagerly, without scrolling",
      "Image Component Tests Client-side Lazy Loading Tests should load the fourth image lazily after scrolling down",
      "Image Component Tests Client-side Lazy Loading Tests should load the second image after scrolling down",
      "Image Component Tests Client-side Lazy Loading Tests should load the sixth image, which has lazyBoundary property after scrolling down",
      "Image Component Tests Client-side Lazy Loading Tests should load the third image, which is unoptimized, after scrolling further down",
      "Image Component Tests Client-side Lazy Loading Tests should not have loaded the second image immediately",
      "Image Component Tests Client-side Lazy Loading Tests should not have loaded the third image after scrolling down",
      "Image Component Tests Client-side Lazy Loading Tests should pass through classes on a lazy loaded image",
      "Image Component Tests SSR Image Component Tests should add a preload tag for a priority image",
      "Image Component Tests SSR Image Component Tests should add a preload tag for a priority image with preceding slash",
      "Image Component Tests SSR Image Component Tests should add a preload tag for a priority image, with arbitrary host",
      "Image Component Tests SSR Image Component Tests should add a preload tag for a priority image, with quality",
      "Image Component Tests SSR Image Component Tests should add a srcset based on the loader",
      "Image Component Tests SSR Image Component Tests should add a srcset even with preceding slash in prop",
      "Image Component Tests SSR Image Component Tests should add data-nimg data attribute based on layout",
      "Image Component Tests SSR Image Component Tests should correctly generate src even if preceding slash is included in prop",
      "Image Component Tests SSR Image Component Tests should keep auto parameter if already set",
      "Image Component Tests SSR Image Component Tests should keep fit parameter if already set",
      "Image Component Tests SSR Image Component Tests should keep width parameter if already set",
      "Image Component Tests SSR Image Component Tests should modify src with the loader",
      "Image Component Tests SSR Image Component Tests should not add a srcset if unoptimized attribute present",
      "Image Component Tests SSR Image Component Tests should not create any preload tags higher up the page than CSS preload tags",
      "Image Component Tests SSR Image Component Tests should not pass config to custom loader prop",
      "Image Component Tests SSR Image Component Tests should render an image tag",
      "Image Component Tests SSR Image Component Tests should support passing through arbitrary attributes",
      "Image Component Tests SSR Image Component Tests should support the unoptimized attribute",
      "Image Component Tests SSR Image Component Tests should use imageSizes when width matches, not deviceSizes from next.config.js",
      "Image Component Tests SSR Lazy Loading Tests should have loaded the first image immediately",
      "Image Component Tests SSR Lazy Loading Tests should load the fifth image eagerly, without scrolling",
      "Image Component Tests SSR Lazy Loading Tests should load the fourth image lazily after scrolling down",
      "Image Component Tests SSR Lazy Loading Tests should load the second image after scrolling down",
      "Image Component Tests SSR Lazy Loading Tests should load the sixth image, which has lazyBoundary property after scrolling down",
      "Image Component Tests SSR Lazy Loading Tests should load the third image, which is unoptimized, after scrolling further down",
      "Image Component Tests SSR Lazy Loading Tests should not have loaded the second image immediately",
      "Image Component Tests SSR Lazy Loading Tests should not have loaded the third image after scrolling down",
      "Image Component Tests SSR Lazy Loading Tests should pass through classes on a lazy loaded image"
    ],
    "failed": [
      "Image Component Tests Client-side Image Component Tests should only be loaded once if `sizes` is set"
    ],
    "pending": [
      "Image Component Tests Client-side Image Component Tests should NOT add a preload tag for a priority image"
    ],
    "runtimeError": false
  },
  "test/integration/next-image-legacy/custom-resolver/test/index.test.ts": {
    "passed": [
      "Custom Resolver Tests Client-side Custom Loader Tests Should use a custom resolver for image URL",
      "Custom Resolver Tests Client-side Custom Loader Tests should add a srcset based on the custom resolver",
      "Custom Resolver Tests Client-side Custom Loader Tests should support the unoptimized attribute",
      "Custom Resolver Tests SSR Custom Loader Tests Should use a custom resolver for image URL",
      "Custom Resolver Tests SSR Custom Loader Tests should add a srcset based on the custom resolver",
      "Custom Resolver Tests SSR Custom Loader Tests should support the unoptimized attribute"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-legacy/default/test/index.test.ts": {
    "passed": [
      "Image Component Tests dev mode should apply filter style after image loads",
      "Image Component Tests dev mode should apply style inheritance for img elements but not wrapper elements",
      "Image Component Tests dev mode should be valid HTML",
      "Image Component Tests dev mode should callback native onError when error occured while loading image",
      "Image Component Tests dev mode should callback native onLoad in most cases",
      "Image Component Tests dev mode should callback onLoadingComplete when image is fully loaded",
      "Image Component Tests dev mode should correctly ignore prose styles",
      "Image Component Tests dev mode should emit image for next/dynamic with non ssr case",
      "Image Component Tests dev mode should handle the styles prop appropriately",
      "Image Component Tests dev mode should have blurry placeholder when enabled",
      "Image Component Tests dev mode should initially load only two of four images using lazyroot",
      "Image Component Tests dev mode should load the images",
      "Image Component Tests dev mode should not pass through user-provided srcset (causing a flash)",
      "Image Component Tests dev mode should not use blurry placeholder for <noscript> image",
      "Image Component Tests dev mode should not warn when Image is child of p",
      "Image Component Tests dev mode should not warn when svg, even if with loader prop or without",
      "Image Component Tests dev mode should preload priority images",
      "Image Component Tests dev mode should re-lazyload images after src changes",
      "Image Component Tests dev mode should remove blurry placeholder after image loads",
      "Image Component Tests dev mode should show error when not numeric string width or height",
      "Image Component Tests dev mode should show error when static import and placeholder=blur and blurDataUrl is missing",
      "Image Component Tests dev mode should show error when string src and placeholder=blur and blurDataURL is missing",
      "Image Component Tests dev mode should show invalid src error",
      "Image Component Tests dev mode should show invalid src error when protocol-relative",
      "Image Component Tests dev mode should show missing src error",
      "Image Component Tests dev mode should update the image on src change",
      "Image Component Tests dev mode should warn at most once even after state change",
      "Image Component Tests dev mode should warn when img with layout=fill is inside a container without position relative",
      "Image Component Tests dev mode should warn when img with layout=responsive is inside flex container",
      "Image Component Tests dev mode should warn when loader is missing width",
      "Image Component Tests dev mode should warn when priority prop is missing on LCP image",
      "Image Component Tests dev mode should warn when using a very small image with placeholder=blur",
      "Image Component Tests dev mode should warn when using sizes with incorrect layout",
      "Image Component Tests dev mode should work when using flexbox",
      "Image Component Tests dev mode should work with image with blob src",
      "Image Component Tests dev mode should work with layout-fill to fill the parent and stretch with viewport",
      "Image Component Tests dev mode should work with layout-fill to fill the parent but NOT stretch with viewport",
      "Image Component Tests dev mode should work with layout-fixed so resizing window does not resize image",
      "Image Component Tests dev mode should work with layout-intrinsic so resizing window maintains image aspect ratio",
      "Image Component Tests dev mode should work with layout-responsive so resizing window maintains image aspect ratio",
      "Image Component Tests dev mode should work with sizes and automatically use layout-responsive",
      "Image Component Tests server mode should apply filter style after image loads",
      "Image Component Tests server mode should apply style inheritance for img elements but not wrapper elements",
      "Image Component Tests server mode should be valid HTML",
      "Image Component Tests server mode should callback native onError when error occured while loading image",
      "Image Component Tests server mode should correctly ignore prose styles",
      "Image Component Tests server mode should correctly rotate image",
      "Image Component Tests server mode should handle the styles prop appropriately",
      "Image Component Tests server mode should have blurry placeholder when enabled",
      "Image Component Tests server mode should initially load only two of four images using lazyroot",
      "Image Component Tests server mode should load the images",
      "Image Component Tests server mode should not create an image folder in server/chunks",
      "Image Component Tests server mode should not pass through user-provided srcset (causing a flash)",
      "Image Component Tests server mode should not use blurry placeholder for <noscript> image",
      "Image Component Tests server mode should preload priority images",
      "Image Component Tests server mode should re-lazyload images after src changes",
      "Image Component Tests server mode should remove blurry placeholder after image loads",
      "Image Component Tests server mode should update the image on src change",
      "Image Component Tests server mode should work when using flexbox",
      "Image Component Tests server mode should work with image with blob src",
      "Image Component Tests server mode should work with layout-fill to fill the parent and stretch with viewport",
      "Image Component Tests server mode should work with layout-fill to fill the parent but NOT stretch with viewport",
      "Image Component Tests server mode should work with layout-fixed so resizing window does not resize image",
      "Image Component Tests server mode should work with layout-intrinsic so resizing window maintains image aspect ratio",
      "Image Component Tests server mode should work with layout-responsive so resizing window maintains image aspect ratio",
      "Image Component Tests server mode should work with sizes and automatically use layout-responsive"
    ],
    "failed": [
      "Image Component Tests server mode should callback native onLoad in most cases",
      "Image Component Tests server mode should callback onLoadingComplete when image is fully loaded",
      "Image Component Tests server mode should emit image for next/dynamic with non ssr case"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-legacy/default/test/static.test.ts": {
    "passed": [
      "Static Image Component Tests Should allow an image with a static src to omit height and width",
      "Static Image Component Tests Should allow provided width and height to override intrinsic",
      "Static Image Component Tests Should automatically provide an image height and width"
    ],
    "failed": [
      "Build Error Tests should throw build error when import statement is used with missing file",
      "Static Image Component Tests Should add a blur placeholder to statically imported jpg",
      "Static Image Component Tests Should add a blur placeholder to statically imported png",
      "Static Image Component Tests Should use immutable cache-control header even when unoptimized",
      "Static Image Component Tests Should use immutable cache-control header for static import",
      "Static Image Component Tests should load direct imported image",
      "Static Image Component Tests should load staticprops imported image"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-legacy/image-from-node-modules/test/index.test.ts": {
    "passed": [],
    "failed": [
      "Image Component Tests In Dev Mode should apply image config for node_modules",
      "Image Component Tests In Prod Mode should apply image config for node_modules"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-legacy/no-intersection-observer-fallback/test/index.test.ts": {
    "passed": [
      "Image Component No IntersectionObserver test Client-side Lazy Loading Tests should automatically load images if observer does not exist",
      "Image Component No IntersectionObserver test SSR Lazy Loading Tests should automatically load images if observer does not exist"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-legacy/noscript/test/index.test.ts": {
    "passed": [
      "Noscript Tests Noscript page source tests should use loader url for noscript img#image-with-loader src attribute",
      "Noscript Tests Noscript page source tests should use local API for noscript img#basic-image src attribute"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-legacy/react-virtualized/test/index.test.ts": {
    "passed": [
      "react-virtualized wrapping next/legacy/image production should not cancel requests for images"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-legacy/svgo-webpack/test/index.test.ts": {
    "passed": [],
    "failed": [
      "svgo-webpack with Image Component next build should not fail to build invalid usage of the Image component",
      "svgo-webpack with Image Component next dev should print error when invalid Image usage"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-legacy/trailing-slash/test/index.test.ts": {
    "passed": [],
    "failed": [
      "Image Component Trailing Slash Tests dev mode should include trailing slash when trailingSlash is set on config file during next dev",
      "Image Component Trailing Slash Tests server mode should include trailing slash when trailingSlash is set on config file during next start"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-legacy/typescript/test/index.test.ts": {
    "passed": [
      "TypeScript Image Component next build should fail to build invalid usage of the Image component",
      "TypeScript Image Component next build should remove global image types when disabled",
      "TypeScript Image Component next dev should have image types when enabled",
      "TypeScript Image Component next dev should print error when invalid Image usage",
      "TypeScript Image Component next dev should render the valid Image usage and not print error",
      "TypeScript Image Component should remove global image types when disabled (dev)"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-legacy/unicode/test/index.test.ts": {
    "passed": [],
    "failed": [
      "Image Component Unicode Image URL dev mode should load external image with space",
      "Image Component Unicode Image URL dev mode should load external unicode image",
      "Image Component Unicode Image URL dev mode should load internal image with space",
      "Image Component Unicode Image URL dev mode should load internal unicode image",
      "Image Component Unicode Image URL dev mode should load static unicode image",
      "Image Component Unicode Image URL server mode should load external image with space",
      "Image Component Unicode Image URL server mode should load external unicode image",
      "Image Component Unicode Image URL server mode should load internal image with space",
      "Image Component Unicode Image URL server mode should load internal unicode image",
      "Image Component Unicode Image URL server mode should load static unicode image"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-legacy/unoptimized/test/index.test.ts": {
    "passed": [
      "Unoptimized Image Tests dev mode should not optimize any image",
      "Unoptimized Image Tests server mode should not optimize any image"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-new/app-dir/test/index.test.ts": {
    "passed": [
      "Image Component Default Tests dev mode Fill-mode tests should add 100% width and height to fill images",
      "Image Component Default Tests dev mode Fill-mode tests should add position styles to fill images",
      "Image Component Default Tests dev mode Fill-mode tests should add position:absolute to fill images",
      "Image Component Default Tests dev mode Fill-mode tests should include a data-attribute on fill images",
      "Image Component Default Tests dev mode Fill-mode tests should log warnings when using fill mode incorrectly",
      "Image Component Default Tests dev mode Fill-mode tests should not log incorrect warnings",
      "Image Component Default Tests dev mode Fill-mode tests should not log warnings when image unmounts",
      "Image Component Default Tests dev mode should apply filter style after image loads",
      "Image Component Default Tests dev mode should apply style inheritance for img elements but not wrapper elements",
      "Image Component Default Tests dev mode should be valid HTML",
      "Image Component Default Tests dev mode should callback native onError even when error before hydration",
      "Image Component Default Tests dev mode should callback native onError when error occured while loading image",
      "Image Component Default Tests dev mode should callback native onLoad with sythetic event",
      "Image Component Default Tests dev mode should callback onLoadingComplete when image is fully loaded",
      "Image Component Default Tests dev mode should correctly ignore prose styles",
      "Image Component Default Tests dev mode should emit image for next/dynamic with non ssr case",
      "Image Component Default Tests dev mode should handle the styles prop appropriately",
      "Image Component Default Tests dev mode should have blurry placeholder when enabled",
      "Image Component Default Tests dev mode should have data url placeholder when enabled",
      "Image Component Default Tests dev mode should load the images",
      "Image Component Default Tests dev mode should not pass through user-provided srcset (causing a flash)",
      "Image Component Default Tests dev mode should not warn when Image is child of p",
      "Image Component Default Tests dev mode should not warn when data url image with fill and sizes props",
      "Image Component Default Tests dev mode should not warn when svg, even if with loader prop or without",
      "Image Component Default Tests dev mode should preload priority images",
      "Image Component Default Tests dev mode should remove blurry placeholder after image loads",
      "Image Component Default Tests dev mode should remove data url placeholder after image loads",
      "Image Component Default Tests dev mode should render correct objectFit when blurDataURL and fill",
      "Image Component Default Tests dev mode should render correct objectFit when data url placeholder and fill",
      "Image Component Default Tests dev mode should render no wrappers or sizers",
      "Image Component Default Tests dev mode should render picture via getImgProps",
      "Image Component Default Tests dev mode should show empty string src error",
      "Image Component Default Tests dev mode should show error when CSS position changed on fill image",
      "Image Component Default Tests dev mode should show error when invalid Infinity width prop",
      "Image Component Default Tests dev mode should show error when invalid height prop",
      "Image Component Default Tests dev mode should show error when invalid width prop",
      "Image Component Default Tests dev mode should show error when missing height prop",
      "Image Component Default Tests dev mode should show error when missing width prop",
      "Image Component Default Tests dev mode should show error when static import and placeholder=blur and blurDataUrl is missing",
      "Image Component Default Tests dev mode should show error when string src and placeholder=blur and blurDataURL is missing",
      "Image Component Default Tests dev mode should show error when width prop on fill image",
      "Image Component Default Tests dev mode should show invalid src error",
      "Image Component Default Tests dev mode should show invalid src error when protocol-relative",
      "Image Component Default Tests dev mode should show missing alt error",
      "Image Component Default Tests dev mode should show missing src error",
      "Image Component Default Tests dev mode should update the image on src change",
      "Image Component Default Tests dev mode should warn at most once even after state change",
      "Image Component Default Tests dev mode should warn when legacy prop layout=fill",
      "Image Component Default Tests dev mode should warn when legacy prop layout=responsive",
      "Image Component Default Tests dev mode should warn when loader is missing width",
      "Image Component Default Tests dev mode should warn when priority prop is missing on LCP image",
      "Image Component Default Tests dev mode should warn when using a very small image with placeholder=blur",
      "Image Component Default Tests dev mode should work when using flexbox",
      "Image Component Default Tests dev mode should work with image with blob src",
      "Image Component Default Tests dev mode should work with sizes and automatically use responsive srcset",
      "Image Component Default Tests server mode Fill-mode tests should add 100% width and height to fill images",
      "Image Component Default Tests server mode Fill-mode tests should add position styles to fill images",
      "Image Component Default Tests server mode Fill-mode tests should add position:absolute to fill images",
      "Image Component Default Tests server mode Fill-mode tests should include a data-attribute on fill images",
      "Image Component Default Tests server mode should apply style inheritance for img elements but not wrapper elements",
      "Image Component Default Tests server mode should be valid HTML",
      "Image Component Default Tests server mode should correctly ignore prose styles",
      "Image Component Default Tests server mode should correctly rotate image",
      "Image Component Default Tests server mode should handle the styles prop appropriately",
      "Image Component Default Tests server mode should have blurry placeholder when enabled",
      "Image Component Default Tests server mode should have data url placeholder when enabled",
      "Image Component Default Tests server mode should load the images",
      "Image Component Default Tests server mode should not create an image folder in server/chunks",
      "Image Component Default Tests server mode should not pass through user-provided srcset (causing a flash)",
      "Image Component Default Tests server mode should preload priority images",
      "Image Component Default Tests server mode should render correct objectFit when blurDataURL and fill",
      "Image Component Default Tests server mode should render correct objectFit when data url placeholder and fill",
      "Image Component Default Tests server mode should render no wrappers or sizers",
      "Image Component Default Tests server mode should render picture via getImgProps",
      "Image Component Default Tests server mode should warn when legacy prop layout=fill",
      "Image Component Default Tests server mode should warn when legacy prop layout=responsive",
      "Image Component Default Tests server mode should work when using flexbox",
      "Image Component Default Tests server mode should work with sizes and automatically use responsive srcset"
    ],
    "failed": [
      "Image Component Default Tests dev mode should lazy load with placeholder=blur",
      "Image Component Default Tests server mode should apply filter style after image loads",
      "Image Component Default Tests server mode should callback native onError even when error before hydration",
      "Image Component Default Tests server mode should callback native onError when error occured while loading image",
      "Image Component Default Tests server mode should callback native onLoad with sythetic event",
      "Image Component Default Tests server mode should callback onLoadingComplete when image is fully loaded",
      "Image Component Default Tests server mode should emit image for next/dynamic with non ssr case",
      "Image Component Default Tests server mode should lazy load with placeholder=blur",
      "Image Component Default Tests server mode should remove blurry placeholder after image loads",
      "Image Component Default Tests server mode should remove data url placeholder after image loads",
      "Image Component Default Tests server mode should render as unoptimized with empty string src prop",
      "Image Component Default Tests server mode should render as unoptimized with missing src prop",
      "Image Component Default Tests server mode should update the image on src change",
      "Image Component Default Tests server mode should work with image with blob src"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-new/app-dir/test/static.test.ts": {
    "passed": [
      "Static Image Component Tests dev mode Should allow an image with a static src to omit height and width",
      "Static Image Component Tests dev mode Should automatically provide an image height and width",
      "Static Image Component Tests dev mode should add a data URL placeholder to an image",
      "Static Image Component Tests dev mode should add placeholder even when blurDataURL aspect ratio does not match width/height ratio",
      "Static Image Component Tests dev mode should add placeholder with blurDataURL and fill",
      "Static Image Component Tests dev mode should load direct imported image",
      "Static Image Component Tests dev mode should use height prop to adjust both width and height",
      "Static Image Component Tests dev mode should use width and height prop to override import",
      "Static Image Component Tests dev mode should use width prop to adjust both width and height",
      "Static Image Component Tests production mode Should allow an image with a static src to omit height and width",
      "Static Image Component Tests production mode Should automatically provide an image height and width",
      "Static Image Component Tests production mode should add a data URL placeholder to an image",
      "Static Image Component Tests production mode should add placeholder even when blurDataURL aspect ratio does not match width/height ratio",
      "Static Image Component Tests production mode should add placeholder with blurDataURL and fill",
      "Static Image Component Tests production mode should use height prop to adjust both width and height",
      "Static Image Component Tests production mode should use width and height prop to override import",
      "Static Image Component Tests production mode should use width prop to adjust both width and height"
    ],
    "failed": [
      "Build Error Tests should throw build error when import statement is used with missing file",
      "Static Image Component Tests dev mode should add a blur placeholder a statically imported jpg",
      "Static Image Component Tests dev mode should add a blur placeholder a statically imported png",
      "Static Image Component Tests dev mode should add a blur placeholder a statically imported png with fill",
      "Static Image Component Tests dev mode should have <head> containing <meta name=\"viewport\"> followed by <link rel=\"preload\"> for priority image",
      "Static Image Component Tests production mode Should use immutable cache-control header even when unoptimized",
      "Static Image Component Tests production mode Should use immutable cache-control header for static import",
      "Static Image Component Tests production mode should add a blur placeholder a statically imported jpg",
      "Static Image Component Tests production mode should add a blur placeholder a statically imported png",
      "Static Image Component Tests production mode should add a blur placeholder a statically imported png with fill",
      "Static Image Component Tests production mode should have <head> containing <meta name=\"viewport\"> followed by <link rel=\"preload\"> for priority image",
      "Static Image Component Tests production mode should load direct imported image"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-new/asset-prefix/test/index.test.js": {
    "passed": [
      "Image Component assetPrefix Tests server mode should use base64 data url with placeholder=blur during next start"
    ],
    "failed": [
      "Image Component assetPrefix Tests dev mode should include assetPrefix when placeholder=blur during next dev"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-new/base-path/test/index.test.js": {
    "passed": [
      "Image Component basePath Tests dev mode should correctly ignore prose styles",
      "Image Component basePath Tests dev mode should load the images",
      "Image Component basePath Tests dev mode should show invalid src error",
      "Image Component basePath Tests dev mode should show invalid src error when protocol-relative",
      "Image Component basePath Tests dev mode should show missing src error",
      "Image Component basePath Tests dev mode should update the image on src change",
      "Image Component basePath Tests dev mode should work when using flexbox",
      "Image Component basePath Tests server mode should correctly ignore prose styles",
      "Image Component basePath Tests server mode should load the images",
      "Image Component basePath Tests server mode should update the image on src change",
      "Image Component basePath Tests server mode should work when using flexbox"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-new/base-path/test/static.test.js": {
    "passed": [
      "Static Image Component Tests for basePath dev mode Should allow an image with a static src to omit height and width",
      "Static Image Component Tests for basePath dev mode Should automatically provide an image height and width",
      "Static Image Component Tests for basePath dev mode should add a data URL placeholder to an image",
      "Static Image Component Tests for basePath dev mode should use height prop to adjust both width and height",
      "Static Image Component Tests for basePath dev mode should use width and height prop to override import",
      "Static Image Component Tests for basePath dev mode should use width prop to adjust both width and height",
      "Static Image Component Tests for basePath production mode Should allow an image with a static src to omit height and width",
      "Static Image Component Tests for basePath production mode Should automatically provide an image height and width",
      "Static Image Component Tests for basePath production mode should add a data URL placeholder to an image",
      "Static Image Component Tests for basePath production mode should use height prop to adjust both width and height",
      "Static Image Component Tests for basePath production mode should use width and height prop to override import",
      "Static Image Component Tests for basePath production mode should use width prop to adjust both width and height"
    ],
    "failed": [
      "Build Error Tests should throw build error when import statement is used with missing file",
      "Static Image Component Tests for basePath dev mode should add a blur placeholder a statically imported jpg",
      "Static Image Component Tests for basePath dev mode should add a blur placeholder a statically imported png",
      "Static Image Component Tests for basePath dev mode should have <head> containing <meta name=\"viewport\"> followed by <link rel=\"preload\"> for priority image",
      "Static Image Component Tests for basePath production mode Should use immutable cache-control header even when unoptimized",
      "Static Image Component Tests for basePath production mode Should use immutable cache-control header for static import",
      "Static Image Component Tests for basePath production mode should add a blur placeholder a statically imported jpg",
      "Static Image Component Tests for basePath production mode should add a blur placeholder a statically imported png",
      "Static Image Component Tests for basePath production mode should have <head> containing <meta name=\"viewport\"> followed by <link rel=\"preload\"> for priority image"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-new/both-basepath-trailingslash/test/index.test.ts": {
    "passed": [
      "Image Component basePath + trailingSlash Tests dev mode should correctly load image src from string",
      "Image Component basePath + trailingSlash Tests server mode should correctly load image src from string"
    ],
    "failed": [
      "Image Component basePath + trailingSlash Tests dev mode should correctly load image src from import",
      "Image Component basePath + trailingSlash Tests server mode should correctly load image src from import"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-new/default/test/index.test.ts": {
    "passed": [
      "Image Component Default Tests dev mode Fill-mode tests should add 100% width and height to fill images",
      "Image Component Default Tests dev mode Fill-mode tests should add position styles to fill images",
      "Image Component Default Tests dev mode Fill-mode tests should add position:absolute to fill images",
      "Image Component Default Tests dev mode Fill-mode tests should include a data-attribute on fill images",
      "Image Component Default Tests dev mode Fill-mode tests should log warnings when using fill mode incorrectly",
      "Image Component Default Tests dev mode Fill-mode tests should not log incorrect warnings",
      "Image Component Default Tests dev mode Fill-mode tests should not log warnings when image unmounts",
      "Image Component Default Tests dev mode should apply filter style after image loads",
      "Image Component Default Tests dev mode should apply style inheritance for img elements but not wrapper elements",
      "Image Component Default Tests dev mode should be valid HTML",
      "Image Component Default Tests dev mode should callback native onError even when error before hydration",
      "Image Component Default Tests dev mode should callback native onError when error occured while loading image",
      "Image Component Default Tests dev mode should callback native onLoad with sythetic event",
      "Image Component Default Tests dev mode should callback onLoadingComplete when image is fully loaded",
      "Image Component Default Tests dev mode should correctly ignore prose styles",
      "Image Component Default Tests dev mode should emit image for next/dynamic with non ssr case",
      "Image Component Default Tests dev mode should handle the styles prop appropriately",
      "Image Component Default Tests dev mode should have blurry placeholder when enabled",
      "Image Component Default Tests dev mode should have data url placeholder when enabled",
      "Image Component Default Tests dev mode should load the images",
      "Image Component Default Tests dev mode should not pass through user-provided srcset (causing a flash)",
      "Image Component Default Tests dev mode should not warn when Image is child of p",
      "Image Component Default Tests dev mode should not warn when data url image with fill and sizes props",
      "Image Component Default Tests dev mode should not warn when svg, even if with loader prop or without",
      "Image Component Default Tests dev mode should preload priority images",
      "Image Component Default Tests dev mode should remove blurry placeholder after image loads",
      "Image Component Default Tests dev mode should remove data url placeholder after image loads",
      "Image Component Default Tests dev mode should render correct objectFit when blurDataURL and fill",
      "Image Component Default Tests dev mode should render correct objectFit when data url placeholder and fill",
      "Image Component Default Tests dev mode should render no wrappers or sizers",
      "Image Component Default Tests dev mode should render picture via getImgProps",
      "Image Component Default Tests dev mode should show empty string src error",
      "Image Component Default Tests dev mode should show error when CSS position changed on fill image",
      "Image Component Default Tests dev mode should show error when invalid Infinity width prop",
      "Image Component Default Tests dev mode should show error when invalid height prop",
      "Image Component Default Tests dev mode should show error when invalid width prop",
      "Image Component Default Tests dev mode should show error when missing height prop",
      "Image Component Default Tests dev mode should show error when missing width prop",
      "Image Component Default Tests dev mode should show error when static import and placeholder=blur and blurDataUrl is missing",
      "Image Component Default Tests dev mode should show error when string src and placeholder=blur and blurDataURL is missing",
      "Image Component Default Tests dev mode should show error when width prop on fill image",
      "Image Component Default Tests dev mode should show invalid src error",
      "Image Component Default Tests dev mode should show invalid src error when protocol-relative",
      "Image Component Default Tests dev mode should show missing alt error",
      "Image Component Default Tests dev mode should show missing src error",
      "Image Component Default Tests dev mode should update the image on src change",
      "Image Component Default Tests dev mode should warn at most once even after state change",
      "Image Component Default Tests dev mode should warn when legacy prop layout=fill",
      "Image Component Default Tests dev mode should warn when legacy prop layout=responsive",
      "Image Component Default Tests dev mode should warn when loader is missing width",
      "Image Component Default Tests dev mode should warn when priority prop is missing on LCP image",
      "Image Component Default Tests dev mode should warn when using a very small image with placeholder=blur",
      "Image Component Default Tests dev mode should work when using flexbox",
      "Image Component Default Tests dev mode should work with image with blob src",
      "Image Component Default Tests dev mode should work with sizes and automatically use responsive srcset"
    ],
    "failed": [
      "Image Component Default Tests dev mode should lazy load with placeholder=blur",
      "Image Component Default Tests server mode Fill-mode tests should add 100% width and height to fill images",
      "Image Component Default Tests server mode Fill-mode tests should add position styles to fill images",
      "Image Component Default Tests server mode Fill-mode tests should add position:absolute to fill images",
      "Image Component Default Tests server mode Fill-mode tests should include a data-attribute on fill images",
      "Image Component Default Tests server mode should apply filter style after image loads",
      "Image Component Default Tests server mode should apply style inheritance for img elements but not wrapper elements",
      "Image Component Default Tests server mode should be valid HTML",
      "Image Component Default Tests server mode should callback native onError even when error before hydration",
      "Image Component Default Tests server mode should callback native onError when error occured while loading image",
      "Image Component Default Tests server mode should callback native onLoad with sythetic event",
      "Image Component Default Tests server mode should callback onLoadingComplete when image is fully loaded",
      "Image Component Default Tests server mode should correctly ignore prose styles",
      "Image Component Default Tests server mode should correctly rotate image",
      "Image Component Default Tests server mode should create images folder in static/media for edge runtime",
      "Image Component Default Tests server mode should emit image for next/dynamic with non ssr case",
      "Image Component Default Tests server mode should handle the styles prop appropriately",
      "Image Component Default Tests server mode should have blurry placeholder when enabled",
      "Image Component Default Tests server mode should have data url placeholder when enabled",
      "Image Component Default Tests server mode should lazy load with placeholder=blur",
      "Image Component Default Tests server mode should load the images",
      "Image Component Default Tests server mode should not create an image folder in server/chunks",
      "Image Component Default Tests server mode should not pass through user-provided srcset (causing a flash)",
      "Image Component Default Tests server mode should preload priority images",
      "Image Component Default Tests server mode should remove blurry placeholder after image loads",
      "Image Component Default Tests server mode should remove data url placeholder after image loads",
      "Image Component Default Tests server mode should render as unoptimized with empty string src prop",
      "Image Component Default Tests server mode should render as unoptimized with missing src prop",
      "Image Component Default Tests server mode should render correct objectFit when blurDataURL and fill",
      "Image Component Default Tests server mode should render correct objectFit when data url placeholder and fill",
      "Image Component Default Tests server mode should render no wrappers or sizers",
      "Image Component Default Tests server mode should render picture via getImgProps",
      "Image Component Default Tests server mode should update the image on src change",
      "Image Component Default Tests server mode should warn when legacy prop layout=fill",
      "Image Component Default Tests server mode should warn when legacy prop layout=responsive",
      "Image Component Default Tests server mode should work when using flexbox",
      "Image Component Default Tests server mode should work with image with blob src",
      "Image Component Default Tests server mode should work with sizes and automatically use responsive srcset"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-new/default/test/static.test.ts": {
    "passed": [
      "Static Image Component Tests dev mode Should allow an image with a static src to omit height and width",
      "Static Image Component Tests dev mode Should automatically provide an image height and width",
      "Static Image Component Tests dev mode should add a data URL placeholder to an image",
      "Static Image Component Tests dev mode should add placeholder even when blurDataURL aspect ratio does not match width/height ratio",
      "Static Image Component Tests dev mode should add placeholder with blurDataURL and fill",
      "Static Image Component Tests dev mode should load direct imported image",
      "Static Image Component Tests dev mode should load staticprops imported image",
      "Static Image Component Tests dev mode should use height prop to adjust both width and height",
      "Static Image Component Tests dev mode should use width and height prop to override import",
      "Static Image Component Tests dev mode should use width prop to adjust both width and height"
    ],
    "failed": [
      "Build Error Tests should throw build error when import statement is used with missing file",
      "Static Image Component Tests dev mode should add a blur placeholder a statically imported jpg",
      "Static Image Component Tests dev mode should add a blur placeholder a statically imported png",
      "Static Image Component Tests dev mode should add a blur placeholder a statically imported png with fill",
      "Static Image Component Tests dev mode should have <head> containing <meta name=\"viewport\"> followed by <link rel=\"preload\"> for priority image",
      "Static Image Component Tests production mode Should allow an image with a static src to omit height and width",
      "Static Image Component Tests production mode Should automatically provide an image height and width",
      "Static Image Component Tests production mode Should use immutable cache-control header even when unoptimized",
      "Static Image Component Tests production mode Should use immutable cache-control header for static import",
      "Static Image Component Tests production mode should add a blur placeholder a statically imported jpg",
      "Static Image Component Tests production mode should add a blur placeholder a statically imported png",
      "Static Image Component Tests production mode should add a blur placeholder a statically imported png with fill",
      "Static Image Component Tests production mode should add a data URL placeholder to an image",
      "Static Image Component Tests production mode should add placeholder even when blurDataURL aspect ratio does not match width/height ratio",
      "Static Image Component Tests production mode should add placeholder with blurDataURL and fill",
      "Static Image Component Tests production mode should have <head> containing <meta name=\"viewport\"> followed by <link rel=\"preload\"> for priority image",
      "Static Image Component Tests production mode should load direct imported image",
      "Static Image Component Tests production mode should load staticprops imported image",
      "Static Image Component Tests production mode should use height prop to adjust both width and height",
      "Static Image Component Tests production mode should use width and height prop to override import",
      "Static Image Component Tests production mode should use width prop to adjust both width and height"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-new/export-config/test/index.test.ts": {
    "passed": [],
    "failed": ["next/image with output export config dev mode should error"],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-new/image-from-node-modules/test/index.test.ts": {
    "passed": [],
    "failed": [
      "Image Component from node_modules dev mode should apply image config for node_modules",
      "Image Component from node_modules prod mode should apply image config for node_modules"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-new/invalid-image-import/test/index.test.ts": {
    "passed": [],
    "failed": [
      "Missing Import Image Tests dev mode should show error",
      "Missing Import Image Tests server mode should show error"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-new/loader-config-default-loader-with-file/test/index.test.ts": {
    "passed": [
      "Image Loader Config dev mode - component should work with loader prop",
      "Image Loader Config dev mode - getImgProps should work with loader prop",
      "Image Loader Config server mode - component should work with loader prop",
      "Image Loader Config server mode - getImgProps should work with loader prop"
    ],
    "failed": [
      "Image Loader Config dev mode - component should work with loaderFile config, leaving default image optimization enabled",
      "Image Loader Config dev mode - getImgProps should work with loaderFile config, leaving default image optimization enabled",
      "Image Loader Config server mode - component should work with loaderFile config, leaving default image optimization enabled",
      "Image Loader Config server mode - getImgProps should work with loaderFile config, leaving default image optimization enabled"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-new/loader-config-edge-runtime/test/index.test.ts": {
    "passed": [],
    "failed": [
      "Image Loader Config with Edge Runtime dev mode should add \"src\" to img1 based on the loader config",
      "Image Loader Config with Edge Runtime dev mode should add \"src\" to img2 based on the loader prop",
      "Image Loader Config with Edge Runtime dev mode should add \"srcset\" to img1 based on the loader config",
      "Image Loader Config with Edge Runtime dev mode should add \"srcset\" to img2 based on the loader prop",
      "Image Loader Config with Edge Runtime server mode should add \"src\" to img1 based on the loader config",
      "Image Loader Config with Edge Runtime server mode should add \"src\" to img2 based on the loader prop",
      "Image Loader Config with Edge Runtime server mode should add \"srcset\" to img1 based on the loader config",
      "Image Loader Config with Edge Runtime server mode should add \"srcset\" to img2 based on the loader prop"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-new/loader-config/test/index.test.ts": {
    "passed": [],
    "failed": [
      "Image Loader Config dev mode - component should work with loader prop",
      "Image Loader Config dev mode - component should work with loaderFile config",
      "Image Loader Config dev mode - getImgProps should work with loader prop",
      "Image Loader Config dev mode - getImgProps should work with loaderFile config",
      "Image Loader Config server mode - component should work with loader prop",
      "Image Loader Config server mode - component should work with loaderFile config",
      "Image Loader Config server mode - getImgProps should work with loader prop",
      "Image Loader Config server mode - getImgProps should work with loaderFile config"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-new/middleware/test/index.test.ts": {
    "passed": ["Image with middleware in edge func dev mode should not error"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-new/react-virtualized/test/index.test.ts": {
    "passed": [
      "react-virtualized wrapping next/image production should not cancel requests for images"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-new/svgo-webpack/test/index.test.ts": {
    "passed": [],
    "failed": [
      "svgo-webpack with Image Component next build should not fail to build invalid usage of the Image component",
      "svgo-webpack with Image Component next dev should print error when invalid Image usage"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-new/trailing-slash/test/index.test.ts": {
    "passed": [
      "Image Component Trailing Slash Tests dev mode should include trailing slash when trailingSlash is set on config file during next dev"
    ],
    "failed": [
      "Image Component Trailing Slash Tests server mode should include trailing slash when trailingSlash is set on config file during next start"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-new/typescript/test/index.test.ts": {
    "passed": [
      "TypeScript Image Component next build should fail to build invalid usage of the Image component",
      "TypeScript Image Component next build should remove global image types when disabled",
      "TypeScript Image Component next dev should have image types when enabled",
      "TypeScript Image Component next dev should print error when invalid Image usage",
      "TypeScript Image Component next dev should render the valid Image usage and not print error",
      "TypeScript Image Component should remove global image types when disabled (dev)"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-new/unicode/test/index.test.ts": {
    "passed": [],
    "failed": [
      "Image Component Unicode Image URL dev mode should load external image with space",
      "Image Component Unicode Image URL dev mode should load external unicode image",
      "Image Component Unicode Image URL dev mode should load internal image with space",
      "Image Component Unicode Image URL dev mode should load internal unicode image",
      "Image Component Unicode Image URL dev mode should load static unicode image",
      "Image Component Unicode Image URL server mode should load external image with space",
      "Image Component Unicode Image URL server mode should load external unicode image",
      "Image Component Unicode Image URL server mode should load internal image with space",
      "Image Component Unicode Image URL server mode should load internal unicode image",
      "Image Component Unicode Image URL server mode should load static unicode image"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/next-image-new/unoptimized/test/index.test.ts": {
    "passed": [
      "Unoptimized Image Tests dev mode - component should not optimize any image",
      "Unoptimized Image Tests dev mode - getImgProps should not optimize any image",
      "Unoptimized Image Tests server mode - component should not optimize any image",
      "Unoptimized Image Tests server mode - getImgProps should not optimize any image"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/no-duplicate-compile-error/test/index.test.js": {
    "passed": [],
    "failed": [
      "no duplicate compile error output should not show compile error on page refresh"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/no-op-export/test/index.test.js": {
    "passed": ["no-op export should not error for all server-side pages build"],
    "failed": ["no-op export should not error for empty exportPathMap"],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/no-override-next-props/test/index.test.js": {
    "passed": [
      "Dynamic require should show error when a Next prop is returned in _app.getInitialProps"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/no-page-props/test/index.test.js": {
    "passed": [
      "Error no pageProps dev mode should load 404 page correctly",
      "Error no pageProps dev mode should load auto-export page correctly",
      "Error no pageProps dev mode should load getServerSideProps page correctly",
      "Error no pageProps dev mode should load getStaticProps page correctly",
      "Error no pageProps dev mode should navigate between pages correctly",
      "Error no pageProps production mode should load 404 page correctly",
      "Error no pageProps production mode should load auto-export page correctly",
      "Error no pageProps production mode should load getServerSideProps page correctly",
      "Error no pageProps production mode should load getStaticProps page correctly"
    ],
    "failed": [
      "Error no pageProps production mode should navigate between pages correctly"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/node-fetch-keep-alive/test/index.test.js": {
    "passed": [
      "node-fetch-keep-alive dev should send keep-alive for getServerSideProps",
      "node-fetch-keep-alive dev should send keep-alive for getStaticPaths",
      "node-fetch-keep-alive dev should send keep-alive for getStaticProps",
      "node-fetch-keep-alive dev should send keep-alive for json API",
      "node-fetch-keep-alive production should send keep-alive for getServerSideProps",
      "node-fetch-keep-alive production should send keep-alive for getStaticPaths",
      "node-fetch-keep-alive production should send keep-alive for getStaticProps",
      "node-fetch-keep-alive production should send keep-alive for json API"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/non-next-dist-exclude/test/index.test.js": {
    "passed": [
      "Non-Next externalization Externalized non-Next dist-using package"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/non-standard-node-env-warning/test/index.test.js": {
    "passed": [
      "Non-Standard NODE_ENV should not show the warning with NODE_ENV set to valid value",
      "Non-Standard NODE_ENV should not show the warning with NODE_ENV set to valid value (custom server)",
      "Non-Standard NODE_ENV should not show the warning with no NODE_ENV set",
      "Non-Standard NODE_ENV should show the warning with NODE_ENV set to development with next build",
      "Non-Standard NODE_ENV should show the warning with NODE_ENV set to development with next start",
      "Non-Standard NODE_ENV should show the warning with NODE_ENV set to invalid value",
      "Non-Standard NODE_ENV should show the warning with NODE_ENV set to invalid value (custom server)",
      "Non-Standard NODE_ENV should show the warning with NODE_ENV set to production with next dev",
      "Non-Standard NODE_ENV should still DCE NODE_ENV specific code"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/not-found-revalidate/test/index.test.js": {
    "passed": [
      "SSG notFound revalidate production mode should revalidate after notFound is returned for fallback: blocking",
      "SSG notFound revalidate production mode should revalidate page when notFund returned during build"
    ],
    "failed": [
      "SSG notFound revalidate production mode should revalidate after notFound is returned for fallback: true"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/nullish-config/test/index.test.js": {
    "passed": [
      "Nullish configs in next.config.js dev mode should ignore configs set to `null` in next.config.js",
      "Nullish configs in next.config.js dev mode should ignore configs set to `undefined` in next.config.js"
    ],
    "failed": [
      "Nullish configs in next.config.js production mode should ignore configs set to `null` in next.config.js",
      "Nullish configs in next.config.js production mode should ignore configs set to `undefined` in next.config.js"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/numeric-sep/test/index.test.js": {
    "passed": [],
    "failed": [
      "Numeric Separator Support should successfully build for a JavaScript file"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/ondemand/test/index.test.js": {
    "passed": [
      "On Demand Entries should dispose inactive pages",
      "On Demand Entries should pass"
    ],
    "failed": [
      "On Demand Entries should compile pages for JSON page requests",
      "On Demand Entries should compile pages for SSR",
      "On Demand Entries should navigate to pages with dynamic imports"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/optional-chaining-nullish-coalescing/test/index.test.js": {
    "passed": [
      "Optional chaining and nullish coalescing support dev mode should support nullish coalescing",
      "Optional chaining and nullish coalescing support dev mode should support optional chaining",
      "Optional chaining and nullish coalescing support server mode should support nullish coalescing",
      "Optional chaining and nullish coalescing support server mode should support optional chaining"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/page-config/test/index.test.js": {
    "passed": [
      "Page Config builds without error when export const config is used outside page",
      "Page Config shows error when page config has invalid properties",
      "Page Config shows error when page config has invalid property value",
      "Page Config shows error when page config has spread properties"
    ],
    "failed": [
      "Page Config shows error when page config is export from",
      "Page Config shows error when page config is imported and exported",
      "Page Config shows valid error when page config has no init",
      "Page Config shows valid error when page config is a string"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/page-extensions/test/index.test.js": {
    "passed": [
      "Page Extensions should throw if pageExtensions has invalid extensions",
      "Page Extensions should throw if pageExtensions is an empty array"
    ],
    "failed": [
      "Page Extensions should not throw if .d.ts file inside the pages folder",
      "Page Extensions should use the default pageExtensions if set to undefined"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/plugin-mdx-rs/test/index.test.js": {
    "passed": [
      "Configuration MDX-rs Plugin support should render an MDX page correctly",
      "Configuration MDX-rs Plugin support should render an MDX page with component correctly",
      "Configuration MDX-rs Plugin support should render an MDX page with globally provided components (from `mdx-components.js`) correctly"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/polyfilling-minimal/test/index.test.js": {
    "passed": [],
    "failed": ["Polyfilling (minimal) should compile successfully"],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/polyfills/test/index.test.js": {
    "passed": [
      "Polyfills should allow using process.env when there is an element with `id` of `process`",
      "Polyfills should contain generated page count in output"
    ],
    "failed": ["Polyfills should alias fetch"],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/port-env-var/test/index.test.js": {
    "passed": [
      "PORT environment variable dev mode should serve on the configured port",
      "PORT environment variable server mode should serve on the configured port"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/preload-viewport/test/index.test.js": {
    "passed": [
      "Prefetching Links in viewport should correctly omit pre-generated dynamic pages from SSG manifest",
      "Prefetching Links in viewport should handle timed out prefetch correctly",
      "Prefetching Links in viewport should inject a <script> tag when onMouseEnter (even with invalid ref)",
      "Prefetching Links in viewport should inject script on hover with prefetching disabled",
      "Prefetching Links in viewport should inject script on hover with prefetching disabled and fetch data",
      "Prefetching Links in viewport should not have unhandledRejection when failing to prefetch on link",
      "Prefetching Links in viewport should not prefetch when prefetch is explicitly set to false",
      "Prefetching Links in viewport should not prefetch with bot UA",
      "Prefetching Links in viewport should prefetch data files",
      "Prefetching Links in viewport should prefetch data files when mismatched",
      "Prefetching Links in viewport should prefetch rewritten href with link in viewport onload",
      "Prefetching Links in viewport should prefetch with link in viewport and inject script on hover",
      "Prefetching Links in viewport should prefetch with link in viewport on scroll",
      "Prefetching Links in viewport should prefetch with link in viewport onload",
      "Prefetching Links in viewport should prefetch with link in viewport when href changes",
      "Prefetching Links in viewport should prefetch with non-bot UA"
    ],
    "failed": [
      "Prefetching Links in viewport should de-dupe inflight SSG requests",
      "Prefetching Links in viewport should not duplicate prefetches",
      "Prefetching Links in viewport should not prefetch already loaded scripts",
      "Prefetching Links in viewport should not re-prefetch for an already prefetched page",
      "Prefetching Links in viewport should prefetch with a different asPath for a prefetched page"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/prerender-fallback-encoding/test/index.test.js": {
    "passed": [
      "Fallback path encoding dev mode should navigate client-side correctly with interpolating",
      "Fallback path encoding dev mode should navigate client-side correctly with string href",
      "Fallback path encoding dev mode should render correctly in the browser for prerender paths",
      "Fallback path encoding dev mode should respond with the prerendered data correctly",
      "Fallback path encoding dev mode should respond with the prerendered pages correctly",
      "Fallback path encoding production mode should handle non-prerendered paths correctly",
      "Fallback path encoding production mode should navigate client-side correctly with interpolating",
      "Fallback path encoding production mode should navigate client-side correctly with string href",
      "Fallback path encoding production mode should output paths correctly",
      "Fallback path encoding production mode should render correctly in the browser for prerender paths",
      "Fallback path encoding production mode should respond with the prerendered data correctly",
      "Fallback path encoding production mode should respond with the prerendered pages correctly"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/prerender-invalid-catchall-params/test/index.test.js": {
    "passed": ["Invalid Prerender Catchall Params should fail the build"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/prerender-invalid-paths/test/index.test.js": {
    "passed": [
      "Legacy Prerender handles old getStaticParams should fail the build"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/prerender-no-revalidate/test/index.test.js": {
    "passed": [
      "SSG Prerender No Revalidate production mode [/] should not revalidate /_next/data when set to false",
      "SSG Prerender No Revalidate production mode [/] should not revalidate when set to false",
      "SSG Prerender No Revalidate production mode [/named] should not revalidate /_next/data when set to false",
      "SSG Prerender No Revalidate production mode [/named] should not revalidate when set to false",
      "SSG Prerender No Revalidate production mode [/nested/named] should not revalidate /_next/data when set to false",
      "SSG Prerender No Revalidate production mode [/nested/named] should not revalidate when set to false",
      "SSG Prerender No Revalidate production mode [/nested] should not revalidate /_next/data when set to false",
      "SSG Prerender No Revalidate production mode [/nested] should not revalidate when set to false"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/prerender-preview/test/index.test.js": {
    "passed": [
      "Prerender Preview Mode Development Mode should enable preview mode",
      "Prerender Preview Mode Development Mode should fetch live static props with preview active",
      "Prerender Preview Mode Development Mode should fetch prerendered data",
      "Prerender Preview Mode Development Mode should fetch preview data on CST",
      "Prerender Preview Mode Development Mode should fetch preview data on SSR",
      "Prerender Preview Mode Development Mode should return cookies to be expired after dev server reboot",
      "Prerender Preview Mode Development Mode should start development application",
      "Prerender Preview Mode Development Mode should start the client-side browser"
    ],
    "failed": [
      "Prerender Preview Mode Server Mode should compile successfully",
      "Prerender Preview Mode Server Mode should enable preview mode",
      "Prerender Preview Mode Server Mode should expire cookies with a maxAge",
      "Prerender Preview Mode Server Mode should not return fallback page on preview request",
      "Prerender Preview Mode Server Mode should pass the preview data to API routes",
      "Prerender Preview Mode Server Mode should pass undefined to API routes when not in preview",
      "Prerender Preview Mode Server Mode should return cookies to be expired on reset request",
      "Prerender Preview Mode Server Mode should return cookies to be expired on reset request with path specified",
      "Prerender Preview Mode Server Mode should return correct caching headers for data preview request",
      "Prerender Preview Mode Server Mode should return prerendered page on first request",
      "Prerender Preview Mode Server Mode should return prerendered page on second request",
      "Prerender Preview Mode Server Mode should set custom path cookies",
      "Prerender Preview Mode Server Mode should start production application",
      "Prerender Preview Mode Server Mode should throw error when setting too large of preview data"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/prerender-revalidate/test/index.test.js": {
    "passed": [
      "SSG Prerender Revalidate [regression] production mode and incremental cache size exceeded [/] should regenerate /_next/data when revalidate time exceeded",
      "SSG Prerender Revalidate [regression] production mode and incremental cache size exceeded [/] should regenerate page when revalidate time exceeded",
      "SSG Prerender Revalidate [regression] production mode and incremental cache size exceeded [/named] should regenerate /_next/data when revalidate time exceeded",
      "SSG Prerender Revalidate [regression] production mode and incremental cache size exceeded [/named] should regenerate page when revalidate time exceeded",
      "SSG Prerender Revalidate [regression] production mode and incremental cache size exceeded [/nested/named] should regenerate /_next/data when revalidate time exceeded",
      "SSG Prerender Revalidate [regression] production mode and incremental cache size exceeded [/nested/named] should regenerate page when revalidate time exceeded",
      "SSG Prerender Revalidate [regression] production mode and incremental cache size exceeded [/nested] should regenerate /_next/data when revalidate time exceeded",
      "SSG Prerender Revalidate [regression] production mode and incremental cache size exceeded [/nested] should regenerate page when revalidate time exceeded",
      "SSG Prerender Revalidate production mode [/] should regenerate /_next/data when revalidate time exceeded",
      "SSG Prerender Revalidate production mode [/] should regenerate page when revalidate time exceeded",
      "SSG Prerender Revalidate production mode [/named] should regenerate /_next/data when revalidate time exceeded",
      "SSG Prerender Revalidate production mode [/named] should regenerate page when revalidate time exceeded",
      "SSG Prerender Revalidate production mode [/nested/named] should regenerate /_next/data when revalidate time exceeded",
      "SSG Prerender Revalidate production mode [/nested/named] should regenerate page when revalidate time exceeded",
      "SSG Prerender Revalidate production mode [/nested] should regenerate /_next/data when revalidate time exceeded",
      "SSG Prerender Revalidate production mode [/nested] should regenerate page when revalidate time exceeded",
      "SSG Prerender Revalidate production mode should return cache-control header on 304 status"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/prerender/test/index.test.js": {
    "passed": [
      "SSG Prerender dev mode getStaticPaths should not cache getStaticPaths errors",
      "SSG Prerender dev mode getStaticPaths should work with firebase import and getStaticPaths",
      "SSG Prerender export mode should copy prerender files and honor exportTrailingSlash"
    ],
    "failed": [
      "SSG Prerender export mode should navigate between pages successfully"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/preview-fallback/test/index.test.js": {
    "passed": [
      "Preview mode with fallback pages dev Mode should get preview cookie correctly",
      "Preview mode with fallback pages dev Mode should not write preview dynamic SSG page to cache no fallback",
      "Preview mode with fallback pages dev Mode should not write preview dynamic non-prerendered SSG page to cache with fallback",
      "Preview mode with fallback pages dev Mode should not write preview dynamic prerendered SSG page to cache no fallback",
      "Preview mode with fallback pages dev Mode should not write preview dynamic prerendered SSG page to cache with fallback",
      "Preview mode with fallback pages dev Mode should not write preview index SSG page to cache",
      "Preview mode with fallback pages server mode should get preview cookie correctly",
      "Preview mode with fallback pages server mode should not write preview dynamic SSG page to cache no fallback",
      "Preview mode with fallback pages server mode should not write preview dynamic non-prerendered SSG page to cache with fallback",
      "Preview mode with fallback pages server mode should not write preview dynamic prerendered SSG page to cache no fallback",
      "Preview mode with fallback pages server mode should not write preview dynamic prerendered SSG page to cache with fallback",
      "Preview mode with fallback pages server mode should not write preview index SSG page to cache"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/production-browser-sourcemaps/test/index.test.js": {
    "passed": [
      "Production browser sourcemaps Server support includes sourcemaps for all browser files"
    ],
    "failed": [
      "Production browser sourcemaps Server support correctly generated the source map"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/production-build-dir/test/index.test.js": {
    "passed": [
      "Production Custom Build Directory With basic usage should render the page"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/production-config/test/index.test.js": {
    "passed": [
      "Production Config Usage env should allow __ within env key",
      "Production Config Usage with generateBuildId should add the custom buildid"
    ],
    "failed": [
      "Production Config Usage env should fail with NEXT_RUNTIME in env key",
      "Production Config Usage env should fail with NODE_ in env key",
      "Production Config Usage env should fail with leading __ in env key"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/production-nav/test/index.test.js": {
    "passed": [],
    "failed": ["Production Usage should navigate forward and back correctly"],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/production-start-no-build/test/index.test.js": {
    "passed": [
      "Production Usage without production build should show error when there is no production build"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/production/test/index.test.js": {
    "passed": [],
    "failed": [
      "Production Usage API routes does not work with pages/api/readfile-dirname.js",
      "Production Usage API routes should work with dynamic params and search string",
      "Production Usage API routes should work with pages/api/hello.js",
      "Production Usage API routes should work with pages/api/index.js",
      "Production Usage API routes should work with pages/api/readfile-processcwd.js",
      "Production Usage Dynamic import custom loading should render custom loading on the server side when `ssr:false` and `loading` is provided",
      "Production Usage Dynamic import custom loading should render the component on client side",
      "Production Usage Dynamic import default behavior should bundle two css modules for nested components into one css file",
      "Production Usage Dynamic import default behavior should bundle two css modules for one dynamically imported component into one css file",
      "Production Usage Dynamic import default behavior should not remove css styles for same css file between page transitions",
      "Production Usage Dynamic import default behavior should output two css files even in case of three css module files while one is shared across files",
      "Production Usage Dynamic import default behavior should render dynamic import components",
      "Production Usage Dynamic import default behavior should render even there are no physical chunk exists",
      "Production Usage Dynamic import default behavior should render one dynamically imported component and load its css files",
      "Production Usage Dynamic import default behavior should render one dynamically imported component without any css files",
      "Production Usage Dynamic import default behavior should render three dynamically imported components and load their css files",
      "Production Usage Dynamic import ssr:false option should not render loading on the server side",
      "Production Usage Dynamic import ssr:false option should render the component on client side",
      "Production Usage Dynamic import ssr:true option should render the component on client side",
      "Production Usage Dynamic import ssr:true option should render the component on the server side",
      "Production Usage Misc It does not add a timestamp to link tags with prefetch attribute",
      "Production Usage Misc Should allow access to public files",
      "Production Usage Misc should add autoExport for auto pre-rendered pages",
      "Production Usage Misc should add prefetch tags when Link prefetch prop is used",
      "Production Usage Misc should allow to access /static/ and /_next/",
      "Production Usage Misc should handle already finished responses",
      "Production Usage Misc should have default runtime values when not defined",
      "Production Usage Misc should not add autoExport for non pre-rendered pages",
      "Production Usage Misc should not have runtimeConfig in __NEXT_DATA__",
      "Production Usage Misc should reload the page on page script error",
      "Production Usage Misc should reload the page on page script error with prefetch",
      "Production Usage Runtime errors should call getInitialProps on _error page during a client side component error",
      "Production Usage Runtime errors should render a client side component error",
      "Production Usage Runtime errors should render a server side error on the client side",
      "Production Usage With Security Related Issues should handle encoded / value for trailing slash correctly",
      "Production Usage With Security Related Issues should handle encoded value in the pathname correctly %",
      "Production Usage With Security Related Issues should handle encoded value in the pathname correctly /",
      "Production Usage With Security Related Issues should handle encoded value in the pathname correctly \\",
      "Production Usage With Security Related Issues should handle encoded value in the pathname to query correctly (/)",
      "Production Usage With Security Related Issues should handle encoded value in the query correctly",
      "Production Usage With Security Related Issues should not allow accessing files outside .next/static directory",
      "Production Usage With Security Related Issues should not execute script embedded inside svg image, even if dangerouslyAllowSVG=true",
      "Production Usage With Security Related Issues should not leak the user's home directory into the build",
      "Production Usage With Security Related Issues should only access files inside .next directory",
      "Production Usage With Security Related Issues should prevent URI based XSS attacks",
      "Production Usage With Security Related Issues should prevent URI based XSS attacks using double quotes",
      "Production Usage With Security Related Issues should prevent URI based XSS attacks using querystring",
      "Production Usage With Security Related Issues should prevent URI based XSS attacks using querystring and quotes",
      "Production Usage With Security Related Issues should prevent URI based XSS attacks using semicolons and double quotes",
      "Production Usage With Security Related Issues should prevent URI based XSS attacks using semicolons and single quotes",
      "Production Usage With Security Related Issues should prevent URI based XSS attacks using single quotes",
      "Production Usage With Security Related Issues should prevent URI based XSS attacks using src",
      "Production Usage With basic usage should allow etag header support",
      "Production Usage With basic usage should allow etag header support with getStaticProps",
      "Production Usage With basic usage should block special pages",
      "Production Usage With basic usage should have X-Powered-By header support",
      "Production Usage With basic usage should not contain customServer in NEXT_DATA",
      "Production Usage With basic usage should polyfill Node.js modules",
      "Production Usage With basic usage should render 200 for POST on page",
      "Production Usage With basic usage should render 404 even if the HTTP method is not GET or HEAD",
      "Production Usage With basic usage should render 404 for /_next/static route",
      "Production Usage With basic usage should render 404 for POST on missing page",
      "Production Usage With basic usage should render 404 for _next routes that do not exist",
      "Production Usage With basic usage should render 404 for dotfiles in /static",
      "Production Usage With basic usage should render 404 for routes that do not exist",
      "Production Usage With basic usage should render the page",
      "Production Usage With basic usage should return 200 on static file if If-Unmodified-Since is invalid date",
      "Production Usage With basic usage should return 405 method on static then GET and HEAD",
      "Production Usage With basic usage should return 412 on static file when If-Unmodified-Since is provided and file is modified",
      "Production Usage With basic usage should set Cache-Control header",
      "Production Usage With basic usage should set Content-Length header",
      "Production Usage With basic usage should set correct Cache-Control header for static 404s",
      "Production Usage With navigation should navigate to nested index via client side",
      "Production Usage With navigation should navigate via client side",
      "Production Usage With navigation should reload page successfully (on bad data fetch)",
      "Production Usage With navigation should reload page successfully (on bad link)",
      "Production Usage process.browser should eliminate client only code on the server",
      "Production Usage process.browser should eliminate server only code on the client",
      "Production Usage process.env should set process.env.NODE_ENV in production",
      "Production Usage should change query correctly",
      "Production Usage should clear all core performance marks",
      "Production Usage should contain generated page count in output",
      "Production Usage should contain the Next.js version in window export",
      "Production Usage should handle AMP correctly in IE",
      "Production Usage should handle failed param decoding",
      "Production Usage should handle query/hash correctly during query updating ## $search",
      "Production Usage should handle query/hash correctly during query updating ##? $search",
      "Production Usage should handle query/hash correctly during query updating ##hello $search",
      "Production Usage should handle query/hash correctly during query updating ##hello? $search",
      "Production Usage should handle query/hash correctly during query updating #? $search",
      "Production Usage should handle query/hash correctly during query updating #a ?hello",
      "Production Usage should handle query/hash correctly during query updating #a ?hello=",
      "Production Usage should handle query/hash correctly during query updating #a ?hello=world",
      "Production Usage should handle query/hash correctly during query updating #hello? $search",
      "Production Usage should handle query/hash correctly during query updating #hello?world $search",
      "Production Usage should have defer on all script tags",
      "Production Usage should navigate through history after query update",
      "Production Usage should navigate to external site and back",
      "Production Usage should navigate to external site and back (with query)",
      "Production Usage should navigate to page with CSS and back",
      "Production Usage should not clear custom performance marks",
      "Production Usage should not contain amp, rsc APIs in main chunk",
      "Production Usage should not contain currentScript usage for publicPath",
      "Production Usage should not emit stats",
      "Production Usage should not expose the compiled page file in development",
      "Production Usage should not put backslashes in pages-manifest.json",
      "Production Usage should not replace non-static pages with HTML files",
      "Production Usage should not show target deprecation warning",
      "Production Usage should only have one DOCTYPE",
      "Production Usage should output traces",
      "Production Usage should preserve query when hard navigating from page 404",
      "Production Usage should remove placeholder for next/image correctly",
      "Production Usage should replace static pages with HTML files",
      "Production Usage should respond with 405 for POST to static page",
      "Production Usage should warn when prefetch is true"
    ],
    "pending": [
      "Production Usage With Security Related Issues should handle invalid URL properly",
      "Production Usage With basic usage should allow etag header support with getServerSideProps"
    ],
    "runtimeError": false
  },
  "test/integration/project-dir-delete/index.test.ts": {
    "passed": [],
    "failed": [],
    "pending": [
      "Project Directory Delete Handling should gracefully exit on project dir delete"
    ],
    "runtimeError": false
  },
  "test/integration/query-with-encoding/test/index.test.js": {
    "passed": [],
    "failed": [
      "Query String with Encoding new line should have correct query on Router#push",
      "Query String with Encoding new line should have correct query on SSR",
      "Query String with Encoding new line should have correct query on complex client-side <Link>",
      "Query String with Encoding new line should have correct query on simple client-side <Link>",
      "Query String with Encoding percent should have correct query on Router#push",
      "Query String with Encoding percent should have correct query on SSR",
      "Query String with Encoding percent should have correct query on complex client-side <Link>",
      "Query String with Encoding percent should have correct query on simple client-side <Link>",
      "Query String with Encoding plus should have correct query on Router#push",
      "Query String with Encoding plus should have correct query on SSR",
      "Query String with Encoding plus should have correct query on complex client-side <Link>",
      "Query String with Encoding plus should have correct query on simple client-side <Link>",
      "Query String with Encoding trailing space should have correct query on Router#push",
      "Query String with Encoding trailing space should have correct query on SSR",
      "Query String with Encoding trailing space should have correct query on complex client-side <Link>",
      "Query String with Encoding trailing space should have correct query on simple client-side <Link>"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/re-export-all-exports-from-page-disallowed/test/index.test.js": {
    "passed": [],
    "failed": [
      "Re-export all exports from page is disallowed builds without error when no `export * from \"...\"` is used in pages",
      "Re-export all exports from page is disallowed shows error when a page re-export all exports"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/react-18/test/index.test.js": {
    "passed": [
      "Basics default setting with react 18 dev hydrates correctly for normal page",
      "Basics default setting with react 18 dev no warnings for image related link props",
      "Basics default setting with react 18 dev should only render once in SSR",
      "Basics default setting with react 18 dev useId() values should match on hydration",
      "Basics default setting with react 18 prod hydrates correctly for normal page",
      "Basics default setting with react 18 prod no warnings for image related link props",
      "Basics default setting with react 18 prod should only render once in SSR",
      "Basics default setting with react 18 prod useId() values should match on hydration",
      "Concurrent mode in the experimental-edge runtime dev <RouteAnnouncer /> should not have the initial route announced",
      "Concurrent mode in the experimental-edge runtime dev flushes styled-jsx styles as the page renders",
      "Concurrent mode in the experimental-edge runtime dev should not have invalid config warning",
      "Concurrent mode in the nodejs runtime dev <RouteAnnouncer /> should not have the initial route announced",
      "Concurrent mode in the nodejs runtime dev flushes styled-jsx styles as the page renders",
      "Concurrent mode in the nodejs runtime dev should not have invalid config warning",
      "Concurrent mode in the nodejs runtime prod <RouteAnnouncer /> should not have the initial route announced",
      "Concurrent mode in the nodejs runtime prod flushes styled-jsx styles as the page renders",
      "Concurrent mode in the nodejs runtime prod should not have invalid config warning"
    ],
    "failed": [
      "Basics default setting with react 18 dev should contain dynamicIds in next data for dynamic imports",
      "Basics default setting with react 18 prod should contain dynamicIds in next data for dynamic imports",
      "Concurrent mode in the experimental-edge runtime prod <RouteAnnouncer /> should not have the initial route announced",
      "Concurrent mode in the experimental-edge runtime prod flushes styled-jsx styles as the page renders",
      "Concurrent mode in the experimental-edge runtime prod should not have invalid config warning"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/react-profiling-mode/test/index.test.js": {
    "passed": [
      "React Profiling Mode with config enabled should have used the react-dom profiling bundle for server component",
      "React Profiling Mode without config enabled should not have used the react-dom profiling bundle"
    ],
    "failed": [
      "React Profiling Mode with config enabled should have used the react-dom profiling bundle for client component",
      "React Profiling Mode with config enabled should have used the react-dom profiling bundle for pages"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/react-streaming/test/index.test.js": {
    "passed": ["streaming dev dev should render 500 error correctly"],
    "failed": [
      "streaming dev dev should not stream to crawlers or google pagerender bot",
      "streaming dev dev should render fallback if error raised from suspense during streaming",
      "streaming dev dev should support streaming for fizz response",
      "streaming prod prod should not stream to crawlers or google pagerender bot",
      "streaming prod prod should render 500 error correctly",
      "streaming prod prod should render fallback if error raised from suspense during streaming",
      "streaming prod prod should support streaming for fizz response"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/read-only-source-hmr/test/index.test.js": {
    "passed": [
      "Read-only source HMR should detect a new page",
      "Read-only source HMR should detect changes to a page",
      "Read-only source HMR should handle page deletion and subsequent recreation"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/relay-analytics-disabled/test/index.test.js": {
    "passed": ["Analytics relayer (disabled) Does not relay any data"],
    "failed": ["Analytics relayer (disabled) Does not include the code"],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/relay-analytics/test/index.test.js": {
    "passed": ["Analytics relayer with exported method reports INP metric"],
    "failed": [
      "Analytics relayer with exported method Relays the data to user code",
      "Analytics relayer with exported method reports attribution"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/relay-graphql-swc-multi-project/test/index.test.js": {
    "passed": [],
    "failed": [
      "Relay Compiler Transform - Multi Project Config dev mode project-a should resolve index page correctly",
      "Relay Compiler Transform - Multi Project Config dev mode project-b should resolve index page correctly",
      "Relay Compiler Transform - Multi Project Config production mode project-a should resolve index page correctly",
      "Relay Compiler Transform - Multi Project Config production mode project-b should resolve index page correctly"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/relay-graphql-swc-single-project/test/index.test.js": {
    "passed": [
      "Relay Compiler Transform - Single Project Config dev mode should resolve index page correctly",
      "Relay Compiler Transform - Single Project Config production mode should resolve index page correctly"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/render-error-on-module-error/test/index.test.js": {
    "passed": [],
    "failed": ["Module Init Error should render error page"],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/render-error-on-top-level-error/with-get-initial-props/test/index.test.js": {
    "passed": [],
    "failed": ["Top Level Error should render error page with getInitialProps"],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/render-error-on-top-level-error/without-get-initial-props/test/index.test.js": {
    "passed": [],
    "failed": ["Top Level Error should render error page"],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/repeated-slashes/test/index.test.js": {
    "passed": [
      "404 handling custom _error next dev should handle backslashes correctly",
      "404 handling custom _error next dev should handle double slashes correctly",
      "404 handling custom _error next dev should handle double slashes correctly with encoded",
      "404 handling custom _error next dev should handle double slashes correctly with encoded and hash",
      "404 handling custom _error next dev should handle double slashes correctly with encoded and query",
      "404 handling custom _error next dev should handle double slashes correctly with hash",
      "404 handling custom _error next dev should handle double slashes correctly with query",
      "404 handling custom _error next dev should handle mixed backslashes/forward slashes correctly",
      "404 handling custom _error next dev should handle slashes in next/link correctly",
      "404 handling custom _error next dev should handle slashes in router push correctly",
      "404 handling custom _error next dev should have no error from encoded slashes in router push",
      "404 handling custom _error next dev should normalize repeated slashes in redirects correctly",
      "404 handling custom _error production next export should handle backslashes correctly",
      "404 handling custom _error production next export should handle double slashes correctly",
      "404 handling custom _error production next export should handle double slashes correctly with encoded",
      "404 handling custom _error production next export should handle double slashes correctly with encoded and hash",
      "404 handling custom _error production next export should handle double slashes correctly with encoded and query",
      "404 handling custom _error production next export should handle double slashes correctly with hash",
      "404 handling custom _error production next export should handle double slashes correctly with query",
      "404 handling custom _error production next export should handle mixed backslashes/forward slashes correctly",
      "404 handling custom _error production next export should handle slashes in next/link correctly",
      "404 handling custom _error production next start should handle backslashes correctly",
      "404 handling custom _error production next start should handle double slashes correctly",
      "404 handling custom _error production next start should handle double slashes correctly with encoded",
      "404 handling custom _error production next start should handle double slashes correctly with encoded and hash",
      "404 handling custom _error production next start should handle double slashes correctly with encoded and query",
      "404 handling custom _error production next start should handle double slashes correctly with hash",
      "404 handling custom _error production next start should handle double slashes correctly with query",
      "404 handling custom _error production next start should handle mixed backslashes/forward slashes correctly",
      "404 handling custom _error production next start should handle slashes in next/link correctly",
      "404 handling custom _error production next start should normalize repeated slashes in redirects correctly",
      "404 handling pages/404 next dev should handle backslashes correctly",
      "404 handling pages/404 next dev should handle double slashes correctly",
      "404 handling pages/404 next dev should handle double slashes correctly with encoded",
      "404 handling pages/404 next dev should handle double slashes correctly with encoded and hash",
      "404 handling pages/404 next dev should handle double slashes correctly with encoded and query",
      "404 handling pages/404 next dev should handle double slashes correctly with hash",
      "404 handling pages/404 next dev should handle double slashes correctly with query",
      "404 handling pages/404 next dev should handle mixed backslashes/forward slashes correctly",
      "404 handling pages/404 next dev should handle slashes in next/link correctly",
      "404 handling pages/404 next dev should handle slashes in router push correctly",
      "404 handling pages/404 next dev should have no error from encoded slashes in router push",
      "404 handling pages/404 next dev should normalize repeated slashes in redirects correctly",
      "404 handling pages/404 production next export should handle backslashes correctly",
      "404 handling pages/404 production next export should handle double slashes correctly",
      "404 handling pages/404 production next export should handle double slashes correctly with encoded",
      "404 handling pages/404 production next export should handle double slashes correctly with encoded and hash",
      "404 handling pages/404 production next export should handle double slashes correctly with encoded and query",
      "404 handling pages/404 production next export should handle double slashes correctly with hash",
      "404 handling pages/404 production next export should handle double slashes correctly with query",
      "404 handling pages/404 production next export should handle mixed backslashes/forward slashes correctly",
      "404 handling pages/404 production next export should handle slashes in next/link correctly",
      "404 handling pages/404 production next start should handle backslashes correctly",
      "404 handling pages/404 production next start should handle double slashes correctly",
      "404 handling pages/404 production next start should handle double slashes correctly with encoded",
      "404 handling pages/404 production next start should handle double slashes correctly with encoded and hash",
      "404 handling pages/404 production next start should handle double slashes correctly with encoded and query",
      "404 handling pages/404 production next start should handle double slashes correctly with hash",
      "404 handling pages/404 production next start should handle double slashes correctly with query",
      "404 handling pages/404 production next start should handle mixed backslashes/forward slashes correctly",
      "404 handling pages/404 production next start should handle slashes in next/link correctly",
      "404 handling pages/404 production next start should normalize repeated slashes in redirects correctly"
    ],
    "failed": [
      "404 handling custom _error production next export should handle slashes in router push correctly",
      "404 handling custom _error production next export should have no error from encoded slashes in router push",
      "404 handling custom _error production next start should handle slashes in router push correctly",
      "404 handling custom _error production next start should have no error from encoded slashes in router push",
      "404 handling pages/404 production next export should handle slashes in router push correctly",
      "404 handling pages/404 production next export should have no error from encoded slashes in router push",
      "404 handling pages/404 production next start should handle slashes in router push correctly",
      "404 handling pages/404 production next start should have no error from encoded slashes in router push"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/required-server-files-ssr-404/test/index.test.js": {
    "passed": [],
    "failed": [
      "Required Server Files should bubble error correctly for gip page",
      "Required Server Files should bubble error correctly for gsp page",
      "Required Server Files should bubble error correctly for gssp page",
      "Required Server Files should handle 404s properly",
      "Required Server Files should match the index page correctly",
      "Required Server Files should match the root dynamic page correctly",
      "Required Server Files should normalize catch-all rewrite query values correctly",
      "Required Server Files should normalize optional values correctly for API page",
      "Required Server Files should normalize optional values correctly for SSG page",
      "Required Server Files should normalize optional values correctly for SSP page",
      "Required Server Files should not apply trailingSlash redirect",
      "Required Server Files should output required-server-files manifest correctly",
      "Required Server Files should render SSR page correctly",
      "Required Server Files should render SSR page correctly with x-matched-path",
      "Required Server Files should render dynamic SSR page correctly",
      "Required Server Files should render dynamic SSR page correctly with x-matched-path",
      "Required Server Files should render fallback optional catch-all route correctly with x-matched-path and routes-matches",
      "Required Server Files should render fallback page correctly",
      "Required Server Files should render fallback page correctly with x-matched-path and routes-matches",
      "Required Server Files should return data correctly with x-matched-path",
      "Required Server Files should return data correctly with x-matched-path for optional catch-all route"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/integration/revalidate-as-path/test/index.test.js": {
    "passed": [
      "Revalidate asPath Normalizing server mode should render with correct asPath with / requested",
      "Revalidate asPath Normalizing server mode should render with correct asPath with /_next/data /another/index requested",
      "Revalidate asPath Normalizing server mode should render with correct asPath with /_next/data /index requested",
      "Revalidate asPath Normalizing server mode should render with correct asPath with /another/index requested"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/rewrite-with-browser-history/test/index.test.js": {
    "passed": [],
    "failed": [
      "rewrites persist with browser history actions dev mode back-button should go back to rewritten path successfully",
      "rewrites persist with browser history actions production mode back-button should go back to rewritten path successfully"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/rewrites-client-resolving/test/index.test.js": {
    "passed": [
      "Client-side rewrites resolving dev mode should break rewrites chain after matching /category",
      "Client-side rewrites resolving dev mode should break rewrites chain when dynamic catch-all route matches",
      "Client-side rewrites resolving dev mode should break rewrites chain when dynamic catch-all route multi-level matches",
      "Client-side rewrites resolving dev mode should break rewrites chain when dynamic route matches",
      "Client-side rewrites resolving dev mode should break rewrites chain when normal page matches"
    ],
    "failed": [
      "Client-side rewrites resolving production mode should break rewrites chain after matching /category",
      "Client-side rewrites resolving production mode should break rewrites chain when dynamic catch-all route matches",
      "Client-side rewrites resolving production mode should break rewrites chain when dynamic catch-all route multi-level matches",
      "Client-side rewrites resolving production mode should break rewrites chain when dynamic route matches",
      "Client-side rewrites resolving production mode should break rewrites chain when normal page matches"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/rewrites-destination-query-array/test/index.test.js": {
    "passed": [
      "rewrites destination query dev mode should contain all values passed in param as array",
      "rewrites destination query production mode should contain all values passed in param as array"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/rewrites-has-condition/test/index.test.js": {
    "passed": [],
    "failed": [
      "rewrites has condition dev mode should navigate to a has rewrite without error",
      "rewrites has condition dev mode should navigate to a simple rewrite without error",
      "rewrites has condition production mode should navigate to a has rewrite without error",
      "rewrites has condition production mode should navigate to a simple rewrite without error"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/rewrites-manual-href-as/test/index.test.js": {
    "passed": [],
    "failed": [
      "rewrites manual href/as dev mode should allow manual href/as on dynamic page",
      "rewrites manual href/as dev mode should allow manual href/as on index page",
      "rewrites manual href/as production mode should allow manual href/as on dynamic page",
      "rewrites manual href/as production mode should allow manual href/as on index page"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/root-optional-revalidate/test/index.test.js": {
    "passed": [
      "Root Optional Catch-all Revalidate production mode should render / correctly",
      "Root Optional Catch-all Revalidate production mode should render /a correctly",
      "Root Optional Catch-all Revalidate production mode should render /hello/world correctly"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/route-index/test/index.test.js": {
    "passed": [
      "Route index handling dev mode should handle / correctly",
      "Route index handling dev mode should handle /index correctly",
      "Route index handling dev mode should handle /index/?bar%60%3C%25%22%27%7B%24%2A%25%5C correctly",
      "Route index handling dev mode should handle /index/index correctly",
      "Route index handling dev mode should handle /index?file%3A%5C correctly",
      "Route index handling production mode should handle / correctly",
      "Route index handling production mode should handle /index correctly",
      "Route index handling production mode should handle /index/?bar%60%3C%25%22%27%7B%24%2A%25%5C correctly",
      "Route index handling production mode should handle /index/index correctly",
      "Route index handling production mode should handle /index?file%3A%5C correctly"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/route-indexes/test/index.test.js": {
    "passed": [
      "Route indexes handling dev mode should handle / correctly",
      "Route indexes handling dev mode should handle /api/sub correctly",
      "Route indexes handling dev mode should handle /api/sub/another correctly",
      "Route indexes handling dev mode should handle /api/sub/another/index correctly",
      "Route indexes handling dev mode should handle /api/sub/index correctly",
      "Route indexes handling dev mode should handle /api/sub/index/index correctly",
      "Route indexes handling dev mode should handle /index correctly",
      "Route indexes handling dev mode should handle /index/index correctly",
      "Route indexes handling dev mode should handle /nested-index correctly",
      "Route indexes handling dev mode should handle /nested-index/index correctly",
      "Route indexes handling dev mode should handle /nested-index/index/index correctly",
      "Route indexes handling dev mode should handle /sub correctly",
      "Route indexes handling dev mode should handle /sub/another correctly",
      "Route indexes handling dev mode should handle /sub/another/index correctly",
      "Route indexes handling dev mode should handle /sub/index correctly",
      "Route indexes handling dev mode should handle /sub/index/index correctly",
      "Route indexes handling production mode should handle / correctly",
      "Route indexes handling production mode should handle /api/sub correctly",
      "Route indexes handling production mode should handle /api/sub/another correctly",
      "Route indexes handling production mode should handle /api/sub/another/index correctly",
      "Route indexes handling production mode should handle /api/sub/index correctly",
      "Route indexes handling production mode should handle /api/sub/index/index correctly",
      "Route indexes handling production mode should handle /index correctly",
      "Route indexes handling production mode should handle /index/index correctly",
      "Route indexes handling production mode should handle /nested-index correctly",
      "Route indexes handling production mode should handle /nested-index/index correctly",
      "Route indexes handling production mode should handle /nested-index/index/index correctly",
      "Route indexes handling production mode should handle /sub correctly",
      "Route indexes handling production mode should handle /sub/another correctly",
      "Route indexes handling production mode should handle /sub/another/index correctly",
      "Route indexes handling production mode should handle /sub/index correctly",
      "Route indexes handling production mode should handle /sub/index/index correctly"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/route-load-cancel-css/test/index.test.js": {
    "passed": [],
    "failed": [
      "route cancel via CSS should cancel slow page loads on re-navigation"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/route-load-cancel/test/index.test.js": {
    "passed": [
      "next/dynamic dev mode should cancel slow page loads on re-navigation"
    ],
    "failed": [
      "next/dynamic production mode should cancel slow page loads on re-navigation"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/router-hash-navigation/test/index.test.js": {
    "passed": [
      "router.isReady dev mode scrolls to top when href=\"/\" and url already contains a hash",
      "router.isReady production mode scrolls to top when href=\"/\" and url already contains a hash"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/router-is-ready-app-gip/test/index.test.js": {
    "passed": [
      "router.isReady with appGip dev mode isReady should be true after query update for getStaticProps page with query",
      "router.isReady with appGip dev mode isReady should be true immediately for pages without getStaticProps",
      "router.isReady with appGip dev mode isReady should be true immediately for pages without getStaticProps, with query",
      "router.isReady with appGip production mode isReady should be true after query update for getStaticProps page with query",
      "router.isReady with appGip production mode isReady should be true immediately for pages without getStaticProps",
      "router.isReady with appGip production mode isReady should be true immediately for pages without getStaticProps, with query"
    ],
    "failed": [
      "router.isReady with appGip dev mode isReady should be true immediately for getStaticProps page without query",
      "router.isReady with appGip production mode isReady should be true immediately for getStaticProps page without query"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/router-is-ready/test/index.test.js": {
    "passed": [
      "router.isReady dev mode isReady should be true after query update for auto-export page with query",
      "router.isReady dev mode isReady should be true after query update for dynamic auto-export page with query",
      "router.isReady dev mode isReady should be true after query update for dynamic auto-export page without query",
      "router.isReady dev mode isReady should be true after query update for getStaticProps page with query",
      "router.isReady dev mode isReady should be true immediately for getInitialProps page",
      "router.isReady dev mode isReady should be true immediately for getInitialProps page with query",
      "router.isReady dev mode isReady should be true immediately for getServerSideProps page",
      "router.isReady dev mode isReady should be true immediately for getServerSideProps page with query",
      "router.isReady production mode isReady should be true after query update for auto-export page with query",
      "router.isReady production mode isReady should be true after query update for dynamic auto-export page with query",
      "router.isReady production mode isReady should be true after query update for dynamic auto-export page without query",
      "router.isReady production mode isReady should be true after query update for getStaticProps page with query",
      "router.isReady production mode isReady should be true immediately for getInitialProps page",
      "router.isReady production mode isReady should be true immediately for getInitialProps page with query",
      "router.isReady production mode isReady should be true immediately for getServerSideProps page",
      "router.isReady production mode isReady should be true immediately for getServerSideProps page with query"
    ],
    "failed": [
      "router.isReady dev mode isReady should be true immediately for auto-export page without query",
      "router.isReady dev mode isReady should be true immediately for getStaticProps page without query",
      "router.isReady production mode isReady should be true immediately for auto-export page without query",
      "router.isReady production mode isReady should be true immediately for getStaticProps page without query"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/router-prefetch/test/index.test.js": {
    "passed": [
      "Router prefetch dev mode should not prefetch",
      "Router prefetch dev mode should resolve prefetch promise",
      "Router prefetch production mode should resolve prefetch promise with invalid href"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/scroll-back-restoration/test/index.test.js": {
    "passed": [],
    "failed": [
      "Scroll Restoration Support dev mode should restore the scroll position on navigating back",
      "Scroll Restoration Support server mode should restore the scroll position on navigating back"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/scroll-forward-restoration/test/index.test.js": {
    "passed": [],
    "failed": [
      "Scroll Restoration Support dev mode should restore the scroll position on navigating forward",
      "Scroll Restoration Support server mode should restore the scroll position on navigating forward"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/scss-modules/test/basic-scss.test.js": {
    "passed": [
      "Can hot reload CSS Module without losing state should update CSS color without remounting <input>",
      "Has CSS Module in computed styles in Development should have CSS for page",
      "Has CSS Module in computed styles in Production should have CSS for page"
    ],
    "failed": [
      "3rd Party CSS Module Support should have compiled successfully",
      "3rd Party CSS Module Support should've emitted a single CSS file",
      "3rd Party CSS Module Support should've injected the CSS on server render",
      "Basic SCSS Module Support should have compiled successfully",
      "Basic SCSS Module Support should've emitted a single CSS file",
      "Basic SCSS Module Support should've injected the CSS on server render",
      "CSS Module Composes Usage (Basic) should have compiled successfully",
      "CSS Module Composes Usage (Basic) should've emitted a single CSS file",
      "CSS Module Composes Usage (External) should have compiled successfully",
      "CSS Module Composes Usage (External) should've emitted a single CSS file",
      "Has CSS Module in computed styles in Production should have compiled successfully"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/scss-modules/test/dynamic-route.test.js": {
    "passed": [
      "Catch-all Route CSS Module Usage should apply styles correctly",
      "Dynamic Route CSS Module Usage should apply styles correctly"
    ],
    "failed": [
      "Catch-all Route CSS Module Usage should have compiled successfully",
      "Catch-all Route CSS Module Usage should've emitted a single CSS file",
      "Dynamic Route CSS Module Usage should have compiled successfully",
      "Dynamic Route CSS Module Usage should've emitted a single CSS file"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/scss-modules/test/valid-invalid.test.js": {
    "passed": [],
    "failed": [
      "Valid CSS Module Usage from within node_modules should have compiled successfully",
      "Valid CSS Module Usage from within node_modules should've emitted a single CSS file",
      "Valid CSS Module Usage from within node_modules should've prerendered with relevant data",
      "Valid Nested CSS Module Usage from within node_modules should have compiled successfully",
      "Valid Nested CSS Module Usage from within node_modules should've emitted a single CSS file",
      "Valid Nested CSS Module Usage from within node_modules should've prerendered with relevant data"
    ],
    "pending": [
      "Invalid CSS Global Module Usage in node_modules should fail to build",
      "Invalid CSS Module Usage in node_modules should fail to build"
    ],
    "runtimeError": false
  },
  "test/integration/scss/test/basic-global-support.test.js": {
    "passed": [],
    "failed": [
      "Basic Global Support should compile successfully",
      "Basic Global Support should've emitted a single CSS file",
      "Basic Global Support with src/ dir should compile successfully",
      "Basic Global Support with src/ dir should've emitted a single CSS file",
      "Basic Module Include Paths Support should compile successfully",
      "Basic Module Include Paths Support should've emitted a single CSS file",
      "Basic Module Prepend Data Support should compile successfully",
      "Basic Module Prepend Data Support should've emitted a single CSS file",
      "CSS Import from node_modules should fail the build",
      "Good CSS Import from node_modules should compile successfully",
      "Good CSS Import from node_modules should've emitted a single CSS file",
      "Good Nested CSS Import from node_modules should compile successfully",
      "Good Nested CSS Import from node_modules should've emitted a single CSS file",
      "Multi Global Support (reversed) should compile successfully",
      "Multi Global Support (reversed) should've emitted a single CSS file",
      "Multi Global Support should compile successfully",
      "Multi Global Support should've emitted a single CSS file",
      "Nested @import() Global Support should compile successfully",
      "Nested @import() Global Support should've emitted a single CSS file"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/scss/test/basic-scss.test.js": {
    "passed": [],
    "failed": [
      "SCSS Support CSS Compilation and Prefixing should compile successfully",
      "SCSS Support CSS Compilation and Prefixing should've compiled and prefixed",
      "SCSS Support CSS Compilation and Prefixing should've emitted a source map",
      "SCSS Support Can hot reload CSS without losing state should update CSS color without remounting <input>",
      "SCSS Support Friendly Webpack Error should be a friendly error successfully",
      "SCSS Support Has CSS in computed styles in Production should have CSS for page",
      "SCSS Support Has CSS in computed styles in Production should have compiled successfully",
      "SCSS Support Has CSS in computed styles in Production should've preloaded the CSS file and injected it in <head>"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/scss/test/css-and-styled-jsx.test.js": {
    "passed": [
      "Ordering with styled-jsx (dev) should have the correct color (css ordering)",
      "Ordering with styled-jsx (prod) should have the correct color (css ordering)"
    ],
    "failed": [
      "Ordering with styled-jsx (prod) should have compiled successfully"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/scss/test/dev-css-handling.test.js": {
    "passed": [
      "Body is not hidden when broken in Development should have body visible",
      "Body is not hidden when unused in Development should have body visible",
      "Has CSS in computed styles in Development should have CSS for page"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/scss/test/scss-loader-handling.test.js": {
    "passed": [],
    "failed": [
      "SCSS Support CSS URL via `file-loader` and asset prefix (1) should compile successfully",
      "SCSS Support CSS URL via `file-loader` and asset prefix (1) should've emitted expected files",
      "SCSS Support CSS URL via `file-loader` and asset prefix (2) should compile successfully",
      "SCSS Support CSS URL via `file-loader` and asset prefix (2) should've emitted expected files",
      "SCSS Support CSS URL via `file-loader` should compile successfully",
      "SCSS Support CSS URL via `file-loader` should've emitted expected files",
      "SCSS Support CSS URL via file-loader sass partial should compile successfully",
      "SCSS Support CSS URL via file-loader sass partial should've emitted expected files",
      "SCSS Support Data Urls should compile successfully",
      "SCSS Support Data Urls should've emitted expected files",
      "SCSS Support External imports should compile successfully",
      "SCSS Support External imports should've emitted expected files",
      "SCSS Support Preprocessor loader order should compile successfully"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/scss/test/valid-invalid-scss.test.js": {
    "passed": [],
    "failed": [
      "Invalid CSS in _document should fail to build",
      "Invalid Global CSS should fail to build",
      "Invalid Global CSS with Custom App should fail to build",
      "Valid and Invalid Global CSS with Custom App should fail to build"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/server-asset-modules/test/index.test.js": {
    "passed": [],
    "failed": [
      "serverside asset modules dev mode should enable reading local files in api routes",
      "serverside asset modules production mode should enable reading local files in api routes"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/server-side-dev-errors/test/index.test.js": {
    "passed": [],
    "failed": [
      "server-side dev errors should show server-side error for api route correctly",
      "server-side dev errors should show server-side error for dynamic api route correctly",
      "server-side dev errors should show server-side error for dynamic gssp page correctly",
      "server-side dev errors should show server-side error for gsp page correctly",
      "server-side dev errors should show server-side error for gssp page correctly",
      "server-side dev errors should show server-side error for uncaught empty exception correctly",
      "server-side dev errors should show server-side error for uncaught empty rejection correctly",
      "server-side dev errors should show server-side error for uncaught exception correctly",
      "server-side dev errors should show server-side error for uncaught rejection correctly"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/src-dir-support-double-dir/test/index.test.js": {
    "passed": [
      "Dynamic Routing dev mode should render from pages",
      "Dynamic Routing dev mode should render not render from src/pages",
      "Dynamic Routing production mode should render from pages",
      "Dynamic Routing production mode should render not render from src/pages"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/src-dir-support/test/index.test.js": {
    "passed": [
      "Dynamic Routing dev mode should navigate to a dynamic page successfully",
      "Dynamic Routing dev mode should navigate to a nested dynamic page successfully",
      "Dynamic Routing dev mode should pass params in getInitialProps during SSR",
      "Dynamic Routing dev mode should prioritize a non-dynamic page",
      "Dynamic Routing dev mode should render another normal route",
      "Dynamic Routing dev mode should render dynamic page",
      "Dynamic Routing dev mode should render nested dynamic page",
      "Dynamic Routing dev mode should render normal route",
      "Dynamic Routing production mode should navigate to a dynamic page successfully",
      "Dynamic Routing production mode should navigate to a nested dynamic page successfully",
      "Dynamic Routing production mode should pass params in getInitialProps during SSR",
      "Dynamic Routing production mode should prioritize a non-dynamic page",
      "Dynamic Routing production mode should render another normal route",
      "Dynamic Routing production mode should render dynamic page",
      "Dynamic Routing production mode should render nested dynamic page",
      "Dynamic Routing production mode should render normal route"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/ssg-data-404/test/index.test.js": {
    "passed": [
      "SSG data 404 dev mode should hard navigate when a new deployment occurs",
      "SSG data 404 production mode should hard navigate when a new deployment occurs"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/ssg-dynamic-routes-404-page/test/index.test.js": {
    "passed": [
      "Custom 404 Page for static site generation with dynamic routes dev mode should respond to a not existing page with 404",
      "Custom 404 Page for static site generation with dynamic routes server mode should build successfully",
      "Custom 404 Page for static site generation with dynamic routes server mode should respond to a not existing page with 404"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/static-404/test/index.test.js": {
    "passed": [
      "Static 404 page With config enabled should export 404 page without custom _error",
      "Static 404 page With config enabled should not export 404 page with custom _error GIP",
      "Static 404 page With config enabled should not export 404 page with getInitialProps in _app"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/static-page-name/test/index.test.js": {
    "passed": [
      "Static Page Name dev mode should navigate to static page name correctly",
      "Static Page Name dev mode should render the page via SSR correctly",
      "Static Page Name production mode should navigate to static page name correctly",
      "Static Page Name production mode should render the page via SSR correctly"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/styled-jsx-plugin/test/index.test.js": {
    "passed": [],
    "failed": [
      "styled-jsx using in node_modules production mode should serve a page correctly"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/telemetry/test/config.test.js": {
    "passed": [
      "config telemetry emits telemetry for `next lint`",
      "config telemetry emits telemetry for lint during build",
      "config telemetry emits telemetry for lint during build when '--no-lint' is specified",
      "config telemetry emits telemetry for lint during build when 'ignoreDuringBuilds' is specified",
      "config telemetry emits telemetry for usage of swc plugins"
    ],
    "failed": [
      "config telemetry detects i18n and image configs for session start",
      "config telemetry detects output config for session start",
      "config telemetry detects rewrites, headers, and redirects for next build",
      "config telemetry emits telemery for usage of optimizeFonts, image, script & dynamic",
      "config telemetry emits telemetry for middleware related options",
      "config telemetry emits telemetry for transpilePackages",
      "config telemetry emits telemetry for usage of @vercel/og",
      "config telemetry emits telemetry for usage of `nextScriptWorkers`",
      "config telemetry emits telemetry for usage of `optimizeCss`",
      "config telemetry emits telemetry for usage of middleware",
      "config telemetry emits telemetry for usage of next/legacy/image",
      "config telemetry emits telemetry for usage of swc"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/telemetry/test/index.test.js": {
    "passed": [
      "Telemetry CLI can disable telemetry with env NEXT_TELEMETRY_DISABLED",
      "Telemetry CLI can disable telemetry with flag",
      "Telemetry CLI can disable telemetry without flag",
      "Telemetry CLI can enable telemetry with flag",
      "Telemetry CLI can enable telemetry without flag",
      "Telemetry CLI can print telemetry status",
      "Telemetry CLI can re-disable telemetry",
      "Telemetry CLI can re-enable telemetry",
      "Telemetry CLI cli session: babel tooling config",
      "Telemetry CLI cli session: custom babel config (plugin)",
      "Telemetry CLI cli session: custom babel config (preset)",
      "Telemetry CLI cli session: next config with webpack",
      "Telemetry CLI cli session: package.json custom babel config (plugin)",
      "Telemetry CLI detects correct cli session defaults",
      "Telemetry CLI detects isSrcDir dir correctly for `next dev`",
      "Telemetry CLI emits event when swc fails to load"
    ],
    "failed": [
      "Telemetry CLI detect page counts correctly for `next build`",
      "Telemetry CLI detect static 404 correctly for `next build`",
      "Telemetry CLI detects isSrcDir dir correctly for `next build`",
      "Telemetry CLI detects tests correctly for `next build`",
      "Telemetry CLI logs completed `next build` with warnings"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/telemetry/test/page-features.test.js": {
    "passed": [
      "page features telemetry detects --turbo correctly for `next dev` stopped"
    ],
    "failed": [
      "page features telemetry detects --turbo correctly for `next dev`"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/trailing-slash-dist/test/index.test.js": {
    "passed": ["Trailing slash in distDir dev mode supports trailing slash"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/trailing-slashes-href-resolving/test/index.test.js": {
    "passed": [
      "href resolving trailing-slash dev mode should route to /another/ correctly",
      "href resolving trailing-slash dev mode should route to /blog/another/ correctly",
      "href resolving trailing-slash dev mode should route to /blog/first-post/ correctly",
      "href resolving trailing-slash dev mode should route to /catch-all/first/ correctly",
      "href resolving trailing-slash dev mode should route to /catch-all/hello/world/ correctly",
      "href resolving trailing-slash dev mode should route to /top-level-slug/ correctly",
      "href resolving trailing-slash production mode should preload SSG routes correctly",
      "href resolving trailing-slash production mode should route to /another/ correctly",
      "href resolving trailing-slash production mode should route to /blog/another/ correctly",
      "href resolving trailing-slash production mode should route to /blog/first-post/ correctly",
      "href resolving trailing-slash production mode should route to /catch-all/first/ correctly",
      "href resolving trailing-slash production mode should route to /catch-all/hello/world/ correctly",
      "href resolving trailing-slash production mode should route to /top-level-slug/ correctly"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/trailing-slashes-rewrite/test/index.test.js": {
    "passed": [
      "Trailing Slash Rewrite Proxying dev mode should proxy non-existent page correctly",
      "Trailing Slash Rewrite Proxying dev mode should resolve a catch-all page correctly",
      "Trailing Slash Rewrite Proxying dev mode should resolve a dynamic page correctly",
      "Trailing Slash Rewrite Proxying dev mode should resolve index page correctly",
      "Trailing Slash Rewrite Proxying dev mode should resolve products page correctly",
      "Trailing Slash Rewrite Proxying production mode should proxy non-existent page correctly",
      "Trailing Slash Rewrite Proxying production mode should resolve a catch-all page correctly",
      "Trailing Slash Rewrite Proxying production mode should resolve a dynamic page correctly",
      "Trailing Slash Rewrite Proxying production mode should resolve index page correctly",
      "Trailing Slash Rewrite Proxying production mode should resolve products page correctly"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/trailing-slashes/test/index.test.js": {
    "passed": [
      "Trailing slashes dev mode, trailingSlash: false / should client side render /index.js, with router path /",
      "Trailing slashes dev mode, trailingSlash: false / should resolve to /index.js, with router path /",
      "Trailing slashes dev mode, trailingSlash: false /about should client side render /about.js, with router path /about",
      "Trailing slashes dev mode, trailingSlash: false /about should resolve to /about.js, with router path /about",
      "Trailing slashes dev mode, trailingSlash: false /about/ should redirect to /about",
      "Trailing slashes dev mode, trailingSlash: false /about?hello=world should client side render /about.js, with router path /about",
      "Trailing slashes dev mode, trailingSlash: false /about?hello=world should resolve to /about.js, with router path /about",
      "Trailing slashes dev mode, trailingSlash: false /catch-all/hello.world/ should redirect to /catch-all/hello.world",
      "Trailing slashes dev mode, trailingSlash: false /catch-all/hello/world should client side render /catch-all/[...slug].js, with router path /catch-all/[...slug]",
      "Trailing slashes dev mode, trailingSlash: false /catch-all/hello/world should resolve to /catch-all/[...slug].js, with router path /catch-all/[...slug]",
      "Trailing slashes dev mode, trailingSlash: false /catch-all/hello/world/ should redirect to /catch-all/hello/world",
      "Trailing slashes dev mode, trailingSlash: false /external-linker?href=https://nextjs.org should have href https://nextjs.org",
      "Trailing slashes dev mode, trailingSlash: false /external-linker?href=https://nextjs.org/ should have href https://nextjs.org/",
      "Trailing slashes dev mode, trailingSlash: false /linker?href=/ should have href /",
      "Trailing slashes dev mode, trailingSlash: false /linker?href=/ should navigate to /",
      "Trailing slashes dev mode, trailingSlash: false /linker?href=/ should push route to /",
      "Trailing slashes dev mode, trailingSlash: false /linker?href=/about should have href /about",
      "Trailing slashes dev mode, trailingSlash: false /linker?href=/about should navigate to /about",
      "Trailing slashes dev mode, trailingSlash: false /linker?href=/about should push route to /about",
      "Trailing slashes dev mode, trailingSlash: false /linker?href=/about/ should have href /about",
      "Trailing slashes dev mode, trailingSlash: false /linker?href=/about/ should navigate to /about",
      "Trailing slashes dev mode, trailingSlash: false /linker?href=/about/ should push route to /about",
      "Trailing slashes dev mode, trailingSlash: false /linker?href=/about/?hello=world should have href /about?hello=world",
      "Trailing slashes dev mode, trailingSlash: false /linker?href=/about/?hello=world should navigate to /about?hello=world",
      "Trailing slashes dev mode, trailingSlash: false /linker?href=/about/?hello=world should push route to /about?hello=world",
      "Trailing slashes dev mode, trailingSlash: false /linker?href=/about?hello=world should have href /about?hello=world",
      "Trailing slashes dev mode, trailingSlash: false /linker?href=/about?hello=world should navigate to /about?hello=world",
      "Trailing slashes dev mode, trailingSlash: false /linker?href=/about?hello=world should push route to /about?hello=world",
      "Trailing slashes dev mode, trailingSlash: false /linker?href=/catch-all/hello.world/ should have href /catch-all/hello.world",
      "Trailing slashes dev mode, trailingSlash: false /linker?href=/catch-all/hello.world/ should navigate to /catch-all/hello.world",
      "Trailing slashes dev mode, trailingSlash: false /linker?href=/catch-all/hello.world/ should push route to /catch-all/hello.world",
      "Trailing slashes dev mode, trailingSlash: false /linker?href=/catch-all/hello/ should have href /catch-all/hello",
      "Trailing slashes dev mode, trailingSlash: false /linker?href=/catch-all/hello/ should navigate to /catch-all/hello",
      "Trailing slashes dev mode, trailingSlash: false /linker?href=/catch-all/hello/ should push route to /catch-all/hello",
      "Trailing slashes dev mode, trailingSlash: true / should client side render /index.js, with router path /",
      "Trailing slashes dev mode, trailingSlash: true / should resolve to /index.js, with router path /",
      "Trailing slashes dev mode, trailingSlash: true /about should redirect to /about/",
      "Trailing slashes dev mode, trailingSlash: true /about/ should client side render /about.js, with router path /about",
      "Trailing slashes dev mode, trailingSlash: true /about/ should resolve to /about.js, with router path /about",
      "Trailing slashes dev mode, trailingSlash: true /about/?hello=world should client side render /about.js, with router path /about",
      "Trailing slashes dev mode, trailingSlash: true /about/?hello=world should resolve to /about.js, with router path /about",
      "Trailing slashes dev mode, trailingSlash: true /catch-all/hello.world/ should redirect to /catch-all/hello.world",
      "Trailing slashes dev mode, trailingSlash: true /catch-all/hello/world should redirect to /catch-all/hello/world/",
      "Trailing slashes dev mode, trailingSlash: true /catch-all/hello/world/ should client side render /catch-all/[...slug].js, with router path /catch-all/[...slug]",
      "Trailing slashes dev mode, trailingSlash: true /catch-all/hello/world/ should resolve to /catch-all/[...slug].js, with router path /catch-all/[...slug]",
      "Trailing slashes dev mode, trailingSlash: true /external-linker?href=https://nextjs.org should have href https://nextjs.org",
      "Trailing slashes dev mode, trailingSlash: true /external-linker?href=https://nextjs.org/ should have href https://nextjs.org/",
      "Trailing slashes dev mode, trailingSlash: true /linker?href=/ should have href /",
      "Trailing slashes dev mode, trailingSlash: true /linker?href=/ should navigate to /",
      "Trailing slashes dev mode, trailingSlash: true /linker?href=/ should push route to /",
      "Trailing slashes dev mode, trailingSlash: true /linker?href=/catch-all/hello.world/ should have href /catch-all/hello.world",
      "Trailing slashes dev mode, trailingSlash: true /linker?href=/catch-all/hello.world/ should navigate to /catch-all/hello.world",
      "Trailing slashes dev mode, trailingSlash: true /linker?href=/catch-all/hello.world/ should push route to /catch-all/hello.world",
      "Trailing slashes dev mode, with basepath, trailingSlash: true /docs should redirect to /docs/",
      "Trailing slashes dev mode, with basepath, trailingSlash: true /docs/about should redirect to /docs/about/",
      "Trailing slashes dev mode, with basepath, trailingSlash: true /docs/catch-all/hello.world/ should redirect to /docs/catch-all/hello.world",
      "Trailing slashes dev mode, with basepath, trailingSlash: true /docs/catch-all/hello/world should redirect to /docs/catch-all/hello/world/",
      "Trailing slashes production mode, trailingSlash: false / should client side render /index.js, with router path /",
      "Trailing slashes production mode, trailingSlash: false / should resolve to /index.js, with router path /",
      "Trailing slashes production mode, trailingSlash: false /about should client side render /about.js, with router path /about",
      "Trailing slashes production mode, trailingSlash: false /about should resolve to /about.js, with router path /about",
      "Trailing slashes production mode, trailingSlash: false /about/ should redirect to /about",
      "Trailing slashes production mode, trailingSlash: false /about?hello=world should client side render /about.js, with router path /about",
      "Trailing slashes production mode, trailingSlash: false /about?hello=world should resolve to /about.js, with router path /about",
      "Trailing slashes production mode, trailingSlash: false /catch-all/hello.world/ should redirect to /catch-all/hello.world",
      "Trailing slashes production mode, trailingSlash: false /catch-all/hello/world should client side render /catch-all/[...slug].js, with router path /catch-all/[...slug]",
      "Trailing slashes production mode, trailingSlash: false /catch-all/hello/world should resolve to /catch-all/[...slug].js, with router path /catch-all/[...slug]",
      "Trailing slashes production mode, trailingSlash: false /catch-all/hello/world/ should redirect to /catch-all/hello/world",
      "Trailing slashes production mode, trailingSlash: false /external-linker?href=https://nextjs.org should have href https://nextjs.org",
      "Trailing slashes production mode, trailingSlash: false /external-linker?href=https://nextjs.org/ should have href https://nextjs.org/",
      "Trailing slashes production mode, trailingSlash: false /linker?href=/ should have href /",
      "Trailing slashes production mode, trailingSlash: false /linker?href=/ should navigate to /",
      "Trailing slashes production mode, trailingSlash: false /linker?href=/ should push route to /",
      "Trailing slashes production mode, trailingSlash: false /linker?href=/about should have href /about",
      "Trailing slashes production mode, trailingSlash: false /linker?href=/about should navigate to /about",
      "Trailing slashes production mode, trailingSlash: false /linker?href=/about should push route to /about",
      "Trailing slashes production mode, trailingSlash: false /linker?href=/about/ should have href /about",
      "Trailing slashes production mode, trailingSlash: false /linker?href=/about/ should navigate to /about",
      "Trailing slashes production mode, trailingSlash: false /linker?href=/about/ should push route to /about",
      "Trailing slashes production mode, trailingSlash: false /linker?href=/about/?hello=world should have href /about?hello=world",
      "Trailing slashes production mode, trailingSlash: false /linker?href=/about/?hello=world should navigate to /about?hello=world",
      "Trailing slashes production mode, trailingSlash: false /linker?href=/about/?hello=world should push route to /about?hello=world",
      "Trailing slashes production mode, trailingSlash: false /linker?href=/about?hello=world should have href /about?hello=world",
      "Trailing slashes production mode, trailingSlash: false /linker?href=/about?hello=world should navigate to /about?hello=world",
      "Trailing slashes production mode, trailingSlash: false /linker?href=/about?hello=world should push route to /about?hello=world",
      "Trailing slashes production mode, trailingSlash: false /linker?href=/catch-all/hello.world/ should have href /catch-all/hello.world",
      "Trailing slashes production mode, trailingSlash: false /linker?href=/catch-all/hello.world/ should navigate to /catch-all/hello.world",
      "Trailing slashes production mode, trailingSlash: false /linker?href=/catch-all/hello.world/ should push route to /catch-all/hello.world",
      "Trailing slashes production mode, trailingSlash: false /linker?href=/catch-all/hello/ should have href /catch-all/hello",
      "Trailing slashes production mode, trailingSlash: false /linker?href=/catch-all/hello/ should navigate to /catch-all/hello",
      "Trailing slashes production mode, trailingSlash: false /linker?href=/catch-all/hello/ should push route to /catch-all/hello",
      "Trailing slashes production mode, trailingSlash: false should have a redirect in the routesmanifest",
      "Trailing slashes production mode, trailingSlash: true / should client side render /index.js, with router path /",
      "Trailing slashes production mode, trailingSlash: true / should resolve to /index.js, with router path /",
      "Trailing slashes production mode, trailingSlash: true /about should redirect to /about/",
      "Trailing slashes production mode, trailingSlash: true /about/ should client side render /about.js, with router path /about",
      "Trailing slashes production mode, trailingSlash: true /about/ should resolve to /about.js, with router path /about",
      "Trailing slashes production mode, trailingSlash: true /about/?hello=world should client side render /about.js, with router path /about",
      "Trailing slashes production mode, trailingSlash: true /about/?hello=world should resolve to /about.js, with router path /about",
      "Trailing slashes production mode, trailingSlash: true /catch-all/hello.world/ should redirect to /catch-all/hello.world",
      "Trailing slashes production mode, trailingSlash: true /catch-all/hello/world should redirect to /catch-all/hello/world/",
      "Trailing slashes production mode, trailingSlash: true /catch-all/hello/world/ should client side render /catch-all/[...slug].js, with router path /catch-all/[...slug]",
      "Trailing slashes production mode, trailingSlash: true /catch-all/hello/world/ should resolve to /catch-all/[...slug].js, with router path /catch-all/[...slug]",
      "Trailing slashes production mode, trailingSlash: true /external-linker?href=https://nextjs.org should have href https://nextjs.org",
      "Trailing slashes production mode, trailingSlash: true /external-linker?href=https://nextjs.org/ should have href https://nextjs.org/",
      "Trailing slashes production mode, trailingSlash: true /linker?href=/ should have href /",
      "Trailing slashes production mode, trailingSlash: true /linker?href=/ should navigate to /",
      "Trailing slashes production mode, trailingSlash: true /linker?href=/ should push route to /",
      "Trailing slashes production mode, trailingSlash: true /linker?href=/catch-all/hello.world/ should have href /catch-all/hello.world",
      "Trailing slashes production mode, trailingSlash: true /linker?href=/catch-all/hello.world/ should navigate to /catch-all/hello.world",
      "Trailing slashes production mode, trailingSlash: true /linker?href=/catch-all/hello.world/ should push route to /catch-all/hello.world",
      "Trailing slashes production mode, trailingSlash: true should have a redirect in the routesmanifest",
      "Trailing slashes production mode, with basepath, trailingSlash: true /docs should redirect to /docs/",
      "Trailing slashes production mode, with basepath, trailingSlash: true /docs/about should redirect to /docs/about/",
      "Trailing slashes production mode, with basepath, trailingSlash: true /docs/catch-all/hello.world/ should redirect to /docs/catch-all/hello.world",
      "Trailing slashes production mode, with basepath, trailingSlash: true /docs/catch-all/hello/world should redirect to /docs/catch-all/hello/world/"
    ],
    "failed": [
      "Trailing slashes dev mode, trailingSlash: true /linker?href=/about should have href /about/",
      "Trailing slashes dev mode, trailingSlash: true /linker?href=/about should navigate to /about/",
      "Trailing slashes dev mode, trailingSlash: true /linker?href=/about should push route to /about/",
      "Trailing slashes dev mode, trailingSlash: true /linker?href=/about/ should have href /about/",
      "Trailing slashes dev mode, trailingSlash: true /linker?href=/about/ should navigate to /about/",
      "Trailing slashes dev mode, trailingSlash: true /linker?href=/about/ should push route to /about/",
      "Trailing slashes dev mode, trailingSlash: true /linker?href=/about/?hello=world should have href /about/?hello=world",
      "Trailing slashes dev mode, trailingSlash: true /linker?href=/about/?hello=world should navigate to /about/?hello=world",
      "Trailing slashes dev mode, trailingSlash: true /linker?href=/about/?hello=world should push route to /about/?hello=world",
      "Trailing slashes dev mode, trailingSlash: true /linker?href=/about?hello=world should have href /about/?hello=world",
      "Trailing slashes dev mode, trailingSlash: true /linker?href=/about?hello=world should navigate to /about/?hello=world",
      "Trailing slashes dev mode, trailingSlash: true /linker?href=/about?hello=world should push route to /about/?hello=world",
      "Trailing slashes dev mode, trailingSlash: true /linker?href=/catch-all/hello/ should have href /catch-all/hello/",
      "Trailing slashes dev mode, trailingSlash: true /linker?href=/catch-all/hello/ should navigate to /catch-all/hello/",
      "Trailing slashes dev mode, trailingSlash: true /linker?href=/catch-all/hello/ should push route to /catch-all/hello/",
      "Trailing slashes dev mode, with basepath, trailingSlash: true /docs/linker?href=/ should have href /docs/",
      "Trailing slashes dev mode, with basepath, trailingSlash: true /docs/linker?href=/ should navigate to /docs/",
      "Trailing slashes dev mode, with basepath, trailingSlash: true /docs/linker?href=/ should push route to /docs/",
      "Trailing slashes dev mode, with basepath, trailingSlash: true /docs/linker?href=/about should have href /docs/about/",
      "Trailing slashes dev mode, with basepath, trailingSlash: true /docs/linker?href=/about should navigate to /docs/about/",
      "Trailing slashes dev mode, with basepath, trailingSlash: true /docs/linker?href=/about should push route to /docs/about/",
      "Trailing slashes production mode, trailingSlash: true /linker?href=/about should have href /about/",
      "Trailing slashes production mode, trailingSlash: true /linker?href=/about should navigate to /about/",
      "Trailing slashes production mode, trailingSlash: true /linker?href=/about should push route to /about/",
      "Trailing slashes production mode, trailingSlash: true /linker?href=/about/ should have href /about/",
      "Trailing slashes production mode, trailingSlash: true /linker?href=/about/ should navigate to /about/",
      "Trailing slashes production mode, trailingSlash: true /linker?href=/about/ should push route to /about/",
      "Trailing slashes production mode, trailingSlash: true /linker?href=/about/?hello=world should have href /about/?hello=world",
      "Trailing slashes production mode, trailingSlash: true /linker?href=/about/?hello=world should navigate to /about/?hello=world",
      "Trailing slashes production mode, trailingSlash: true /linker?href=/about/?hello=world should push route to /about/?hello=world",
      "Trailing slashes production mode, trailingSlash: true /linker?href=/about?hello=world should have href /about/?hello=world",
      "Trailing slashes production mode, trailingSlash: true /linker?href=/about?hello=world should navigate to /about/?hello=world",
      "Trailing slashes production mode, trailingSlash: true /linker?href=/about?hello=world should push route to /about/?hello=world",
      "Trailing slashes production mode, trailingSlash: true /linker?href=/catch-all/hello/ should have href /catch-all/hello/",
      "Trailing slashes production mode, trailingSlash: true /linker?href=/catch-all/hello/ should navigate to /catch-all/hello/",
      "Trailing slashes production mode, trailingSlash: true /linker?href=/catch-all/hello/ should push route to /catch-all/hello/",
      "Trailing slashes production mode, with basepath, trailingSlash: true /docs/linker?href=/ should have href /docs/",
      "Trailing slashes production mode, with basepath, trailingSlash: true /docs/linker?href=/ should navigate to /docs/",
      "Trailing slashes production mode, with basepath, trailingSlash: true /docs/linker?href=/ should push route to /docs/",
      "Trailing slashes production mode, with basepath, trailingSlash: true /docs/linker?href=/about should have href /docs/about/",
      "Trailing slashes production mode, with basepath, trailingSlash: true /docs/linker?href=/about should navigate to /docs/about/",
      "Trailing slashes production mode, with basepath, trailingSlash: true /docs/linker?href=/about should push route to /docs/about/"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/tsconfig-verifier/test/index.test.js": {
    "passed": [
      "tsconfig.json verifier Creates a default tsconfig.json when one is missing",
      "tsconfig.json verifier Updates an existing tsconfig.json without losing comments",
      "tsconfig.json verifier Works with an empty tsconfig.json (docs)",
      "tsconfig.json verifier allows you to extend another configuration file",
      "tsconfig.json verifier allows you to set bundler moduleResolution mode",
      "tsconfig.json verifier allows you to set commonjs module mode",
      "tsconfig.json verifier allows you to set es2020 module mode",
      "tsconfig.json verifier allows you to set node16 module mode",
      "tsconfig.json verifier allows you to set node16 moduleResolution mode",
      "tsconfig.json verifier allows you to set target mode",
      "tsconfig.json verifier allows you to set verbatimModuleSyntax true without adding isolatedModules",
      "tsconfig.json verifier creates compilerOptions when you extend another config"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/turbopack-unsupported-log/index.test.ts": {
    "passed": [
      "turbopack unsupported features log should not warn by default",
      "turbopack unsupported features log should not warn with empty next.config.js"
    ],
    "failed": [
      "turbopack unsupported features log should warn with next.config.js with unsupported field"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/turbotrace-with-webpack-worker/test/index.test.js": {
    "passed": [],
    "failed": [
      "build trace with extra entries should build and trace correctly"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/typeof-window-replace/test/index.test.js": {
    "passed": [],
    "failed": [
      "typeof window replace Does not replace `typeof window` for `node_modules` code",
      "typeof window replace Replaces `typeof window` with object for client code",
      "typeof window replace Replaces `typeof window` with undefined for server code"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/typescript-app-type-declarations/test/index.test.js": {
    "passed": [
      "TypeScript App Type Declarations should not touch an existing correct next-env.d.ts",
      "TypeScript App Type Declarations should overwrite next-env.d.ts if an incorrect one exists",
      "TypeScript App Type Declarations should write a new next-env.d.ts if none exist"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/typescript-baseurl/test/index.test.js": {
    "passed": ["TypeScript Features default behavior should render the page"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/typescript-custom-tsconfig/test/index.test.js": {
    "passed": [],
    "failed": [
      "Custom TypeScript Config should warn when using custom typescript path"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/typescript-external-dir/project/test/index.test.js": {
    "passed": [],
    "failed": [
      "TypeScript Features default behavior should render the page with external TS/TSX dependencies"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/typescript-filtered-files/test/index.test.js": {
    "passed": [
      "TypeScript filtered files should fail to build the app with a file named con*test*.js"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/typescript-hmr/test/index.test.js": {
    "passed": [
      "TypeScript HMR delete a page and add it back should detect the changes to typescript pages and display it",
      "TypeScript HMR should ignore type errors in development"
    ],
    "failed": [],
    "pending": ["TypeScript HMR should recover from a type error"],
    "runtimeError": false
  },
  "test/integration/typescript-ignore-errors/test/index.test.js": {
    "passed": [
      "TypeScript with error handling options ignoreBuildErrors: false Next fails to build the application despite type errors in incremental mode",
      "TypeScript with error handling options ignoreBuildErrors: false Next fails to build the application despite type errors without incremental mode"
    ],
    "failed": [
      "TypeScript with error handling options ignoreBuildErrors: true Next builds the application despite type errors in incremental mode",
      "TypeScript with error handling options ignoreBuildErrors: true Next builds the application despite type errors without incremental mode"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/typescript-only-remove-type-imports/test/index.test.js": {
    "passed": [],
    "failed": [
      "TypeScript onlyRemoveTypeImports dev mode should render a normal page correctly",
      "TypeScript onlyRemoveTypeImports dev mode should render a page with type import correctly",
      "TypeScript onlyRemoveTypeImports production mode should render a normal page correctly",
      "TypeScript onlyRemoveTypeImports production mode should render a page with type import correctly"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/typescript-paths/test/index.test.js": {
    "passed": [
      "typescript paths default behavior should alias components",
      "typescript paths default behavior should resolve a single matching alias",
      "typescript paths default behavior should resolve the first item in the array first",
      "typescript paths default behavior should resolve the second item in as a fallback",
      "typescript paths without baseurl default behavior should alias components",
      "typescript paths without baseurl default behavior should resolve a single matching alias",
      "typescript paths without baseurl default behavior should resolve the first item in the array first",
      "typescript paths without baseurl default behavior should resolve the second item in as a fallback"
    ],
    "failed": [
      "typescript paths default behavior should not resolve to .d.ts files",
      "typescript paths without baseurl default behavior should not resolve to .d.ts files"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/typescript-workspaces-paths/packages/www/test/index.test.js": {
    "passed": [
      "TypeScript Features default behavior should alias components",
      "TypeScript Features default behavior should resolve a single matching alias",
      "TypeScript Features default behavior should resolve the first item in the array first",
      "TypeScript Features default behavior should resolve the second item in as a fallback"
    ],
    "failed": [
      "TypeScript Features default behavior should not resolve to .d.ts files"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/typescript/test/index.test.js": {
    "passed": [
      "TypeScript Features default behavior should not fail to render when an inactive page has an error",
      "TypeScript Features default behavior should render the cookies page",
      "TypeScript Features default behavior should render the cookies page with cookies",
      "TypeScript Features default behavior should render the generics page",
      "TypeScript Features default behavior should render the page",
      "TypeScript Features default behavior should respond to async API route correctly",
      "TypeScript Features default behavior should respond to sync API route correctly",
      "TypeScript Features should not inform when using default tsconfig path"
    ],
    "failed": [
      "TypeScript Features default behavior should render the angle bracket type assertions page",
      "TypeScript Features default behavior should resolve files in correct order",
      "TypeScript Features should build the app",
      "TypeScript Features should build the app with functions in next.config.js",
      "TypeScript Features should compile with different types should compile async getInitialProps for _error",
      "TypeScript Features should compile with different types should compile sync getStaticPaths & getStaticProps"
    ],
    "pending": [
      "TypeScript Features default behavior should report type checking to stdout"
    ],
    "runtimeError": false
  },
  "test/integration/undefined-webpack-config/test/index.test.js": {
    "passed": [],
    "failed": ["undefined webpack config error should show in dev mode"],
    "pending": [
      "undefined webpack config error should show in production mode"
    ],
    "runtimeError": false
  },
  "test/integration/url-imports/test/index.test.js": {
    "passed": [],
    "failed": [
      "Handle url imports with next build should allow url import in css",
      "Handle url imports with next build should client-render the /ssg page",
      "Handle url imports with next build should client-render the /ssr page",
      "Handle url imports with next build should client-render the /static page",
      "Handle url imports with next build should render a static url image import",
      "Handle url imports with next build should render the /ssg page",
      "Handle url imports with next build should render the /ssr page",
      "Handle url imports with next build should render the /static page",
      "Handle url imports with next build should respond on value api",
      "Handle url imports with next dev should allow url import in css",
      "Handle url imports with next dev should client-render the /ssg page",
      "Handle url imports with next dev should client-render the /ssr page",
      "Handle url imports with next dev should client-render the /static page",
      "Handle url imports with next dev should render a static url image import",
      "Handle url imports with next dev should render the /ssg page",
      "Handle url imports with next dev should render the /ssr page",
      "Handle url imports with next dev should render the /static page",
      "Handle url imports with next dev should respond on value api"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/url/test/index.test.js": {
    "passed": [],
    "failed": [
      "Handle new URL asset references in next build should client-render the /ssg page",
      "Handle new URL asset references in next build should client-render the /ssr page",
      "Handle new URL asset references in next build should client-render the /static page",
      "Handle new URL asset references in next build should render the /ssg page",
      "Handle new URL asset references in next build should render the /ssr page",
      "Handle new URL asset references in next build should render the /static page",
      "Handle new URL asset references in next build should respond on basename api",
      "Handle new URL asset references in next build should respond on size api",
      "Handle new URL asset references in next dev should client-render the /ssg page",
      "Handle new URL asset references in next dev should client-render the /ssr page",
      "Handle new URL asset references in next dev should client-render the /static page",
      "Handle new URL asset references in next dev should render the /ssg page",
      "Handle new URL asset references in next dev should render the /ssr page",
      "Handle new URL asset references in next dev should render the /static page",
      "Handle new URL asset references in next dev should respond on basename api",
      "Handle new URL asset references in next dev should respond on size api"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/webpack-config-extensionalias/test/index.test.js": {
    "passed": [],
    "failed": [
      "webpack config with extensionAlias setting should run correctly with an tsx file import with .js extension"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/webpack-config-mainjs/test/index.test.js": {
    "passed": [
      "Customized webpack config with main.js should run correctly with main.js customized"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/webpack-require-hook/test/index.test.js": {
    "passed": [],
    "failed": [
      "Handles Webpack Require Hook build Does not error during build",
      "Handles Webpack Require Hook dev mode Applies and does not error during development"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/with-electron/test/index.test.js": {
    "passed": [
      "Should skip testing electron without process.env.TEST_ELECTRON set"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/with-router/test/index.test.js": {
    "passed": [
      "withRouter SSR should show an error when trying to use router methods during SSR",
      "withRouter allows observation of navigation events using top level Router",
      "withRouter allows observation of navigation events using top level Router deprecated behavior",
      "withRouter allows observation of navigation events using withRouter"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/integration/worker-webpack5/test/index.test.js": {
    "passed": [],
    "failed": [
      "Web Workers with webpack 5 dev mode should pass on both client and worker",
      "Web Workers with webpack 5 server mode should pass on both client and worker"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/production/app-dir-edge-runtime-with-wasm/index.test.ts": {
    "passed": [],
    "failed": ["app-dir edge runtime with wasm should have built"],
    "pending": [],
    "runtimeError": true
  },
  "test/production/app-dir-hide-suppressed-error-during-next-export/index.test.ts": {
    "passed": [
      "app-dir-hide-suppressed-error-during-next-export should not log suppressed error when exporting static page"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/production/app-dir-prefetch-non-iso-url/index.test.ts": {
    "passed": [
      "app-dir-prefetch-non-iso-url should go to iso url",
      "app-dir-prefetch-non-iso-url should go to non-iso url"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/production/app-dir/app-only-flag/app-only-flag.test.ts": {
    "passed": ["app-only-flag should serve app route"],
    "failed": ["app-only-flag should not serve about route"],
    "pending": [],
    "runtimeError": false
  },
  "test/production/app-dir/build-output/index.test.ts": {
    "passed": [
      "production - app dir - build output should only log app routes"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/production/app-dir/revalidate/revalidate.test.ts": {
    "passed": [
      "app-dir revalidate should be able to revalidate the cache via pages/api"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/production/bfcache-routing/index.test.ts": {
    "passed": [
      "bfcache-routing should not suspend indefinitely when page is restored from bfcache after an mpa navigation"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/production/build-spinners/index.test.ts": {
    "passed": [],
    "failed": [
      "build-spinners should handle build spinners correctly app and pages",
      "build-spinners should handle build spinners correctly app dir",
      "build-spinners should handle build spinners correctly app dir (compile workers)",
      "build-spinners should handle build spinners correctly page dir",
      "build-spinners should handle build spinners correctly page dir (compile workers)"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/production/ci-missing-typescript-deps/index.test.ts": {
    "passed": [
      "ci-missing-typescript-deps should show missing TypeScript dependencies error in CI"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/production/custom-error-500/index.test.ts": {
    "passed": [
      "custom-error-500 should correctly use pages/500 and call Error.getInitialProps",
      "custom-error-500 should work correctly with pages/404 present"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/production/custom-server/custom-server.test.ts": {
    "passed": [
      "custom server can navigate to /a",
      "custom server can navigate to /b",
      "custom server can navigate to /c",
      "custom server with app dir should not render pages with react canary",
      "custom server with app dir should render app with react canary"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/production/dependencies-can-use-env-vars-in-middlewares/index.test.ts": {
    "passed": [
      "dependencies can use env vars in middlewares does not error from patching lockfile"
    ],
    "failed": [
      "dependencies can use env vars in middlewares uses the environment variables"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/production/deployment-id-handling/deployment-id-handling.test.ts": {
    "passed": [],
    "failed": [
      "deployment-id-handling should append dpl query to all assets correctly for /",
      "deployment-id-handling should append dpl query to all assets correctly for /from-app",
      "deployment-id-handling should append dpl query to all assets correctly for /from-app/edge",
      "deployment-id-handling should append dpl query to all assets correctly for /pages-edge",
      "deployment-id-handling should have deployment id env available"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/production/disable-fallback-polyfills/index.test.ts": {
    "passed": [
      "Disable fallback polyfills Fallback polyfills added by default",
      "Disable fallback polyfills Pass build without error if non-polyfilled module is unreachable"
    ],
    "failed": [
      "Disable fallback polyfills Reduced bundle size when polyfills are disabled"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/production/edge-config-validations/index.test.ts": {
    "passed": [],
    "failed": [
      "Edge config validations fails to build when unstable_allowDynamic is not a string"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/production/edge-runtime-is-addressable/index.test.ts": {
    "passed": [],
    "failed": [
      "Edge Runtime can be set to the production provider EdgeRuntime evaluates to a string",
      "Edge Runtime is addressable EdgeRuntime evaluates to a string",
      "Edge Runtime is addressable removes the undefined branch with dead code elimination"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/production/edge-safe-dynamic-code/index.test.ts": {
    "passed": [
      "Edge safe dynamic code should not fail when \"function-bind\" package is used"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/production/emit-decorator-metadata/index.test.ts": {
    "passed": [
      "emitDecoratorMetadata SWC option should compile with emitDecoratorMetadata enabled"
    ],
    "failed": [
      "emitDecoratorMetadata SWC option should compile with emitDecoratorMetadata enabled for API"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/production/enoent-during-require/index.test.ts": {
    "passed": ["ENOENT during require should show ENOENT error correctly"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/production/escheck-output/index.test.ts": {
    "passed": [],
    "failed": ["ES Check .next output should emit ES2020 with default"],
    "pending": [],
    "runtimeError": false
  },
  "test/production/eslint-plugin-deps/index.test.ts": {
    "passed": ["eslint plugin deps should work"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/production/export/index.test.ts": {
    "passed": [
      "static export API routes export Should throw if a route is matched",
      "static export Dynamic routes export Should throw error not matched route",
      "static export Render via SSR Should serve static files",
      "static export Render via SSR should render pages with dynamic imports",
      "static export Render via SSR should render the home page",
      "static export Render via browser should do run client side javascript",
      "static export Render via browser should navigate even if used a button inside <Link />",
      "static export Render via browser should not add trailing slash on Link when disabled",
      "static export Render via browser should render dynamic import components in the client",
      "static export Render via browser should render the home page",
      "static export should delete existing exported files",
      "static export should handle trailing slash in getStaticPaths",
      "static export should not duplicate /index with trailingSlash"
    ],
    "failed": [
      "static export Render via SSR Should render dynamic files with query",
      "static export Render via SSR Should serve public files",
      "static export Render via SSR should give empty object for query if there is no query",
      "static export Render via SSR should render _error on /404/index.html",
      "static export Render via SSR should render _error on 404.html even if not provided in exportPathMap",
      "static export Render via SSR should render a dynamically rendered custom url page",
      "static export Render via SSR should render a page with getInitialProps",
      "static export Render via SSR should render links correctly",
      "static export Render via SSR should render paths with extensions",
      "static export Render via SSR should render the about page",
      "static export Render via browser pages in the nested level: level1 should render the about page",
      "static export Render via browser pages in the nested level: level1 should render the home page",
      "static export Render via browser should add trailing slash on Link",
      "static export Render via browser should do navigations via Link",
      "static export Render via browser should do navigations via Router",
      "static export Render via browser should not add any slash on hash Link",
      "static export Render via browser should preserve hash symbol on empty hash Link",
      "static export Render via browser should preserve question mark on empty query Link",
      "static export Render via browser should render 404 when visiting a page that returns notFound from gsp",
      "static export Render via browser should render dynamic pages with custom urls",
      "static export Render via browser should render pages using getInitialProps",
      "static export Render via browser should render pages with url hash correctly",
      "static export Render via browser should support client side navigation",
      "static export Render via browser should update query after mount",
      "static export exportTrailingSlash is not ignored",
      "static export should honor trailingSlash for 404 page",
      "static export should only output 404.html without trailingSlash"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/production/exported-runtimes-value-validation/index.test.ts": {
    "passed": [
      "Exported runtimes value validation fails to build on malformed input"
    ],
    "failed": [
      "Exported runtimes value validation warns on unrecognized runtimes value"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/production/fallback-export-error/index.test.ts": {
    "passed": [
      "fallback export error should error with invalid exportPathMap",
      "fallback export error should have built",
      "fallback export error should not error with default exportPathMap"
    ],
    "failed": [
      "fallback export error should not error with valid exportPathMap"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/production/fatal-render-errror/index.test.ts": {
    "passed": [
      "fatal-render-errror should render page without error correctly"
    ],
    "failed": [
      "fatal-render-errror should handle fatal error in _app and _error without loop on client-transition",
      "fatal-render-errror should handle fatal error in _app and _error without loop on direct visit"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/production/generate-middleware-source-maps/index.test.ts": {
    "passed": ["Middleware source maps generates a source map for Edge API"],
    "failed": ["Middleware source maps generates a source map for Middleware"],
    "pending": [],
    "runtimeError": false
  },
  "test/production/handle-already-sent-response/handle-already-sent-response.test.ts": {
    "passed": ["handle already sent response should work with fetch"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/production/ipc-forbidden-headers/ipc-forbidden-headers.test.ts": {
    "passed": [
      "ipc-forbidden-headers should not error if expect header is included",
      "ipc-forbidden-headers should not error on content-length: 0 if request shouldn't contain a payload"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/production/jest/index.test.ts": {
    "passed": [],
    "failed": ["next/jest should work"],
    "pending": [],
    "runtimeError": true
  },
  "test/production/jest/new-link-behavior.test.ts": {
    "passed": ["next/jest newLinkBehavior should use new link behavior"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/production/jest/next-image-preload/next-image-preload.test.ts": {
    "passed": ["next/jest Should not throw preload is undefined error"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/production/jest/relay/relay-jest.test.ts": {
    "passed": [],
    "failed": ["next/jest should work"],
    "pending": [],
    "runtimeError": true
  },
  "test/production/jest/remove-react-properties/remove-react-properties-jest.test.ts": {
    "passed": [],
    "failed": ["next/jest data-testid should be removed in production"],
    "pending": [],
    "runtimeError": false
  },
  "test/production/jest/rsc/lib/utils.test.js": {
    "passed": ["works with server-only code"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/production/jest/transpile-packages.test.ts": {
    "passed": ["next/jest should work"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/production/middleware-typescript/test/index.test.ts": {
    "passed": [],
    "failed": ["middleware-typescript should have built and started"],
    "pending": [],
    "runtimeError": false
  },
  "test/production/next-font/babel-unsupported.test.ts": {
    "passed": [],
    "failed": ["@next/fon babel unsupported Build error when using babel"],
    "pending": [],
    "runtimeError": false
  },
  "test/production/next-font/telemetry-old.test.ts": {
    "passed": [],
    "failed": [
      "@next/font unused telemetry should not send @next/font/google and @next/font/local usage event",
      "@next/font used telemetry should send @next/font/google and @next/font/local usage event"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/production/next-font/telemetry.test.ts": {
    "passed": [],
    "failed": [
      "next/font unused telemetry should not send next/font/google and next/font/local usage event",
      "next/font used telemetry should send next/font/google and next/font/local usage event"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/production/pnpm-support/index.test.ts": {
    "passed": [],
    "failed": [
      "pnpm support should build with dependencies installed via pnpm",
      "pnpm support should execute client-side JS on each page in output: \"standalone\""
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/production/postcss-plugin-config-as-string/index.test.ts": {
    "passed": ["PostCSS plugin config as string should work"],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/production/prerender-prefetch/index.test.ts": {
    "passed": [
      "Prerender prefetch with optimisticClientCache disabled should handle failed data fetch and empty cache correctly",
      "Prerender prefetch with optimisticClientCache disabled should not attempt client cache update on link hover/touch start",
      "Prerender prefetch with optimisticClientCache disabled should not revalidate during prefetching",
      "Prerender prefetch with optimisticClientCache disabled should trigger revalidation after navigation",
      "Prerender prefetch with optimisticClientCache disabled should update cache using prefetch with unstable_skipClientCache",
      "Prerender prefetch with optimisticClientCache enabled should handle failed data fetch and empty cache correctly",
      "Prerender prefetch with optimisticClientCache enabled should not revalidate during prefetching",
      "Prerender prefetch with optimisticClientCache enabled should trigger revalidation after navigation",
      "Prerender prefetch with optimisticClientCache enabled should update cache using prefetch with unstable_skipClientCache"
    ],
    "failed": [
      "Prerender prefetch with optimisticClientCache disabled should update cache using router.push with unstable_skipClientCache",
      "Prerender prefetch with optimisticClientCache enabled should attempt cache update on link hover/touch start",
      "Prerender prefetch with optimisticClientCache enabled should update cache using router.push with unstable_skipClientCache"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/production/reading-request-body-in-middleware/index.test.ts": {
    "passed": [],
    "failed": [
      "reading request body in middleware passes the body greater than 64KiB to the api endpoint",
      "reading request body in middleware passes the body greater than 64KiB to the api endpoint when no body is consumed on middleware",
      "reading request body in middleware passes the body to the api endpoint",
      "reading request body in middleware passes the body to the api endpoint when no body is consumed on middleware",
      "reading request body in middleware rejects with 400 for get requests",
      "reading request body in middleware returns root: true for root calls"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/production/standalone-mode/basic/index.test.ts": {
    "passed": [],
    "failed": [
      "standalone mode - metadata routes should handle correctly not-found.js",
      "standalone mode - metadata routes should handle metadata icons correctly",
      "standalone mode - metadata routes should handle pages rendering correctly",
      "standalone mode - metadata routes should handle private _next unmatched route correctly"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/production/standalone-mode/ipv6/index.test.ts": {
    "passed": [],
    "failed": [
      "standalone mode: ipv6 hostname should load the page without any errors"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/production/standalone-mode/no-app-routes/index.test.ts": {
    "passed": [],
    "failed": [
      "standalone mode - no app routes should handle pages rendering correctly"
    ],
    "pending": [],
    "runtimeError": false
  },
  "test/production/standalone-mode/optimizecss/index.test.ts": {
    "passed": [],
    "failed": ["standalone mode and optimizeCss should work"],
    "pending": [],
    "runtimeError": true
  },
  "test/production/standalone-mode/required-server-files/required-server-files-app.test.ts": {
    "passed": [],
    "failed": [
      "should set-up next should not fail caching",
      "should set-up next should not send cache tags in minimal mode for SSR",
      "should set-up next should properly handle fallback for bot request",
      "should set-up next should properly handle prerender for bot request",
      "should set-up next should send cache tags in minimal mode for ISR"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/production/standalone-mode/required-server-files/required-server-files-i18n.test.ts": {
    "passed": [],
    "failed": [
      "should set-up next should bubble error correctly for API page",
      "should set-up next should bubble error correctly for gip page",
      "should set-up next should bubble error correctly for gsp page",
      "should set-up next should bubble error correctly for gssp page",
      "should set-up next should handle bad request correctly with rewrite",
      "should set-up next should have the correct asPath for fallback page",
      "should set-up next should have the correct asPath for fallback page locale",
      "should set-up next should match the index page correctly",
      "should set-up next should match the root dyanmic page correctly",
      "should set-up next should normalize catch-all rewrite query values correctly",
      "should set-up next should normalize optional values correctly for API page",
      "should set-up next should normalize optional values correctly for SSG page",
      "should set-up next should normalize optional values correctly for SSG page with encoded slash",
      "should set-up next should normalize optional values correctly for SSP page",
      "should set-up next should normalize optional values correctly for nested optional SSG page",
      "should set-up next should not apply locale redirect in minimal mode",
      "should set-up next should not apply trailingSlash redirect",
      "should set-up next should output required-server-files manifest correctly",
      "should set-up next should render SSR page correctly",
      "should set-up next should render SSR page correctly with x-matched-path",
      "should set-up next should render dynamic SSR page correctly",
      "should set-up next should render dynamic SSR page correctly with x-matched-path",
      "should set-up next should render fallback optional catch-all route correctly with x-matched-path and routes-matches",
      "should set-up next should render fallback page correctly",
      "should set-up next should render fallback page correctly with x-matched-path and routes-matches",
      "should set-up next should return data correctly with x-matched-path",
      "should set-up next should return data correctly with x-matched-path for optional catch-all route",
      "should set-up next should set correct SWR headers with notFound gsp",
      "should set-up next should set correct SWR headers with notFound gssp"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/production/standalone-mode/required-server-files/required-server-files.test.ts": {
    "passed": [],
    "failed": [
      "should set-up next `compress` should be `false` in nextEnv",
      "should set-up next `incrementalCacheHandlerPath` should have correct path",
      "should set-up next should bubble error correctly for API page",
      "should set-up next should bubble error correctly for gip page",
      "should set-up next should bubble error correctly for gsp page",
      "should set-up next should bubble error correctly for gssp page",
      "should set-up next should cap de-dupe previousCacheItem expires time",
      "should set-up next should correctly handle a mismatch in buildIds when normalizing next data",
      "should set-up next should de-dupe HTML/data requests",
      "should set-up next should favor valid route params over routes-matches",
      "should set-up next should favor valid route params over routes-matches optional",
      "should set-up next should handle bad request correctly with rewrite",
      "should set-up next should have correct asPath on dynamic SSG page correctly",
      "should set-up next should have correct asPath on dynamic SSG page fallback correctly",
      "should set-up next should have correct cache-control for notFound no revalidate",
      "should set-up next should have correct cache-control for notFound with revalidate",
      "should set-up next should have correct cache-control for redirect no revalidate",
      "should set-up next should have correct cache-control for redirect with revalidate",
      "should set-up next should have correct resolvedUrl from dynamic route",
      "should set-up next should have correct resolvedUrl from rewrite",
      "should set-up next should have correct resolvedUrl from rewrite with added query",
      "should set-up next should have the correct cache-control for props with no revalidate",
      "should set-up next should match the index page correctly",
      "should set-up next should match the root dynamic page correctly",
      "should set-up next should normalize catch-all rewrite query values correctly",
      "should set-up next should normalize index optional values correctly for API page",
      "should set-up next should normalize optional revalidations correctly for SSG page",
      "should set-up next should normalize optional values correctly for API page",
      "should set-up next should normalize optional values correctly for SSG page",
      "should set-up next should normalize optional values correctly for SSG page with encoded slash",
      "should set-up next should normalize optional values correctly for SSP page",
      "should set-up next should not 404 for onlyGenerated on-demand revalidate in minimal mode",
      "should set-up next should not apply trailingSlash redirect",
      "should set-up next should output middleware correctly",
      "should set-up next should output required-server-files manifest correctly",
      "should set-up next should read .env files and process.env",
      "should set-up next should render SSR page correctly",
      "should set-up next should render SSR page correctly with x-matched-path",
      "should set-up next should render dynamic SSR page correctly",
      "should set-up next should render dynamic SSR page correctly with x-matched-path",
      "should set-up next should render fallback optional catch-all route correctly with x-matched-path and routes-matches",
      "should set-up next should render fallback page correctly",
      "should set-up next should render fallback page correctly with x-matched-path and routes-matches",
      "should set-up next should resolve correctly when a redirect is returned",
      "should set-up next should return data correctly with x-matched-path",
      "should set-up next should return data correctly with x-matched-path for optional catch-all route",
      "should set-up next should run middleware correctly (without minimalMode, with wasm)",
      "should set-up next should set correct SWR headers with notFound gsp",
      "should set-up next should set correct SWR headers with notFound gssp",
      "should set-up next should show invariant when an automatic static page is requested",
      "should set-up next should warn when \"next\" is imported directly"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/production/standalone-mode/response-cache/index.test.ts": {
    "passed": [],
    "failed": [
      "minimal-mode-response-cache app router revalidate should work with previous response cache",
      "minimal-mode-response-cache app router revalidate should work with previous response cache dynamic",
      "minimal-mode-response-cache should have correct \"Started server on\" log",
      "minimal-mode-response-cache should have correct responses"
    ],
    "pending": [],
    "runtimeError": true
  },
  "test/production/standalone-mode/type-module/index.test.ts": {
    "passed": [],
    "failed": ["type-module should work"],
    "pending": [],
    "runtimeError": true
  },
  "test/production/supports-module-resolution-nodenext/supports-moduleresolution-nodenext.test.ts": {
    "passed": [
      "Does not override tsconfig moduleResolution field during build boots and renders without throwing an error"
    ],
    "failed": [],
    "pending": [],
    "runtimeError": false
  },
  "test/production/typescript-basic/index.test.ts": {
    "passed": [
      "TypeScript basic have built and started correctly",
      "TypeScript basic should not have eslint setup started"
    ],
    "failed": ["TypeScript basic should work with babel"],
    "pending": [],
    "runtimeError": false
  }
}
